2025-02-11 09:23:36,847 INFO: [cached since 684.1s ago] {'pk_1': 6}
2025-02-11 09:23:36,852 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:23:36,852 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:23:36,852 INFO: Task ID 93 fetched with parent ID: 86
2025-02-11 09:23:36,852 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:36,852 INFO: [cached since 684.1s ago] {'pk_1': 86}
2025-02-11 09:23:36,853 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:36,854 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 1, 16, 19, 22, 36, 320840), None)
2025-02-11 09:23:36,854 INFO: Task with ID 93 fetched successfully.
2025-02-11 09:23:36,854 DEBUG: Fetched Task Data: {'id': 93, 'name': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-01-16T19:22:36.322637', 'contributor_name': 'Unassigned', 'parent': {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-01-16T19:22:36.320840'}}
2025-02-11 09:23:36,854 INFO: Task details fetched successfully for Task ID 93.
2025-02-11 09:23:36,854 INFO: ROLLBACK
2025-02-11 09:23:36,854 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:36] "GET /api/tasks/93 HTTP/1.1" 200 -
2025-02-11 09:23:37,363 INFO: Fetching task details for Task ID 86.
2025-02-11 09:23:37,363 INFO: Fetching task with ID 86.
2025-02-11 09:23:37,364 INFO: BEGIN (implicit)
2025-02-11 09:23:37,364 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:37,364 INFO: [cached since 684.6s ago] {'pk_1': 86}
2025-02-11 09:23:37,365 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:37,365 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 1, 16, 19, 22, 36, 320840), None)
2025-02-11 09:23:37,365 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d2810>, 'sort_order': 60, 'task_type': 'User Story', 'contributor_id': None, 'id': 86, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 320840), 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'parent_id': 84, 'story_points': 5, 'completed_date': None}
2025-02-11 09:23:37,365 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:23:37,365 INFO: [cached since 684.6s ago] {'pk_1': 6}
2025-02-11 09:23:37,365 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:23:37,366 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:23:37,366 INFO: Task ID 86 fetched with parent ID: 84
2025-02-11 09:23:37,366 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:37,366 INFO: [cached since 684.6s ago] {'pk_1': 84}
2025-02-11 09:23:37,366 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:37,367 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:23:37,367 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:37,367 INFO: [cached since 684.1s ago] {'pk_1': 5}
2025-02-11 09:23:37,367 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:37,367 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:37,367 INFO: Task with ID 86 fetched successfully.
2025-02-11 09:23:37,367 DEBUG: Fetched Task Data: {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-01-16T19:22:36.320840', 'contributor_name': 'Unassigned', 'parent': {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560'}}
2025-02-11 09:23:37,367 INFO: Task details fetched successfully for Task ID 86.
2025-02-11 09:23:37,368 INFO: ROLLBACK
2025-02-11 09:23:37,368 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:37] "GET /api/tasks/86 HTTP/1.1" 200 -
2025-02-11 09:23:38,077 INFO: Fetching task details for Task ID 93.
2025-02-11 09:23:38,077 INFO: Fetching task with ID 93.
2025-02-11 09:23:38,078 INFO: BEGIN (implicit)
2025-02-11 09:23:38,078 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:38,078 INFO: [cached since 685.3s ago] {'pk_1': 93}
2025-02-11 09:23:38,079 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:38,079 DEBUG: Row (93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 1, 16, 19, 22, 36, 322637), None)
2025-02-11 09:23:38,081 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3dd0>, 'sort_order': 61, 'task_type': 'Subtask', 'contributor_id': None, 'id': 93, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 322637), 'name': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'parent_id': 86, 'story_points': 5, 'completed_date': None}
2025-02-11 09:23:38,081 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:23:38,081 INFO: [cached since 685.3s ago] {'pk_1': 6}
2025-02-11 09:23:38,082 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:23:38,083 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:23:38,083 INFO: Task ID 93 fetched with parent ID: 86
2025-02-11 09:23:38,084 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:38,084 INFO: [cached since 685.3s ago] {'pk_1': 86}
2025-02-11 09:23:38,084 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:38,085 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 1, 16, 19, 22, 36, 320840), None)
2025-02-11 09:23:38,085 INFO: Task with ID 93 fetched successfully.
2025-02-11 09:23:38,085 DEBUG: Fetched Task Data: {'id': 93, 'name': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-01-16T19:22:36.322637', 'contributor_name': 'Unassigned', 'parent': {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-01-16T19:22:36.320840'}}
2025-02-11 09:23:38,085 INFO: Task details fetched successfully for Task ID 93.
2025-02-11 09:23:38,086 INFO: ROLLBACK
2025-02-11 09:23:38,086 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:38] "GET /api/tasks/93 HTTP/1.1" 200 -
2025-02-11 09:23:38,291 INFO: Fetching task details for Task ID 86.
2025-02-11 09:23:38,292 INFO: Fetching task with ID 86.
2025-02-11 09:23:38,293 INFO: BEGIN (implicit)
2025-02-11 09:23:38,293 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:38,293 INFO: [cached since 685.5s ago] {'pk_1': 86}
2025-02-11 09:23:38,294 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:38,295 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 1, 16, 19, 22, 36, 320840), None)
2025-02-11 09:23:38,295 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3770>, 'sort_order': 60, 'task_type': 'User Story', 'contributor_id': None, 'id': 86, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 320840), 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'parent_id': 84, 'story_points': 5, 'completed_date': None}
2025-02-11 09:23:38,295 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:23:38,295 INFO: [cached since 685.5s ago] {'pk_1': 6}
2025-02-11 09:23:38,297 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:23:38,297 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:23:38,298 INFO: Task ID 86 fetched with parent ID: 84
2025-02-11 09:23:38,298 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:38,299 INFO: [cached since 685.5s ago] {'pk_1': 84}
2025-02-11 09:23:38,299 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:38,300 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:23:38,301 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:38,301 INFO: [cached since 685s ago] {'pk_1': 5}
2025-02-11 09:23:38,302 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:38,302 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:38,302 INFO: Task with ID 86 fetched successfully.
2025-02-11 09:23:38,304 DEBUG: Fetched Task Data: {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-01-16T19:22:36.320840', 'contributor_name': 'Unassigned', 'parent': {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560'}}
2025-02-11 09:23:38,304 INFO: Task details fetched successfully for Task ID 86.
2025-02-11 09:23:38,304 INFO: ROLLBACK
2025-02-11 09:23:38,305 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:38] "GET /api/tasks/86 HTTP/1.1" 200 -
2025-02-11 09:23:41,275 INFO: Assigning contributor to task ID 93
2025-02-11 09:23:41,275 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:23:41,275 INFO: Contributor ID received: 5
2025-02-11 09:23:41,276 INFO: BEGIN (implicit)
2025-02-11 09:23:41,277 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:41,277 INFO: [cached since 688.5s ago] {'pk_1': 93}
2025-02-11 09:23:41,278 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:41,278 DEBUG: Row (93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 1, 16, 19, 22, 36, 322637), None)
2025-02-11 09:23:41,279 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:41,279 INFO: [cached since 237.3s ago] {'pk_1': 5}
2025-02-11 09:23:41,280 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:41,280 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:41,282 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:23:41,282 INFO: [cached since 237.3s ago] {'pk_1': 6}
2025-02-11 09:23:41,283 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:23:41,284 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:23:41,285 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:23:41,285 INFO: [cached since 237.3s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 23, 41, 285022, tzinfo=datetime.timezone.utc), 'task_id': 93}
2025-02-11 09:23:41,286 INFO: COMMIT
2025-02-11 09:23:41,288 INFO: BEGIN (implicit)
2025-02-11 09:23:41,289 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:41,289 INFO: [cached since 237.3s ago] {'pk_1': 5}
2025-02-11 09:23:41,290 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:41,290 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:41,291 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:41,291 INFO: [cached since 237.3s ago] {'pk_1': 93}
2025-02-11 09:23:41,292 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:41,292 DEBUG: Row (93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 23, 41, 285022), None)
2025-02-11 09:23:41,293 INFO: ROLLBACK
2025-02-11 09:23:41,293 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:41] "POST /tasks/93/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:23:42,758 INFO: save_task triggered
2025-02-11 09:23:42,758 INFO: Payload received: {'title': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_id': '93', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 5, 'parent_id': 86, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:23:42,758 INFO: Update request for Task ID: 93
2025-02-11 09:23:42,759 INFO: BEGIN (implicit)
2025-02-11 09:23:42,759 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:42,759 INFO: [cached since 690s ago] {'pk_1': '93'}
2025-02-11 09:23:42,760 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:42,761 DEBUG: Row (93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 23, 41, 285022), None)
2025-02-11 09:23:42,761 DEBUG: Received update payload for Task ID 93: {'title': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_id': '93', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 5, 'parent_id': 86, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:23:42,761 DEBUG: Validating parent_id change for Task 93: 86
2025-02-11 09:23:42,761 INFO: Checking circular reference for Task 93 with Parent ID: 86
2025-02-11 09:23:42,762 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:23:42,762 INFO: [cached since 100.5s ago] {'id_1': 86, 'param_1': 1}
2025-02-11 09:23:42,764 DEBUG: Col ('task_parent_id',)
2025-02-11 09:23:42,764 DEBUG: Row (84,)
2025-02-11 09:23:42,765 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:23:42,765 INFO: [cached since 100.5s ago] {'id_1': 84, 'param_1': 1}
2025-02-11 09:23:42,766 DEBUG: Col ('task_parent_id',)
2025-02-11 09:23:42,766 DEBUG: Row (None,)
2025-02-11 09:23:42,766 INFO: Circular reference check passed.
2025-02-11 09:23:42,767 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:23:42,767 INFO: [cached since 100.5s ago] {'id_1': 86, 'param_1': 1}
2025-02-11 09:23:42,768 DEBUG: Col ('task_task_type',)
2025-02-11 09:23:42,768 DEBUG: Row ('User Story',)
2025-02-11 09:23:42,768 DEBUG: Validating hierarchy: Task 93, Parent Type: User Story
2025-02-11 09:23:42,768 INFO: Hierarchy validation passed for Task 93.
2025-02-11 09:23:42,768 INFO: Validation passed for parent_id: 86
2025-02-11 09:23:42,768 DEBUG: Validating task_type change for Task 93: Subtask
2025-02-11 09:23:42,770 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:23:42,770 INFO: [cached since 100.5s ago] {'id_1': 86, 'param_1': 1}
2025-02-11 09:23:42,770 DEBUG: Col ('task_task_type',)
2025-02-11 09:23:42,771 DEBUG: Row ('User Story',)
2025-02-11 09:23:42,771 DEBUG: Validating hierarchy: Task Type: Subtask, Parent Type: User Story
2025-02-11 09:23:42,771 INFO: Hierarchy validation passed for Task 93.
2025-02-11 09:23:42,771 INFO: Validation passed for task_type: Subtask
2025-02-11 09:23:42,771 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:23:42,772 INFO: [cached since 100.5s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), 'task_id': 93}
2025-02-11 09:23:42,772 INFO: COMMIT
2025-02-11 09:23:42,773 INFO: Task ID 93 updated successfully.
2025-02-11 09:23:42,774 INFO: BEGIN (implicit)
2025-02-11 09:23:42,774 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:42,774 INFO: [cached since 238.7s ago] {'pk_1': 93}
2025-02-11 09:23:42,776 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:42,777 DEBUG: Row (93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None)
2025-02-11 09:23:42,777 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:42,777 INFO: [cached since 689.5s ago] {'pk_1': 5}
2025-02-11 09:23:42,778 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:42,778 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:42,778 INFO: ROLLBACK
2025-02-11 09:23:42,779 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:42] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:23:45,589 INFO: Fetching task details for Task ID 86.
2025-02-11 09:23:45,589 INFO: Fetching task with ID 86.
2025-02-11 09:23:45,590 INFO: BEGIN (implicit)
2025-02-11 09:23:45,590 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:45,590 INFO: [cached since 692.8s ago] {'pk_1': 86}
2025-02-11 09:23:45,592 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:45,592 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 1, 16, 19, 22, 36, 320840), None)
2025-02-11 09:23:45,593 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d32f0>, 'sort_order': 60, 'task_type': 'User Story', 'contributor_id': None, 'id': 86, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 320840), 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'parent_id': 84, 'story_points': 5, 'completed_date': None}
2025-02-11 09:23:45,593 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:23:45,593 INFO: [cached since 692.8s ago] {'pk_1': 6}
2025-02-11 09:23:45,594 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:23:45,594 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:23:45,594 INFO: Task ID 86 fetched with parent ID: 84
2025-02-11 09:23:45,595 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:45,595 INFO: [cached since 692.8s ago] {'pk_1': 84}
2025-02-11 09:23:45,595 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:45,596 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:23:45,597 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:45,598 INFO: [cached since 692.3s ago] {'pk_1': 5}
2025-02-11 09:23:45,598 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:45,598 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:45,599 INFO: Task with ID 86 fetched successfully.
2025-02-11 09:23:45,599 DEBUG: Fetched Task Data: {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-01-16T19:22:36.320840', 'contributor_name': 'Unassigned', 'parent': {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560'}}
2025-02-11 09:23:45,599 INFO: Task details fetched successfully for Task ID 86.
2025-02-11 09:23:45,599 INFO: ROLLBACK
2025-02-11 09:23:45,599 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:45] "GET /api/tasks/86 HTTP/1.1" 200 -
2025-02-11 09:23:46,110 INFO: Fetching task details for Task ID 84.
2025-02-11 09:23:46,110 INFO: Fetching task with ID 84.
2025-02-11 09:23:46,111 INFO: BEGIN (implicit)
2025-02-11 09:23:46,112 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:46,112 INFO: [cached since 693.4s ago] {'pk_1': 84}
2025-02-11 09:23:46,114 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:46,115 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:23:46,116 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3050>, 'sort_order': 55, 'task_type': 'Epic', 'contributor_id': 5, 'id': 84, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'parent_id': None, 'story_points': 8, 'completed_date': None}
2025-02-11 09:23:46,117 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:23:46,117 INFO: [cached since 693.4s ago] {'pk_1': 6}
2025-02-11 09:23:46,118 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:23:46,119 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:23:46,119 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:46,120 INFO: [cached since 692.8s ago] {'pk_1': 5}
2025-02-11 09:23:46,120 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:46,121 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:46,121 INFO: Task ID 84 fetched with parent ID: None
2025-02-11 09:23:46,121 INFO: Task with ID 84 fetched successfully.
2025-02-11 09:23:46,121 DEBUG: Fetched Task Data: {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560', 'contributor_name': 'Fredrik Cederborg', 'parent': None}
2025-02-11 09:23:46,122 INFO: Task details fetched successfully for Task ID 84.
2025-02-11 09:23:46,122 INFO: ROLLBACK
2025-02-11 09:23:46,123 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:46] "GET /api/tasks/84 HTTP/1.1" 200 -
2025-02-11 09:23:46,829 INFO: Fetching task details for Task ID 86.
2025-02-11 09:23:46,829 INFO: Fetching task with ID 86.
2025-02-11 09:23:46,830 INFO: BEGIN (implicit)
2025-02-11 09:23:46,831 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:46,831 INFO: [cached since 694.1s ago] {'pk_1': 86}
2025-02-11 09:23:46,832 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:46,832 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 1, 16, 19, 22, 36, 320840), None)
2025-02-11 09:23:46,832 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d0b90>, 'sort_order': 60, 'task_type': 'User Story', 'contributor_id': None, 'id': 86, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 320840), 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'parent_id': 84, 'story_points': 5, 'completed_date': None}
2025-02-11 09:23:46,833 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:23:46,833 INFO: [cached since 694.1s ago] {'pk_1': 6}
2025-02-11 09:23:46,834 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:23:46,834 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:23:46,835 INFO: Task ID 86 fetched with parent ID: 84
2025-02-11 09:23:46,836 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:46,836 INFO: [cached since 694.1s ago] {'pk_1': 84}
2025-02-11 09:23:46,837 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:46,837 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:23:46,838 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:46,839 INFO: [cached since 693.6s ago] {'pk_1': 5}
2025-02-11 09:23:46,844 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:46,845 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:46,846 INFO: Task with ID 86 fetched successfully.
2025-02-11 09:23:46,846 DEBUG: Fetched Task Data: {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-01-16T19:22:36.320840', 'contributor_name': 'Unassigned', 'parent': {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560'}}
2025-02-11 09:23:46,847 INFO: Task details fetched successfully for Task ID 86.
2025-02-11 09:23:46,847 INFO: ROLLBACK
2025-02-11 09:23:46,848 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:46] "GET /api/tasks/86 HTTP/1.1" 200 -
2025-02-11 09:23:47,054 INFO: Fetching task details for Task ID 84.
2025-02-11 09:23:47,054 INFO: Fetching task with ID 84.
2025-02-11 09:23:47,055 INFO: BEGIN (implicit)
2025-02-11 09:23:47,055 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:47,055 INFO: [cached since 694.3s ago] {'pk_1': 84}
2025-02-11 09:23:47,057 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:47,057 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:23:47,058 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3ef0>, 'sort_order': 55, 'task_type': 'Epic', 'contributor_id': 5, 'id': 84, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'parent_id': None, 'story_points': 8, 'completed_date': None}
2025-02-11 09:23:47,059 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:23:47,059 INFO: [cached since 694.3s ago] {'pk_1': 6}
2025-02-11 09:23:47,059 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:23:47,060 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:23:47,060 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:47,060 INFO: [cached since 693.8s ago] {'pk_1': 5}
2025-02-11 09:23:47,060 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:47,061 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:47,061 INFO: Task ID 84 fetched with parent ID: None
2025-02-11 09:23:47,061 INFO: Task with ID 84 fetched successfully.
2025-02-11 09:23:47,061 DEBUG: Fetched Task Data: {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560', 'contributor_name': 'Fredrik Cederborg', 'parent': None}
2025-02-11 09:23:47,061 INFO: Task details fetched successfully for Task ID 84.
2025-02-11 09:23:47,061 INFO: ROLLBACK
2025-02-11 09:23:47,062 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:47] "GET /api/tasks/84 HTTP/1.1" 200 -
2025-02-11 09:23:50,023 INFO: Assigning contributor to task ID 86
2025-02-11 09:23:50,024 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:23:50,025 INFO: Contributor ID received: 5
2025-02-11 09:23:50,026 INFO: BEGIN (implicit)
2025-02-11 09:23:50,026 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:50,026 INFO: [cached since 697.3s ago] {'pk_1': 86}
2025-02-11 09:23:50,027 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:50,027 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 1, 16, 19, 22, 36, 320840), None)
2025-02-11 09:23:50,028 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:50,028 INFO: [cached since 246s ago] {'pk_1': 5}
2025-02-11 09:23:50,029 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:50,029 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:50,030 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:23:50,031 INFO: [cached since 246s ago] {'pk_1': 6}
2025-02-11 09:23:50,032 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:23:50,032 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:23:50,033 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:23:50,033 INFO: [cached since 246s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 23, 50, 33532, tzinfo=datetime.timezone.utc), 'task_id': 86}
2025-02-11 09:23:50,035 INFO: COMMIT
2025-02-11 09:23:50,036 INFO: BEGIN (implicit)
2025-02-11 09:23:50,036 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:50,036 INFO: [cached since 246s ago] {'pk_1': 5}
2025-02-11 09:23:50,037 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:50,037 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:50,038 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:50,038 INFO: [cached since 246s ago] {'pk_1': 86}
2025-02-11 09:23:50,039 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:50,039 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 9, 23, 50, 33532), None)
2025-02-11 09:23:50,040 INFO: ROLLBACK
2025-02-11 09:23:50,040 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:50] "POST /tasks/86/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:23:51,257 INFO: save_task triggered
2025-02-11 09:23:51,258 INFO: Payload received: {'title': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_id': '86', 'project_id': '6', 'task_type': 'User Story', 'story_points': 5, 'parent_id': 84, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:23:51,258 INFO: Update request for Task ID: 86
2025-02-11 09:23:51,259 INFO: BEGIN (implicit)
2025-02-11 09:23:51,259 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:51,259 INFO: [cached since 698.5s ago] {'pk_1': '86'}
2025-02-11 09:23:51,260 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:51,261 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 9, 23, 50, 33532), None)
2025-02-11 09:23:51,261 DEBUG: Received update payload for Task ID 86: {'title': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_id': '86', 'project_id': '6', 'task_type': 'User Story', 'story_points': 5, 'parent_id': 84, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:23:51,261 DEBUG: Validating parent_id change for Task 86: 84
2025-02-11 09:23:51,261 INFO: Checking circular reference for Task 86 with Parent ID: 84
2025-02-11 09:23:51,262 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:23:51,263 INFO: [cached since 109s ago] {'id_1': 84, 'param_1': 1}
2025-02-11 09:23:51,264 DEBUG: Col ('task_parent_id',)
2025-02-11 09:23:51,264 DEBUG: Row (None,)
2025-02-11 09:23:51,264 INFO: Circular reference check passed.
2025-02-11 09:23:51,265 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:23:51,265 INFO: [cached since 109s ago] {'id_1': 84, 'param_1': 1}
2025-02-11 09:23:51,266 DEBUG: Col ('task_task_type',)
2025-02-11 09:23:51,266 DEBUG: Row ('Epic',)
2025-02-11 09:23:51,266 DEBUG: Validating hierarchy: Task 86, Parent Type: Epic
2025-02-11 09:23:51,266 INFO: Hierarchy validation passed for Task 86.
2025-02-11 09:23:51,266 INFO: Validation passed for parent_id: 84
2025-02-11 09:23:51,267 DEBUG: Validating task_type change for Task 86: User Story
2025-02-11 09:23:51,268 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:23:51,268 INFO: [cached since 109s ago] {'id_1': 84, 'param_1': 1}
2025-02-11 09:23:51,269 DEBUG: Col ('task_task_type',)
2025-02-11 09:23:51,269 DEBUG: Row ('Epic',)
2025-02-11 09:23:51,269 DEBUG: Validating hierarchy: Task Type: User Story, Parent Type: Epic
2025-02-11 09:23:51,269 INFO: Hierarchy validation passed for Task 86.
2025-02-11 09:23:51,269 INFO: Validation passed for task_type: User Story
2025-02-11 09:23:51,269 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:23:51,269 INFO: [cached since 109s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), 'task_id': 86}
2025-02-11 09:23:51,270 INFO: COMMIT
2025-02-11 09:23:51,270 INFO: Task ID 86 updated successfully.
2025-02-11 09:23:51,270 INFO: BEGIN (implicit)
2025-02-11 09:23:51,271 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:51,271 INFO: [cached since 247.2s ago] {'pk_1': 86}
2025-02-11 09:23:51,271 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:51,271 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None)
2025-02-11 09:23:51,271 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:51,271 INFO: [cached since 698s ago] {'pk_1': 5}
2025-02-11 09:23:51,271 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:51,272 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:51,272 INFO: ROLLBACK
2025-02-11 09:23:51,272 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:51] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:23:53,473 INFO: Fetching task details for Task ID 89.
2025-02-11 09:23:53,474 INFO: Fetching task with ID 89.
2025-02-11 09:23:53,474 INFO: BEGIN (implicit)
2025-02-11 09:23:53,475 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:53,475 INFO: [cached since 700.7s ago] {'pk_1': 89}
2025-02-11 09:23:53,476 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:53,476 DEBUG: Row (89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 1, 16, 19, 22, 36, 319281), None)
2025-02-11 09:23:53,476 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3590>, 'sort_order': 59, 'task_type': 'Subtask', 'contributor_id': None, 'id': 89, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 319281), 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'parent_id': 85, 'story_points': 5, 'completed_date': None}
2025-02-11 09:23:53,477 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:23:53,477 INFO: [cached since 700.7s ago] {'pk_1': 6}
2025-02-11 09:23:53,478 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:23:53,478 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:23:53,478 INFO: Task ID 89 fetched with parent ID: 85
2025-02-11 09:23:53,479 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:53,479 INFO: [cached since 700.7s ago] {'pk_1': 85}
2025-02-11 09:23:53,480 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:53,480 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), None)
2025-02-11 09:23:53,481 INFO: Task with ID 89 fetched successfully.
2025-02-11 09:23:53,481 DEBUG: Fetched Task Data: {'id': 89, 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-01-16T19:22:36.319281', 'contributor_name': 'Unassigned', 'parent': {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-01-16T19:22:36.313789'}}
2025-02-11 09:23:53,481 INFO: Task details fetched successfully for Task ID 89.
2025-02-11 09:23:53,481 INFO: ROLLBACK
2025-02-11 09:23:53,482 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:53] "GET /api/tasks/89 HTTP/1.1" 200 -
2025-02-11 09:23:53,989 INFO: Fetching task details for Task ID 85.
2025-02-11 09:23:53,989 INFO: Fetching task with ID 85.
2025-02-11 09:23:53,990 INFO: BEGIN (implicit)
2025-02-11 09:23:53,990 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:53,990 INFO: [cached since 701.2s ago] {'pk_1': 85}
2025-02-11 09:23:53,991 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:53,992 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), None)
2025-02-11 09:23:53,992 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3050>, 'sort_order': 56, 'task_type': 'User Story', 'contributor_id': None, 'id': 85, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'parent_id': 84, 'story_points': 5, 'completed_date': None}
2025-02-11 09:23:53,993 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:23:53,993 INFO: [cached since 701.2s ago] {'pk_1': 6}
2025-02-11 09:23:53,993 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:23:53,994 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:23:53,994 INFO: Task ID 85 fetched with parent ID: 84
2025-02-11 09:23:53,995 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:53,997 INFO: [cached since 701.2s ago] {'pk_1': 84}
2025-02-11 09:23:53,998 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:53,998 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:23:53,999 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:53,999 INFO: [cached since 700.7s ago] {'pk_1': 5}
2025-02-11 09:23:54,000 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:54,000 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:54,002 INFO: Task with ID 85 fetched successfully.
2025-02-11 09:23:54,002 DEBUG: Fetched Task Data: {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-01-16T19:22:36.313789', 'contributor_name': 'Unassigned', 'parent': {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560'}}
2025-02-11 09:23:54,002 INFO: Task details fetched successfully for Task ID 85.
2025-02-11 09:23:54,003 INFO: ROLLBACK
2025-02-11 09:23:54,003 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:54] "GET /api/tasks/85 HTTP/1.1" 200 -
2025-02-11 09:23:54,711 INFO: Fetching task details for Task ID 89.
2025-02-11 09:23:54,711 INFO: Fetching task with ID 89.
2025-02-11 09:23:54,712 INFO: BEGIN (implicit)
2025-02-11 09:23:54,712 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:54,713 INFO: [cached since 702s ago] {'pk_1': 89}
2025-02-11 09:23:54,714 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:54,714 DEBUG: Row (89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 1, 16, 19, 22, 36, 319281), None)
2025-02-11 09:23:54,714 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3d70>, 'sort_order': 59, 'task_type': 'Subtask', 'contributor_id': None, 'id': 89, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 319281), 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'parent_id': 85, 'story_points': 5, 'completed_date': None}
2025-02-11 09:23:54,715 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:23:54,715 INFO: [cached since 702s ago] {'pk_1': 6}
2025-02-11 09:23:54,715 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:23:54,715 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:23:54,716 INFO: Task ID 89 fetched with parent ID: 85
2025-02-11 09:23:54,716 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:54,717 INFO: [cached since 702s ago] {'pk_1': 85}
2025-02-11 09:23:54,718 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:54,718 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), None)
2025-02-11 09:23:54,718 INFO: Task with ID 89 fetched successfully.
2025-02-11 09:23:54,718 DEBUG: Fetched Task Data: {'id': 89, 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-01-16T19:22:36.319281', 'contributor_name': 'Unassigned', 'parent': {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-01-16T19:22:36.313789'}}
2025-02-11 09:23:54,719 INFO: Task details fetched successfully for Task ID 89.
2025-02-11 09:23:54,719 INFO: ROLLBACK
2025-02-11 09:23:54,719 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:54] "GET /api/tasks/89 HTTP/1.1" 200 -
2025-02-11 09:23:54,925 INFO: Fetching task details for Task ID 85.
2025-02-11 09:23:54,925 INFO: Fetching task with ID 85.
2025-02-11 09:23:54,926 INFO: BEGIN (implicit)
2025-02-11 09:23:54,927 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:54,927 INFO: [cached since 702.2s ago] {'pk_1': 85}
2025-02-11 09:23:54,928 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:54,928 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), None)
2025-02-11 09:23:54,928 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d0b90>, 'sort_order': 56, 'task_type': 'User Story', 'contributor_id': None, 'id': 85, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'parent_id': 84, 'story_points': 5, 'completed_date': None}
2025-02-11 09:23:54,929 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:23:54,929 INFO: [cached since 702.2s ago] {'pk_1': 6}
2025-02-11 09:23:54,930 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:23:54,932 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:23:54,932 INFO: Task ID 85 fetched with parent ID: 84
2025-02-11 09:23:54,933 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:54,933 INFO: [cached since 702.2s ago] {'pk_1': 84}
2025-02-11 09:23:54,934 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:54,934 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:23:54,935 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:54,935 INFO: [cached since 701.7s ago] {'pk_1': 5}
2025-02-11 09:23:54,936 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:54,936 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:54,936 INFO: Task with ID 85 fetched successfully.
2025-02-11 09:23:54,937 DEBUG: Fetched Task Data: {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-01-16T19:22:36.313789', 'contributor_name': 'Unassigned', 'parent': {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560'}}
2025-02-11 09:23:54,937 INFO: Task details fetched successfully for Task ID 85.
2025-02-11 09:23:54,937 INFO: ROLLBACK
2025-02-11 09:23:54,938 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:54] "GET /api/tasks/85 HTTP/1.1" 200 -
2025-02-11 09:23:57,190 INFO: Assigning contributor to task ID 89
2025-02-11 09:23:57,190 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:23:57,191 INFO: Contributor ID received: 5
2025-02-11 09:23:57,191 INFO: BEGIN (implicit)
2025-02-11 09:23:57,192 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:57,192 INFO: [cached since 704.4s ago] {'pk_1': 89}
2025-02-11 09:23:57,193 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:57,193 DEBUG: Row (89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 1, 16, 19, 22, 36, 319281), None)
2025-02-11 09:23:57,194 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:57,194 INFO: [cached since 253.2s ago] {'pk_1': 5}
2025-02-11 09:23:57,195 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:57,195 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:57,196 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:23:57,196 INFO: [cached since 253.2s ago] {'pk_1': 6}
2025-02-11 09:23:57,197 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:23:57,198 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:23:57,199 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:23:57,199 INFO: [cached since 253.2s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 23, 57, 199102, tzinfo=datetime.timezone.utc), 'task_id': 89}
2025-02-11 09:23:57,200 INFO: COMMIT
2025-02-11 09:23:57,202 INFO: BEGIN (implicit)
2025-02-11 09:23:57,203 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:57,203 INFO: [cached since 253.2s ago] {'pk_1': 5}
2025-02-11 09:23:57,203 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:57,203 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:57,204 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:57,204 INFO: [cached since 253.2s ago] {'pk_1': 89}
2025-02-11 09:23:57,204 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:57,204 DEBUG: Row (89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 9, 23, 57, 199102), None)
2025-02-11 09:23:57,204 INFO: ROLLBACK
2025-02-11 09:23:57,205 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:57] "POST /tasks/89/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:23:58,424 INFO: save_task triggered
2025-02-11 09:23:58,424 INFO: Payload received: {'title': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_id': '89', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 5, 'parent_id': 85, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:23:58,424 INFO: Update request for Task ID: 89
2025-02-11 09:23:58,425 INFO: BEGIN (implicit)
2025-02-11 09:23:58,425 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:58,426 INFO: [cached since 705.7s ago] {'pk_1': '89'}
2025-02-11 09:23:58,427 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:58,427 DEBUG: Row (89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 9, 23, 57, 199102), None)
2025-02-11 09:23:58,427 DEBUG: Received update payload for Task ID 89: {'title': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_id': '89', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 5, 'parent_id': 85, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:23:58,427 DEBUG: Validating parent_id change for Task 89: 85
2025-02-11 09:23:58,427 INFO: Checking circular reference for Task 89 with Parent ID: 85
2025-02-11 09:23:58,428 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:23:58,429 INFO: [cached since 116.2s ago] {'id_1': 85, 'param_1': 1}
2025-02-11 09:23:58,429 DEBUG: Col ('task_parent_id',)
2025-02-11 09:23:58,430 DEBUG: Row (84,)
2025-02-11 09:23:58,431 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:23:58,431 INFO: [cached since 116.2s ago] {'id_1': 84, 'param_1': 1}
2025-02-11 09:23:58,431 DEBUG: Col ('task_parent_id',)
2025-02-11 09:23:58,432 DEBUG: Row (None,)
2025-02-11 09:23:58,432 INFO: Circular reference check passed.
2025-02-11 09:23:58,432 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:23:58,432 INFO: [cached since 116.2s ago] {'id_1': 85, 'param_1': 1}
2025-02-11 09:23:58,433 DEBUG: Col ('task_task_type',)
2025-02-11 09:23:58,433 DEBUG: Row ('User Story',)
2025-02-11 09:23:58,433 DEBUG: Validating hierarchy: Task 89, Parent Type: User Story
2025-02-11 09:23:58,433 INFO: Hierarchy validation passed for Task 89.
2025-02-11 09:23:58,433 INFO: Validation passed for parent_id: 85
2025-02-11 09:23:58,434 DEBUG: Validating task_type change for Task 89: Subtask
2025-02-11 09:23:58,435 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:23:58,435 INFO: [cached since 116.2s ago] {'id_1': 85, 'param_1': 1}
2025-02-11 09:23:58,436 DEBUG: Col ('task_task_type',)
2025-02-11 09:23:58,436 DEBUG: Row ('User Story',)
2025-02-11 09:23:58,436 DEBUG: Validating hierarchy: Task Type: Subtask, Parent Type: User Story
2025-02-11 09:23:58,436 INFO: Hierarchy validation passed for Task 89.
2025-02-11 09:23:58,436 INFO: Validation passed for task_type: Subtask
2025-02-11 09:23:58,436 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:23:58,436 INFO: [cached since 116.2s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), 'task_id': 89}
2025-02-11 09:23:58,437 INFO: COMMIT
2025-02-11 09:23:58,437 INFO: Task ID 89 updated successfully.
2025-02-11 09:23:58,437 INFO: BEGIN (implicit)
2025-02-11 09:23:58,437 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:23:58,438 INFO: [cached since 254.4s ago] {'pk_1': 89}
2025-02-11 09:23:58,438 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:23:58,438 DEBUG: Row (89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None)
2025-02-11 09:23:58,438 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:23:58,438 INFO: [cached since 705.2s ago] {'pk_1': 5}
2025-02-11 09:23:58,439 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:23:58,439 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:23:58,439 INFO: ROLLBACK
2025-02-11 09:23:58,439 INFO: 127.0.0.1 - - [11/Feb/2025 09:23:58] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:24:01,008 INFO: Fetching task details for Task ID 88.
2025-02-11 09:24:01,008 INFO: Fetching task with ID 88.
2025-02-11 09:24:01,009 INFO: BEGIN (implicit)
2025-02-11 09:24:01,009 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:01,009 INFO: [cached since 708.3s ago] {'pk_1': 88}
2025-02-11 09:24:01,010 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:01,010 DEBUG: Row (88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, None, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 1, 16, 19, 22, 36, 317500), None)
2025-02-11 09:24:01,011 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d2f90>, 'sort_order': 58, 'task_type': 'Subtask', 'contributor_id': None, 'id': 88, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 317500), 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'parent_id': 85, 'story_points': 3, 'completed_date': None}
2025-02-11 09:24:01,011 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:01,011 INFO: [cached since 708.3s ago] {'pk_1': 6}
2025-02-11 09:24:01,012 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:01,012 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:01,012 INFO: Task ID 88 fetched with parent ID: 85
2025-02-11 09:24:01,013 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:01,013 INFO: [cached since 708.3s ago] {'pk_1': 85}
2025-02-11 09:24:01,014 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:01,015 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), None)
2025-02-11 09:24:01,015 INFO: Task with ID 88 fetched successfully.
2025-02-11 09:24:01,015 DEBUG: Fetched Task Data: {'id': 88, 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-01-16T19:22:36.317500', 'contributor_name': 'Unassigned', 'parent': {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-01-16T19:22:36.313789'}}
2025-02-11 09:24:01,015 INFO: Task details fetched successfully for Task ID 88.
2025-02-11 09:24:01,016 INFO: ROLLBACK
2025-02-11 09:24:01,016 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:01] "GET /api/tasks/88 HTTP/1.1" 200 -
2025-02-11 09:24:01,525 INFO: Fetching task details for Task ID 85.
2025-02-11 09:24:01,525 INFO: Fetching task with ID 85.
2025-02-11 09:24:01,526 INFO: BEGIN (implicit)
2025-02-11 09:24:01,526 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:01,527 INFO: [cached since 708.8s ago] {'pk_1': 85}
2025-02-11 09:24:01,528 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:01,528 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), None)
2025-02-11 09:24:01,528 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d26f0>, 'sort_order': 56, 'task_type': 'User Story', 'contributor_id': None, 'id': 85, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'parent_id': 84, 'story_points': 5, 'completed_date': None}
2025-02-11 09:24:01,530 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:01,530 INFO: [cached since 708.8s ago] {'pk_1': 6}
2025-02-11 09:24:01,532 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:01,533 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:01,533 INFO: Task ID 85 fetched with parent ID: 84
2025-02-11 09:24:01,534 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:01,534 INFO: [cached since 708.8s ago] {'pk_1': 84}
2025-02-11 09:24:01,535 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:01,535 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:24:01,536 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:01,536 INFO: [cached since 708.3s ago] {'pk_1': 5}
2025-02-11 09:24:01,537 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:01,537 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:01,538 INFO: Task with ID 85 fetched successfully.
2025-02-11 09:24:01,538 DEBUG: Fetched Task Data: {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-01-16T19:22:36.313789', 'contributor_name': 'Unassigned', 'parent': {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560'}}
2025-02-11 09:24:01,538 INFO: Task details fetched successfully for Task ID 85.
2025-02-11 09:24:01,538 INFO: ROLLBACK
2025-02-11 09:24:01,539 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:01] "GET /api/tasks/85 HTTP/1.1" 200 -
2025-02-11 09:24:02,244 INFO: Fetching task details for Task ID 88.
2025-02-11 09:24:02,244 INFO: Fetching task with ID 88.
2025-02-11 09:24:02,244 INFO: BEGIN (implicit)
2025-02-11 09:24:02,244 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:02,245 INFO: [cached since 709.5s ago] {'pk_1': 88}
2025-02-11 09:24:02,245 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:02,245 DEBUG: Row (88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, None, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 1, 16, 19, 22, 36, 317500), None)
2025-02-11 09:24:02,245 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d2ff0>, 'sort_order': 58, 'task_type': 'Subtask', 'contributor_id': None, 'id': 88, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 317500), 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'parent_id': 85, 'story_points': 3, 'completed_date': None}
2025-02-11 09:24:02,246 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:02,246 INFO: [cached since 709.5s ago] {'pk_1': 6}
2025-02-11 09:24:02,246 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:02,246 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:02,246 INFO: Task ID 88 fetched with parent ID: 85
2025-02-11 09:24:02,247 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:02,247 INFO: [cached since 709.5s ago] {'pk_1': 85}
2025-02-11 09:24:02,247 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:02,247 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), None)
2025-02-11 09:24:02,247 INFO: Task with ID 88 fetched successfully.
2025-02-11 09:24:02,247 DEBUG: Fetched Task Data: {'id': 88, 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-01-16T19:22:36.317500', 'contributor_name': 'Unassigned', 'parent': {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-01-16T19:22:36.313789'}}
2025-02-11 09:24:02,247 INFO: Task details fetched successfully for Task ID 88.
2025-02-11 09:24:02,247 INFO: ROLLBACK
2025-02-11 09:24:02,248 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:02] "GET /api/tasks/88 HTTP/1.1" 200 -
2025-02-11 09:24:02,452 INFO: Fetching task details for Task ID 85.
2025-02-11 09:24:02,452 INFO: Fetching task with ID 85.
2025-02-11 09:24:02,452 INFO: BEGIN (implicit)
2025-02-11 09:24:02,453 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:02,453 INFO: [cached since 709.7s ago] {'pk_1': 85}
2025-02-11 09:24:02,454 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:02,454 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), None)
2025-02-11 09:24:02,455 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d2f30>, 'sort_order': 56, 'task_type': 'User Story', 'contributor_id': None, 'id': 85, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'parent_id': 84, 'story_points': 5, 'completed_date': None}
2025-02-11 09:24:02,455 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:02,456 INFO: [cached since 709.7s ago] {'pk_1': 6}
2025-02-11 09:24:02,456 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:02,499 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:02,500 INFO: Task ID 85 fetched with parent ID: 84
2025-02-11 09:24:02,500 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:02,500 INFO: [cached since 709.7s ago] {'pk_1': 84}
2025-02-11 09:24:02,501 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:02,501 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:24:02,501 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:02,501 INFO: [cached since 709.2s ago] {'pk_1': 5}
2025-02-11 09:24:02,501 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:02,501 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:02,501 INFO: Task with ID 85 fetched successfully.
2025-02-11 09:24:02,501 DEBUG: Fetched Task Data: {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-01-16T19:22:36.313789', 'contributor_name': 'Unassigned', 'parent': {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560'}}
2025-02-11 09:24:02,502 INFO: Task details fetched successfully for Task ID 85.
2025-02-11 09:24:02,502 INFO: ROLLBACK
2025-02-11 09:24:02,502 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:02] "GET /api/tasks/85 HTTP/1.1" 200 -
2025-02-11 09:24:04,824 INFO: Assigning contributor to task ID 88
2025-02-11 09:24:04,824 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:24:04,824 INFO: Contributor ID received: 5
2025-02-11 09:24:04,825 INFO: BEGIN (implicit)
2025-02-11 09:24:04,826 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:04,826 INFO: [cached since 712.1s ago] {'pk_1': 88}
2025-02-11 09:24:04,827 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:04,828 DEBUG: Row (88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, None, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 1, 16, 19, 22, 36, 317500), None)
2025-02-11 09:24:04,828 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:04,829 INFO: [cached since 260.8s ago] {'pk_1': 5}
2025-02-11 09:24:04,830 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:04,831 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:04,832 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:04,832 INFO: [cached since 260.8s ago] {'pk_1': 6}
2025-02-11 09:24:04,833 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:24:04,833 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:04,834 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:24:04,834 INFO: [cached since 260.8s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 24, 4, 834354, tzinfo=datetime.timezone.utc), 'task_id': 88}
2025-02-11 09:24:04,835 INFO: COMMIT
2025-02-11 09:24:04,836 INFO: BEGIN (implicit)
2025-02-11 09:24:04,837 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:04,837 INFO: [cached since 260.8s ago] {'pk_1': 5}
2025-02-11 09:24:04,838 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:04,838 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:04,839 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:04,839 INFO: [cached since 260.8s ago] {'pk_1': 88}
2025-02-11 09:24:04,839 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:04,840 DEBUG: Row (88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 9, 24, 4, 834354), None)
2025-02-11 09:24:04,840 INFO: ROLLBACK
2025-02-11 09:24:04,841 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:04] "POST /tasks/88/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:24:05,857 INFO: save_task triggered
2025-02-11 09:24:05,858 INFO: Payload received: {'title': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_id': '88', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 3, 'parent_id': 85, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:24:05,859 INFO: Update request for Task ID: 88
2025-02-11 09:24:05,859 INFO: BEGIN (implicit)
2025-02-11 09:24:05,860 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:05,860 INFO: [cached since 713.1s ago] {'pk_1': '88'}
2025-02-11 09:24:05,861 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:05,861 DEBUG: Row (88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 9, 24, 4, 834354), None)
2025-02-11 09:24:05,862 DEBUG: Received update payload for Task ID 88: {'title': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_id': '88', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 3, 'parent_id': 85, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:24:05,862 DEBUG: Validating parent_id change for Task 88: 85
2025-02-11 09:24:05,862 INFO: Checking circular reference for Task 88 with Parent ID: 85
2025-02-11 09:24:05,865 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:24:05,865 INFO: [cached since 123.6s ago] {'id_1': 85, 'param_1': 1}
2025-02-11 09:24:05,866 DEBUG: Col ('task_parent_id',)
2025-02-11 09:24:05,866 DEBUG: Row (84,)
2025-02-11 09:24:05,867 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:24:05,867 INFO: [cached since 123.6s ago] {'id_1': 84, 'param_1': 1}
2025-02-11 09:24:05,868 DEBUG: Col ('task_parent_id',)
2025-02-11 09:24:05,868 DEBUG: Row (None,)
2025-02-11 09:24:05,868 INFO: Circular reference check passed.
2025-02-11 09:24:05,869 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:24:05,869 INFO: [cached since 123.6s ago] {'id_1': 85, 'param_1': 1}
2025-02-11 09:24:05,869 DEBUG: Col ('task_task_type',)
2025-02-11 09:24:05,870 DEBUG: Row ('User Story',)
2025-02-11 09:24:05,870 DEBUG: Validating hierarchy: Task 88, Parent Type: User Story
2025-02-11 09:24:05,870 INFO: Hierarchy validation passed for Task 88.
2025-02-11 09:24:05,870 INFO: Validation passed for parent_id: 85
2025-02-11 09:24:05,871 DEBUG: Validating task_type change for Task 88: Subtask
2025-02-11 09:24:05,872 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:24:05,872 INFO: [cached since 123.6s ago] {'id_1': 85, 'param_1': 1}
2025-02-11 09:24:05,872 DEBUG: Col ('task_task_type',)
2025-02-11 09:24:05,873 DEBUG: Row ('User Story',)
2025-02-11 09:24:05,873 DEBUG: Validating hierarchy: Task Type: Subtask, Parent Type: User Story
2025-02-11 09:24:05,873 INFO: Hierarchy validation passed for Task 88.
2025-02-11 09:24:05,873 INFO: Validation passed for task_type: Subtask
2025-02-11 09:24:05,873 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:24:05,874 INFO: [cached since 123.6s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), 'task_id': 88}
2025-02-11 09:24:05,875 INFO: COMMIT
2025-02-11 09:24:05,878 INFO: Task ID 88 updated successfully.
2025-02-11 09:24:05,878 INFO: BEGIN (implicit)
2025-02-11 09:24:05,878 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:05,878 INFO: [cached since 261.8s ago] {'pk_1': 88}
2025-02-11 09:24:05,880 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:05,880 DEBUG: Row (88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None)
2025-02-11 09:24:05,880 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:05,880 INFO: [cached since 712.6s ago] {'pk_1': 5}
2025-02-11 09:24:05,881 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:05,881 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:05,881 INFO: ROLLBACK
2025-02-11 09:24:05,882 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:05] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:24:08,208 INFO: Fetching task details for Task ID 90.
2025-02-11 09:24:08,208 INFO: Fetching task with ID 90.
2025-02-11 09:24:08,209 INFO: BEGIN (implicit)
2025-02-11 09:24:08,209 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:08,209 INFO: [cached since 715.5s ago] {'pk_1': 90}
2025-02-11 09:24:08,210 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:08,210 DEBUG: Row (90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 1, 16, 19, 22, 36, 315695), None)
2025-02-11 09:24:08,211 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d2cf0>, 'sort_order': 57, 'task_type': 'Subtask', 'contributor_id': None, 'id': 90, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 315695), 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'parent_id': 85, 'story_points': 5, 'completed_date': None}
2025-02-11 09:24:08,211 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:08,211 INFO: [cached since 715.5s ago] {'pk_1': 6}
2025-02-11 09:24:08,212 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:08,212 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:08,212 INFO: Task ID 90 fetched with parent ID: 85
2025-02-11 09:24:08,214 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:08,214 INFO: [cached since 715.5s ago] {'pk_1': 85}
2025-02-11 09:24:08,215 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:08,216 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), None)
2025-02-11 09:24:08,216 INFO: Task with ID 90 fetched successfully.
2025-02-11 09:24:08,216 DEBUG: Fetched Task Data: {'id': 90, 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-01-16T19:22:36.315695', 'contributor_name': 'Unassigned', 'parent': {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-01-16T19:22:36.313789'}}
2025-02-11 09:24:08,216 INFO: Task details fetched successfully for Task ID 90.
2025-02-11 09:24:08,217 INFO: ROLLBACK
2025-02-11 09:24:08,217 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:08] "GET /api/tasks/90 HTTP/1.1" 200 -
2025-02-11 09:24:08,725 INFO: Fetching task details for Task ID 85.
2025-02-11 09:24:08,726 INFO: Fetching task with ID 85.
2025-02-11 09:24:08,726 INFO: BEGIN (implicit)
2025-02-11 09:24:08,727 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:08,727 INFO: [cached since 716s ago] {'pk_1': 85}
2025-02-11 09:24:08,728 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:08,728 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), None)
2025-02-11 09:24:08,730 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d2630>, 'sort_order': 56, 'task_type': 'User Story', 'contributor_id': None, 'id': 85, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'parent_id': 84, 'story_points': 5, 'completed_date': None}
2025-02-11 09:24:08,732 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:08,732 INFO: [cached since 716s ago] {'pk_1': 6}
2025-02-11 09:24:08,733 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:08,733 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:08,734 INFO: Task ID 85 fetched with parent ID: 84
2025-02-11 09:24:08,734 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:08,734 INFO: [cached since 716s ago] {'pk_1': 84}
2025-02-11 09:24:08,735 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:08,735 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:24:08,736 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:08,736 INFO: [cached since 715.5s ago] {'pk_1': 5}
2025-02-11 09:24:08,737 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:08,737 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:08,737 INFO: Task with ID 85 fetched successfully.
2025-02-11 09:24:08,738 DEBUG: Fetched Task Data: {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-01-16T19:22:36.313789', 'contributor_name': 'Unassigned', 'parent': {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560'}}
2025-02-11 09:24:08,738 INFO: Task details fetched successfully for Task ID 85.
2025-02-11 09:24:08,738 INFO: ROLLBACK
2025-02-11 09:24:08,738 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:08] "GET /api/tasks/85 HTTP/1.1" 200 -
2025-02-11 09:24:09,447 INFO: Fetching task details for Task ID 90.
2025-02-11 09:24:09,448 INFO: Fetching task with ID 90.
2025-02-11 09:24:09,450 INFO: BEGIN (implicit)
2025-02-11 09:24:09,451 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:09,451 INFO: [cached since 716.7s ago] {'pk_1': 90}
2025-02-11 09:24:09,452 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:09,452 DEBUG: Row (90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 1, 16, 19, 22, 36, 315695), None)
2025-02-11 09:24:09,452 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d39b0>, 'sort_order': 57, 'task_type': 'Subtask', 'contributor_id': None, 'id': 90, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 315695), 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'parent_id': 85, 'story_points': 5, 'completed_date': None}
2025-02-11 09:24:09,453 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:09,453 INFO: [cached since 716.7s ago] {'pk_1': 6}
2025-02-11 09:24:09,453 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:09,454 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:09,454 INFO: Task ID 90 fetched with parent ID: 85
2025-02-11 09:24:09,455 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:09,455 INFO: [cached since 716.7s ago] {'pk_1': 85}
2025-02-11 09:24:09,456 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:09,457 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), None)
2025-02-11 09:24:09,457 INFO: Task with ID 90 fetched successfully.
2025-02-11 09:24:09,457 DEBUG: Fetched Task Data: {'id': 90, 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-01-16T19:22:36.315695', 'contributor_name': 'Unassigned', 'parent': {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-01-16T19:22:36.313789'}}
2025-02-11 09:24:09,457 INFO: Task details fetched successfully for Task ID 90.
2025-02-11 09:24:09,458 INFO: ROLLBACK
2025-02-11 09:24:09,458 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:09] "GET /api/tasks/90 HTTP/1.1" 200 -
2025-02-11 09:24:09,663 INFO: Fetching task details for Task ID 85.
2025-02-11 09:24:09,664 INFO: Fetching task with ID 85.
2025-02-11 09:24:09,664 INFO: BEGIN (implicit)
2025-02-11 09:24:09,665 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:09,665 INFO: [cached since 716.9s ago] {'pk_1': 85}
2025-02-11 09:24:09,666 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:09,666 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), None)
2025-02-11 09:24:09,667 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d2f30>, 'sort_order': 56, 'task_type': 'User Story', 'contributor_id': None, 'id': 85, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'parent_id': 84, 'story_points': 5, 'completed_date': None}
2025-02-11 09:24:09,667 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:09,667 INFO: [cached since 716.9s ago] {'pk_1': 6}
2025-02-11 09:24:09,668 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:09,668 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:09,668 INFO: Task ID 85 fetched with parent ID: 84
2025-02-11 09:24:09,669 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:09,669 INFO: [cached since 716.9s ago] {'pk_1': 84}
2025-02-11 09:24:09,670 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:09,670 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:24:09,671 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:09,671 INFO: [cached since 716.4s ago] {'pk_1': 5}
2025-02-11 09:24:09,672 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:09,672 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:09,672 INFO: Task with ID 85 fetched successfully.
2025-02-11 09:24:09,672 DEBUG: Fetched Task Data: {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-01-16T19:22:36.313789', 'contributor_name': 'Unassigned', 'parent': {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560'}}
2025-02-11 09:24:09,672 INFO: Task details fetched successfully for Task ID 85.
2025-02-11 09:24:09,673 INFO: ROLLBACK
2025-02-11 09:24:09,673 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:09] "GET /api/tasks/85 HTTP/1.1" 200 -
2025-02-11 09:24:12,138 INFO: Assigning contributor to task ID 90
2025-02-11 09:24:12,139 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:24:12,139 INFO: Contributor ID received: 5
2025-02-11 09:24:12,140 INFO: BEGIN (implicit)
2025-02-11 09:24:12,140 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:12,140 INFO: [cached since 719.4s ago] {'pk_1': 90}
2025-02-11 09:24:12,141 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:12,142 DEBUG: Row (90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 1, 16, 19, 22, 36, 315695), None)
2025-02-11 09:24:12,143 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:12,143 INFO: [cached since 268.1s ago] {'pk_1': 5}
2025-02-11 09:24:12,143 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:12,143 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:12,144 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:12,144 INFO: [cached since 268.1s ago] {'pk_1': 6}
2025-02-11 09:24:12,145 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:24:12,146 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:12,147 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:24:12,147 INFO: [cached since 268.1s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 24, 12, 147673, tzinfo=datetime.timezone.utc), 'task_id': 90}
2025-02-11 09:24:12,149 INFO: COMMIT
2025-02-11 09:24:12,151 INFO: BEGIN (implicit)
2025-02-11 09:24:12,151 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:12,151 INFO: [cached since 268.1s ago] {'pk_1': 5}
2025-02-11 09:24:12,152 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:12,152 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:12,153 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:12,153 INFO: [cached since 268.1s ago] {'pk_1': 90}
2025-02-11 09:24:12,154 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:12,154 DEBUG: Row (90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 9, 24, 12, 147673), None)
2025-02-11 09:24:12,154 INFO: ROLLBACK
2025-02-11 09:24:12,155 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:12] "POST /tasks/90/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:24:13,190 INFO: save_task triggered
2025-02-11 09:24:13,191 INFO: Payload received: {'title': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_id': '90', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 5, 'parent_id': 85, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:24:13,191 INFO: Update request for Task ID: 90
2025-02-11 09:24:13,191 INFO: BEGIN (implicit)
2025-02-11 09:24:13,192 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:13,192 INFO: [cached since 720.4s ago] {'pk_1': '90'}
2025-02-11 09:24:13,193 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:13,193 DEBUG: Row (90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 9, 24, 12, 147673), None)
2025-02-11 09:24:13,193 DEBUG: Received update payload for Task ID 90: {'title': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_id': '90', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 5, 'parent_id': 85, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:24:13,194 DEBUG: Validating parent_id change for Task 90: 85
2025-02-11 09:24:13,194 INFO: Checking circular reference for Task 90 with Parent ID: 85
2025-02-11 09:24:13,195 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:24:13,195 INFO: [cached since 130.9s ago] {'id_1': 85, 'param_1': 1}
2025-02-11 09:24:13,196 DEBUG: Col ('task_parent_id',)
2025-02-11 09:24:13,196 DEBUG: Row (84,)
2025-02-11 09:24:13,197 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:24:13,197 INFO: [cached since 130.9s ago] {'id_1': 84, 'param_1': 1}
2025-02-11 09:24:13,198 DEBUG: Col ('task_parent_id',)
2025-02-11 09:24:13,198 DEBUG: Row (None,)
2025-02-11 09:24:13,198 INFO: Circular reference check passed.
2025-02-11 09:24:13,199 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:24:13,200 INFO: [cached since 130.9s ago] {'id_1': 85, 'param_1': 1}
2025-02-11 09:24:13,200 DEBUG: Col ('task_task_type',)
2025-02-11 09:24:13,201 DEBUG: Row ('User Story',)
2025-02-11 09:24:13,201 DEBUG: Validating hierarchy: Task 90, Parent Type: User Story
2025-02-11 09:24:13,201 INFO: Hierarchy validation passed for Task 90.
2025-02-11 09:24:13,201 INFO: Validation passed for parent_id: 85
2025-02-11 09:24:13,201 DEBUG: Validating task_type change for Task 90: Subtask
2025-02-11 09:24:13,203 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:24:13,203 INFO: [cached since 130.9s ago] {'id_1': 85, 'param_1': 1}
2025-02-11 09:24:13,204 DEBUG: Col ('task_task_type',)
2025-02-11 09:24:13,204 DEBUG: Row ('User Story',)
2025-02-11 09:24:13,204 DEBUG: Validating hierarchy: Task Type: Subtask, Parent Type: User Story
2025-02-11 09:24:13,204 INFO: Hierarchy validation passed for Task 90.
2025-02-11 09:24:13,204 INFO: Validation passed for task_type: Subtask
2025-02-11 09:24:13,205 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:24:13,205 INFO: [cached since 130.9s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), 'task_id': 90}
2025-02-11 09:24:13,206 INFO: COMMIT
2025-02-11 09:24:13,208 INFO: Task ID 90 updated successfully.
2025-02-11 09:24:13,209 INFO: BEGIN (implicit)
2025-02-11 09:24:13,211 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:13,211 INFO: [cached since 269.2s ago] {'pk_1': 90}
2025-02-11 09:24:13,212 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:13,212 DEBUG: Row (90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None)
2025-02-11 09:24:13,212 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:13,213 INFO: [cached since 719.9s ago] {'pk_1': 5}
2025-02-11 09:24:13,213 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:13,213 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:13,213 INFO: ROLLBACK
2025-02-11 09:24:13,213 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:13] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:24:15,557 INFO: Fetching task details for Task ID 85.
2025-02-11 09:24:15,558 INFO: Fetching task with ID 85.
2025-02-11 09:24:15,558 INFO: BEGIN (implicit)
2025-02-11 09:24:15,559 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:15,559 INFO: [cached since 722.8s ago] {'pk_1': 85}
2025-02-11 09:24:15,560 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:15,560 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), None)
2025-02-11 09:24:15,560 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d0d10>, 'sort_order': 56, 'task_type': 'User Story', 'contributor_id': None, 'id': 85, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'parent_id': 84, 'story_points': 5, 'completed_date': None}
2025-02-11 09:24:15,561 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:15,561 INFO: [cached since 722.8s ago] {'pk_1': 6}
2025-02-11 09:24:15,561 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:15,562 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:15,562 INFO: Task ID 85 fetched with parent ID: 84
2025-02-11 09:24:15,562 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:15,563 INFO: [cached since 722.8s ago] {'pk_1': 84}
2025-02-11 09:24:15,564 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:15,565 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:24:15,566 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:15,566 INFO: [cached since 722.3s ago] {'pk_1': 5}
2025-02-11 09:24:15,567 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:15,567 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:15,568 INFO: Task with ID 85 fetched successfully.
2025-02-11 09:24:15,568 DEBUG: Fetched Task Data: {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-01-16T19:22:36.313789', 'contributor_name': 'Unassigned', 'parent': {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560'}}
2025-02-11 09:24:15,568 INFO: Task details fetched successfully for Task ID 85.
2025-02-11 09:24:15,568 INFO: ROLLBACK
2025-02-11 09:24:15,568 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:15] "GET /api/tasks/85 HTTP/1.1" 200 -
2025-02-11 09:24:16,078 INFO: Fetching task details for Task ID 84.
2025-02-11 09:24:16,078 INFO: Fetching task with ID 84.
2025-02-11 09:24:16,080 INFO: BEGIN (implicit)
2025-02-11 09:24:16,081 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:16,081 INFO: [cached since 723.3s ago] {'pk_1': 84}
2025-02-11 09:24:16,083 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:16,084 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:24:16,085 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3950>, 'sort_order': 55, 'task_type': 'Epic', 'contributor_id': 5, 'id': 84, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'parent_id': None, 'story_points': 8, 'completed_date': None}
2025-02-11 09:24:16,086 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:16,086 INFO: [cached since 723.3s ago] {'pk_1': 6}
2025-02-11 09:24:16,087 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:16,087 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:16,088 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:16,088 INFO: [cached since 722.8s ago] {'pk_1': 5}
2025-02-11 09:24:16,089 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:16,089 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:16,089 INFO: Task ID 84 fetched with parent ID: None
2025-02-11 09:24:16,090 INFO: Task with ID 84 fetched successfully.
2025-02-11 09:24:16,090 DEBUG: Fetched Task Data: {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560', 'contributor_name': 'Fredrik Cederborg', 'parent': None}
2025-02-11 09:24:16,090 INFO: Task details fetched successfully for Task ID 84.
2025-02-11 09:24:16,090 INFO: ROLLBACK
2025-02-11 09:24:16,091 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:16] "GET /api/tasks/84 HTTP/1.1" 200 -
2025-02-11 09:24:16,798 INFO: Fetching task details for Task ID 85.
2025-02-11 09:24:16,798 INFO: Fetching task with ID 85.
2025-02-11 09:24:16,799 INFO: BEGIN (implicit)
2025-02-11 09:24:16,799 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:16,799 INFO: [cached since 724.1s ago] {'pk_1': 85}
2025-02-11 09:24:16,800 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:16,800 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), None)
2025-02-11 09:24:16,801 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3c50>, 'sort_order': 56, 'task_type': 'User Story', 'contributor_id': None, 'id': 85, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'parent_id': 84, 'story_points': 5, 'completed_date': None}
2025-02-11 09:24:16,801 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:16,801 INFO: [cached since 724.1s ago] {'pk_1': 6}
2025-02-11 09:24:16,802 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:16,802 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:16,802 INFO: Task ID 85 fetched with parent ID: 84
2025-02-11 09:24:16,803 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:16,803 INFO: [cached since 724s ago] {'pk_1': 84}
2025-02-11 09:24:16,804 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:16,804 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:24:16,805 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:16,805 INFO: [cached since 723.5s ago] {'pk_1': 5}
2025-02-11 09:24:16,805 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:16,806 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:16,806 INFO: Task with ID 85 fetched successfully.
2025-02-11 09:24:16,806 DEBUG: Fetched Task Data: {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-01-16T19:22:36.313789', 'contributor_name': 'Unassigned', 'parent': {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560'}}
2025-02-11 09:24:16,806 INFO: Task details fetched successfully for Task ID 85.
2025-02-11 09:24:16,806 INFO: ROLLBACK
2025-02-11 09:24:16,807 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:16] "GET /api/tasks/85 HTTP/1.1" 200 -
2025-02-11 09:24:17,010 INFO: Fetching task details for Task ID 84.
2025-02-11 09:24:17,010 INFO: Fetching task with ID 84.
2025-02-11 09:24:17,011 INFO: BEGIN (implicit)
2025-02-11 09:24:17,011 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:17,012 INFO: [cached since 724.3s ago] {'pk_1': 84}
2025-02-11 09:24:17,013 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:17,013 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:24:17,014 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3770>, 'sort_order': 55, 'task_type': 'Epic', 'contributor_id': 5, 'id': 84, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'parent_id': None, 'story_points': 8, 'completed_date': None}
2025-02-11 09:24:17,015 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:17,015 INFO: [cached since 724.3s ago] {'pk_1': 6}
2025-02-11 09:24:17,016 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:17,018 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:17,023 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:17,024 INFO: [cached since 723.7s ago] {'pk_1': 5}
2025-02-11 09:24:17,025 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:17,025 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:17,025 INFO: Task ID 84 fetched with parent ID: None
2025-02-11 09:24:17,025 INFO: Task with ID 84 fetched successfully.
2025-02-11 09:24:17,025 DEBUG: Fetched Task Data: {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560', 'contributor_name': 'Fredrik Cederborg', 'parent': None}
2025-02-11 09:24:17,026 INFO: Task details fetched successfully for Task ID 84.
2025-02-11 09:24:17,026 INFO: ROLLBACK
2025-02-11 09:24:17,026 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:17] "GET /api/tasks/84 HTTP/1.1" 200 -
2025-02-11 09:24:19,974 INFO: Assigning contributor to task ID 85
2025-02-11 09:24:19,974 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:24:19,974 INFO: Contributor ID received: 5
2025-02-11 09:24:19,975 INFO: BEGIN (implicit)
2025-02-11 09:24:19,975 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:19,975 INFO: [cached since 727.2s ago] {'pk_1': 85}
2025-02-11 09:24:19,976 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:19,977 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, None, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 1, 16, 19, 22, 36, 313789), None)
2025-02-11 09:24:19,977 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:19,977 INFO: [cached since 276s ago] {'pk_1': 5}
2025-02-11 09:24:19,978 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:19,978 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:19,980 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:19,980 INFO: [cached since 276s ago] {'pk_1': 6}
2025-02-11 09:24:19,981 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:24:19,982 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:19,982 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:24:19,983 INFO: [cached since 276s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 24, 19, 982868, tzinfo=datetime.timezone.utc), 'task_id': 85}
2025-02-11 09:24:19,984 INFO: COMMIT
2025-02-11 09:24:19,985 INFO: BEGIN (implicit)
2025-02-11 09:24:19,986 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:19,986 INFO: [cached since 276s ago] {'pk_1': 5}
2025-02-11 09:24:19,987 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:19,987 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:19,988 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:19,988 INFO: [cached since 276s ago] {'pk_1': 85}
2025-02-11 09:24:19,989 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:19,989 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 9, 24, 19, 982868), None)
2025-02-11 09:24:19,990 INFO: ROLLBACK
2025-02-11 09:24:19,990 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:19] "POST /tasks/85/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:24:21,057 INFO: save_task triggered
2025-02-11 09:24:21,058 INFO: Payload received: {'title': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_id': '85', 'project_id': '6', 'task_type': 'User Story', 'story_points': 5, 'parent_id': 84, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:24:21,058 INFO: Update request for Task ID: 85
2025-02-11 09:24:21,059 INFO: BEGIN (implicit)
2025-02-11 09:24:21,059 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:21,060 INFO: [cached since 728.3s ago] {'pk_1': '85'}
2025-02-11 09:24:21,060 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:21,061 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 9, 24, 19, 982868), None)
2025-02-11 09:24:21,061 DEBUG: Received update payload for Task ID 85: {'title': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_id': '85', 'project_id': '6', 'task_type': 'User Story', 'story_points': 5, 'parent_id': 84, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:24:21,061 DEBUG: Validating parent_id change for Task 85: 84
2025-02-11 09:24:21,062 INFO: Checking circular reference for Task 85 with Parent ID: 84
2025-02-11 09:24:21,063 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:24:21,063 INFO: [cached since 138.8s ago] {'id_1': 84, 'param_1': 1}
2025-02-11 09:24:21,064 DEBUG: Col ('task_parent_id',)
2025-02-11 09:24:21,064 DEBUG: Row (None,)
2025-02-11 09:24:21,064 INFO: Circular reference check passed.
2025-02-11 09:24:21,065 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:24:21,065 INFO: [cached since 138.8s ago] {'id_1': 84, 'param_1': 1}
2025-02-11 09:24:21,065 DEBUG: Col ('task_task_type',)
2025-02-11 09:24:21,066 DEBUG: Row ('Epic',)
2025-02-11 09:24:21,066 DEBUG: Validating hierarchy: Task 85, Parent Type: Epic
2025-02-11 09:24:21,066 INFO: Hierarchy validation passed for Task 85.
2025-02-11 09:24:21,066 INFO: Validation passed for parent_id: 84
2025-02-11 09:24:21,066 DEBUG: Validating task_type change for Task 85: User Story
2025-02-11 09:24:21,067 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:24:21,067 INFO: [cached since 138.8s ago] {'id_1': 84, 'param_1': 1}
2025-02-11 09:24:21,068 DEBUG: Col ('task_task_type',)
2025-02-11 09:24:21,068 DEBUG: Row ('Epic',)
2025-02-11 09:24:21,068 DEBUG: Validating hierarchy: Task Type: User Story, Parent Type: Epic
2025-02-11 09:24:21,069 INFO: Hierarchy validation passed for Task 85.
2025-02-11 09:24:21,069 INFO: Validation passed for task_type: User Story
2025-02-11 09:24:21,070 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:24:21,070 INFO: [cached since 138.8s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), 'task_id': 85}
2025-02-11 09:24:21,071 INFO: COMMIT
2025-02-11 09:24:21,071 INFO: Task ID 85 updated successfully.
2025-02-11 09:24:21,071 INFO: BEGIN (implicit)
2025-02-11 09:24:21,072 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:21,072 INFO: [cached since 277s ago] {'pk_1': 85}
2025-02-11 09:24:21,072 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:21,072 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None)
2025-02-11 09:24:21,072 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:21,072 INFO: [cached since 727.8s ago] {'pk_1': 5}
2025-02-11 09:24:21,073 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:21,073 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:21,073 INFO: ROLLBACK
2025-02-11 09:24:21,073 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:21] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:24:23,955 INFO: Fetching task details for Task ID 84.
2025-02-11 09:24:23,955 INFO: Fetching task with ID 84.
2025-02-11 09:24:23,956 INFO: BEGIN (implicit)
2025-02-11 09:24:23,956 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:23,956 INFO: [cached since 731.2s ago] {'pk_1': 84}
2025-02-11 09:24:23,957 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:23,958 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:24:23,958 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3f50>, 'sort_order': 55, 'task_type': 'Epic', 'contributor_id': 5, 'id': 84, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'parent_id': None, 'story_points': 8, 'completed_date': None}
2025-02-11 09:24:23,959 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:23,959 INFO: [cached since 731.2s ago] {'pk_1': 6}
2025-02-11 09:24:23,959 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:23,960 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:23,960 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:23,960 INFO: [cached since 730.7s ago] {'pk_1': 5}
2025-02-11 09:24:23,961 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:23,961 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:23,961 INFO: Task ID 84 fetched with parent ID: None
2025-02-11 09:24:23,962 INFO: Task with ID 84 fetched successfully.
2025-02-11 09:24:23,962 DEBUG: Fetched Task Data: {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-01-16T19:22:36.311560', 'contributor_name': 'Fredrik Cederborg', 'parent': None}
2025-02-11 09:24:23,963 INFO: Task details fetched successfully for Task ID 84.
2025-02-11 09:24:23,963 INFO: ROLLBACK
2025-02-11 09:24:23,964 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:23] "GET /api/tasks/84 HTTP/1.1" 200 -
2025-02-11 09:24:26,489 INFO: save_task triggered
2025-02-11 09:24:26,489 INFO: Payload received: {'title': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_id': '84', 'project_id': '6', 'task_type': 'Epic', 'story_points': 8, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:24:26,490 INFO: Update request for Task ID: 84
2025-02-11 09:24:26,490 INFO: BEGIN (implicit)
2025-02-11 09:24:26,491 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:26,491 INFO: [cached since 733.7s ago] {'pk_1': '84'}
2025-02-11 09:24:26,492 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:26,492 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 1, 16, 19, 22, 36, 311560), None)
2025-02-11 09:24:26,493 DEBUG: Received update payload for Task ID 84: {'title': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_id': '84', 'project_id': '6', 'task_type': 'Epic', 'story_points': 8, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:24:26,493 DEBUG: Validating parent_id change for Task 84: None
2025-02-11 09:24:26,493 INFO: Hierarchy validation passed for Task 84.
2025-02-11 09:24:26,493 INFO: Validation passed for parent_id: None
2025-02-11 09:24:26,493 DEBUG: Validating task_type change for Task 84: Epic
2025-02-11 09:24:26,493 INFO: Hierarchy validation passed for Task 84.
2025-02-11 09:24:26,493 INFO: Validation passed for task_type: Epic
2025-02-11 09:24:26,494 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:24:26,494 INFO: [cached since 144.2s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), 'task_id': 84}
2025-02-11 09:24:26,496 INFO: COMMIT
2025-02-11 09:24:26,497 INFO: Task ID 84 updated successfully.
2025-02-11 09:24:26,497 INFO: BEGIN (implicit)
2025-02-11 09:24:26,498 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:26,498 INFO: [cached since 282.5s ago] {'pk_1': 84}
2025-02-11 09:24:26,498 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:26,499 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None)
2025-02-11 09:24:26,499 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:26,499 INFO: [cached since 733.2s ago] {'pk_1': 5}
2025-02-11 09:24:26,499 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:26,499 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:26,499 INFO: ROLLBACK
2025-02-11 09:24:26,500 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:26] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:24:29,090 INFO: Fetching task details for Task ID 43.
2025-02-11 09:24:29,091 INFO: Fetching task with ID 43.
2025-02-11 09:24:29,091 INFO: BEGIN (implicit)
2025-02-11 09:24:29,092 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:29,092 INFO: [cached since 736.3s ago] {'pk_1': 43}
2025-02-11 09:24:29,093 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:29,093 DEBUG: Row (43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, None, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 10, 7, 41, 23, 756572), None)
2025-02-11 09:24:29,093 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d0950>, 'sort_order': 54, 'task_type': 'Subtask', 'contributor_id': None, 'id': 43, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), 'status': 'Completed', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 10, 7, 41, 23, 756572), 'name': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'parent_id': None, 'story_points': 5, 'completed_date': None}
2025-02-11 09:24:29,094 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:29,094 INFO: [cached since 736.3s ago] {'pk_1': 6}
2025-02-11 09:24:29,094 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:29,095 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:29,095 INFO: Task ID 43 fetched with parent ID: None
2025-02-11 09:24:29,095 INFO: Task with ID 43 fetched successfully.
2025-02-11 09:24:29,095 DEBUG: Fetched Task Data: {'id': 43, 'name': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-10T07:41:23.756572', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 09:24:29,095 INFO: Task details fetched successfully for Task ID 43.
2025-02-11 09:24:29,096 INFO: ROLLBACK
2025-02-11 09:24:29,097 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:29] "GET /api/tasks/43 HTTP/1.1" 200 -
2025-02-11 09:24:32,857 INFO: Assigning contributor to task ID 43
2025-02-11 09:24:32,857 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:24:32,857 INFO: Contributor ID received: 5
2025-02-11 09:24:32,858 INFO: BEGIN (implicit)
2025-02-11 09:24:32,858 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:32,858 INFO: [cached since 740.1s ago] {'pk_1': 43}
2025-02-11 09:24:32,859 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:32,860 DEBUG: Row (43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, None, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 10, 7, 41, 23, 756572), None)
2025-02-11 09:24:32,860 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:32,861 INFO: [cached since 288.9s ago] {'pk_1': 5}
2025-02-11 09:24:32,861 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:32,861 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:32,863 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:32,865 INFO: [cached since 288.9s ago] {'pk_1': 6}
2025-02-11 09:24:32,867 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:24:32,867 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:32,868 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:24:32,868 INFO: [cached since 288.8s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 24, 32, 868623, tzinfo=datetime.timezone.utc), 'task_id': 43}
2025-02-11 09:24:32,870 INFO: COMMIT
2025-02-11 09:24:32,871 INFO: BEGIN (implicit)
2025-02-11 09:24:32,871 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:32,871 INFO: [cached since 288.8s ago] {'pk_1': 5}
2025-02-11 09:24:32,872 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:32,872 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:32,872 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:32,872 INFO: [cached since 288.8s ago] {'pk_1': 43}
2025-02-11 09:24:32,874 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:32,874 DEBUG: Row (43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 9, 24, 32, 868623), None)
2025-02-11 09:24:32,874 INFO: ROLLBACK
2025-02-11 09:24:32,874 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:32] "POST /tasks/43/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:24:33,906 INFO: save_task triggered
2025-02-11 09:24:33,906 INFO: Payload received: {'title': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'task_id': '43', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 5, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:24:33,906 INFO: Update request for Task ID: 43
2025-02-11 09:24:33,906 INFO: BEGIN (implicit)
2025-02-11 09:24:33,906 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:33,906 INFO: [cached since 741.2s ago] {'pk_1': '43'}
2025-02-11 09:24:33,907 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:33,907 DEBUG: Row (43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 9, 24, 32, 868623), None)
2025-02-11 09:24:33,908 DEBUG: Received update payload for Task ID 43: {'title': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'task_id': '43', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 5, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:24:33,908 DEBUG: Validating parent_id change for Task 43: None
2025-02-11 09:24:33,908 INFO: Hierarchy validation passed for Task 43.
2025-02-11 09:24:33,908 INFO: Validation passed for parent_id: None
2025-02-11 09:24:33,908 DEBUG: Validating task_type change for Task 43: Subtask
2025-02-11 09:24:33,908 INFO: Hierarchy validation passed for Task 43.
2025-02-11 09:24:33,908 INFO: Validation passed for task_type: Subtask
2025-02-11 09:24:33,908 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:24:33,909 INFO: [cached since 151.6s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 24, 33, 908549), 'task_id': 43}
2025-02-11 09:24:33,909 INFO: COMMIT
2025-02-11 09:24:33,910 INFO: Task ID 43 updated successfully.
2025-02-11 09:24:33,910 INFO: BEGIN (implicit)
2025-02-11 09:24:33,910 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:33,910 INFO: [cached since 289.9s ago] {'pk_1': 43}
2025-02-11 09:24:33,911 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:33,911 DEBUG: Row (43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 33, 908549), None)
2025-02-11 09:24:33,911 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:33,911 INFO: [cached since 740.6s ago] {'pk_1': 5}
2025-02-11 09:24:33,911 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:33,911 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:33,912 INFO: ROLLBACK
2025-02-11 09:24:33,912 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:33] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:24:36,178 INFO: Entering list_tasks route...
2025-02-11 09:24:36,178 DEBUG: Filters used: {'is_archived': False}
2025-02-11 09:24:36,180 DEBUG: Applying filters: {'is_archived': False}
2025-02-11 09:24:36,187 DEBUG: Generated query: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name, project_1.id AS project_1_id, project_1.name AS project_1_name, project_1.start_date AS project_1_start_date, project_1.end_date AS project_1_end_date, project_1.scope AS project_1_scope, project_1.completed_story_points AS project_1_completed_story_points, project_1.created_at AS project_1_created_at, project_1.updated_at AS project_1_updated_at, contributor_2.id AS contributor_2_id, contributor_2.name AS contributor_2_name 
FROM task LEFT OUTER JOIN task AS task_1 ON task.id = task_1.parent_id LEFT OUTER JOIN project AS project_1 ON project_1.id = task.project_id LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project_1.id = project_contributor_1.project_id LEFT OUTER JOIN contributor AS contributor_2 ON contributor_2.id = task.contributor_id 
WHERE task.is_archived = false ORDER BY task.sort_order
2025-02-11 09:24:36,187 INFO: BEGIN (implicit)
2025-02-11 09:24:36,188 INFO: SELECT anon_1.task_id AS anon_1_task_id, anon_1.task_name AS anon_1_task_name, anon_1.task_sort_order AS anon_1_task_sort_order, anon_1.task_description AS anon_1_task_description, anon_1.task_task_type AS anon_1_task_task_type, anon_1.task_is_archived AS anon_1_task_is_archived, anon_1.task_completed AS anon_1_task_completed, anon_1.task_status AS anon_1_task_status, anon_1.task_parent_id AS anon_1_task_parent_id, anon_1.task_project_id AS anon_1_task_project_id, anon_1.task_contributor_id AS anon_1_task_contributor_id, anon_1.task_story_points AS anon_1_task_story_points, anon_1.task_created_at AS anon_1_task_created_at, anon_1.task_updated_at AS anon_1_task_updated_at, anon_1.task_completed_date AS anon_1_task_completed_date, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name, project_1.id AS project_1_id, project_1.name AS project_1_name, project_1.start_date AS project_1_start_date, project_1.end_date AS project_1_end_date, project_1.scope AS project_1_scope, project_1.completed_story_points AS project_1_completed_story_points, project_1.created_at AS project_1_created_at, project_1.updated_at AS project_1_updated_at, contributor_2.id AS contributor_2_id, contributor_2.name AS contributor_2_name 
FROM (SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.is_archived = false ORDER BY task.sort_order 
 LIMIT %(param_1)s OFFSET %(param_2)s) AS anon_1 LEFT OUTER JOIN task AS task_1 ON anon_1.task_id = task_1.parent_id LEFT OUTER JOIN project AS project_1 ON project_1.id = anon_1.task_project_id LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project_1.id = project_contributor_1.project_id LEFT OUTER JOIN contributor AS contributor_2 ON contributor_2.id = anon_1.task_contributor_id ORDER BY anon_1.task_sort_order
2025-02-11 09:24:36,188 INFO: [cached since 751s ago] {'param_1': 110, 'param_2': 0}
2025-02-11 09:24:36,192 DEBUG: Col ('anon_1_task_id', 'anon_1_task_name', 'anon_1_task_sort_order', 'anon_1_task_description', 'anon_1_task_task_type', 'anon_1_task_is_archived', 'anon_1_task_completed', 'anon_1_task_status', 'anon_1_task_parent_id', 'anon_1_task_project_id', 'anon_1_task_contributor_id', 'anon_1_task_story_points', 'anon_1_task_created_at', 'anon_1_task_updated_at', 'anon_1_task_completed_date', 'task_1_id', 'task_1_name', 'task_1_sort_order', 'task_1_description', 'task_1_task_type', 'task_1_is_archived', 'task_1_completed', 'task_1_status', 'task_1_parent_id', 'task_1_project_id', 'task_1_contributor_id', 'task_1_story_points', 'task_1_created_at', 'task_1_updated_at', 'task_1_completed_date', 'contributor_1_id', 'contributor_1_name', 'project_1_id', 'project_1_name', 'project_1_start_date', 'project_1_end_date', 'project_1_scope', 'project_1_completed_story_points', 'project_1_created_at', 'project_1_updated_at', 'contributor_2_id', 'contributor_2_name')
2025-02-11 09:24:36,193 DEBUG: Row (290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,193 DEBUG: Row (298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None, 299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 09:24:36,193 DEBUG: Row (275, 'add sprints, cycles', 0, 'Make naming customizable', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 48, 52, 680022), datetime.datetime(2025, 2, 10, 8, 38, 37, 622196), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,193 DEBUG: Row (276, 'add support for priority', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 49, 26, 189497), datetime.datetime(2025, 2, 10, 8, 28, 47, 447612), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,193 DEBUG: Row (264, 'close all / open all childtasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 25, 20, 101418), datetime.datetime(2025, 2, 10, 8, 47, 14, 915970), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,193 DEBUG: Row (285, 'add text truncation to project names in task list', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 45, 47, 27805), datetime.datetime(2025, 2, 10, 9, 45, 47, 29729), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,194 DEBUG: Row (257, 'Update Task API Integration', 0, "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'Subtask', False, False, 'Not Started', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 22, 55, 49, 566819), datetime.datetime(2025, 2, 5, 22, 18, 17, 807154), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,194 DEBUG: Row (294, 'issue: task table filters not working', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 19, 21, 22598), datetime.datetime(2025, 2, 10, 10, 19, 21, 24676), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,194 DEBUG: Row (267, 'improvements to toggles and nested tasks', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 29, 12, 464594), datetime.datetime(2025, 2, 10, 8, 47, 24, 581680), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,194 DEBUG: Row (271, 'make sure dynamically added rows has the exact same styling and includes every element', 0, 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 21, 7, 108431), datetime.datetime(2025, 2, 10, 8, 38, 47, 340105), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,194 DEBUG: Row (283, 'fix update title', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 58, 769700), datetime.datetime(2025, 2, 10, 8, 46, 47, 282087), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,194 DEBUG: Row (273, 'disable parent task selector in epics', 0, 'and add text, Epic can´t have parent tasks', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 0, 45, 20, 740910), datetime.datetime(2025, 2, 10, 8, 39, 17, 639890), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,194 DEBUG: Row (269, 'fix styling for sweetalert', 0, '', 'User Story', False, False, 'In Progress', None, 6, None, 0, datetime.datetime(2025, 2, 8, 15, 54, 56, 717846), datetime.datetime(2025, 2, 10, 8, 39, 32, 172437), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,194 DEBUG: Row (286, 'add support for labels/tags', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 46, 23, 985620), datetime.datetime(2025, 2, 10, 9, 46, 23, 987564), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,194 DEBUG: Row (299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 09:24:36,194 DEBUG: Row (266, 'highlight the nested tasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 28, 30, 382949), datetime.datetime(2025, 2, 10, 8, 47, 4, 382929), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,194 DEBUG: Row (279, 'github integration', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 38, 238202), datetime.datetime(2025, 2, 10, 8, 39, 24, 168451), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,194 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 10, 9, 12, 47, 626993), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,194 DEBUG: Row (272, 'implement a markdown text editor like notion', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 28, 18, 300231), datetime.datetime(2025, 2, 10, 8, 28, 39, 669255), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,194 DEBUG: Row (278, 'search feature for tasks list', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 3, 369833), datetime.datetime(2025, 2, 10, 8, 39, 4, 5957), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,195 DEBUG: Row (281, 'add high level plan', 0, 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 27, 1, 218606), datetime.datetime(2025, 2, 10, 8, 38, 54, 754760), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,195 DEBUG: Row (287, 'when moving a parent item to another project make sure the subtasks are moved as well', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 48, 31, 986870), datetime.datetime(2025, 2, 10, 9, 48, 31, 988859), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,195 DEBUG: Row (293, 'click on title should copy the task title and id to clipboard', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 16, 33, 508209), datetime.datetime(2025, 2, 10, 10, 16, 33, 510414), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,195 DEBUG: Row (277, 'custom task workflow statuses', 0, 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- ... (780 characters truncated) ...  tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 16, 3, 352588), datetime.datetime(2025, 2, 10, 8, 38, 28, 123328), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,195 DEBUG: Row (274, 'add support for goals, initiatives, okr´s', 0, 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 46, 27, 204912), datetime.datetime(2025, 2, 10, 8, 28, 17, 663922), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,195 DEBUG: Row (280, 'logging (task and project history)', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 37, 44, 435112), datetime.datetime(2025, 2, 10, 8, 28, 28, 947805), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,195 DEBUG: Row (282, 'implement same task list in projects but filtered on project', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 17, 786154), datetime.datetime(2025, 2, 10, 9, 41, 17, 787861), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,195 DEBUG: Row (296, 'issue: contributor is lost after updating task', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 26, 43, 881947), datetime.datetime(2025, 2, 10, 10, 26, 43, 884004), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,195 DEBUG: Row (288, 'when trying to move subtask to another project, make sure a warning is displayed', 0, 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be l ... (312 characters truncated) ... , Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 54, 36, 297869), datetime.datetime(2025, 2, 10, 8, 54, 51, 840686), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,195 DEBUG: Row (284, 'add type "issue/bug"', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 42, 27, 719439), datetime.datetime(2025, 2, 10, 9, 42, 27, 720908), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,195 DEBUG: Row (295, 'issue: drag and drop errors', 0, '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 22, 54, 461413), datetime.datetime(2025, 2, 10, 10, 22, 54, 462542), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,195 DEBUG: Row (297, 'example parent epic', 0, '', 'Epic', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 39, 51, 620509), datetime.datetime(2025, 2, 10, 10, 39, 51, 622712), None, 298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 09:24:36,195 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 10, 10, 11, 12, 274809), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,196 DEBUG: Row (265, 'smooth transition for toggles', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 27, 23, 422612), datetime.datetime(2025, 2, 10, 8, 46, 55, 831743), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,196 DEBUG: Row (270, 'the newest task', 0, '', 'Subtask', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 0, 7, 34, 368035), datetime.datetime(2025, 2, 10, 1, 7, 34, 372478), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 09:24:36,196 DEBUG: Row (291, 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 9, 52, 988609), datetime.datetime(2025, 2, 10, 10, 9, 52, 997455), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 09:24:36,196 DEBUG: Row (136, 'Page scroll should stay in position when reloading', 2, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 16, 18, 21, 50, 187247), datetime.datetime(2025, 1, 16, 19, 22, 36, 214901), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,196 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,196 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,196 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,196 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,196 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,197 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,197 DEBUG: Row (133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,197 DEBUG: Row (132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,197 DEBUG: Row (134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,197 DEBUG: Row (131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,197 DEBUG: Row (135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,198 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None, 63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,198 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None, 62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,198 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,198 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,198 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,198 DEBUG: Row (64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,199 DEBUG: Row (67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,199 DEBUG: Row (65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,199 DEBUG: Row (63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,199 DEBUG: Row (63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,199 DEBUG: Row (68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,199 DEBUG: Row (69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,199 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,200 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,200 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,200 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,200 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,200 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,200 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 30, 747962), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,200 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,200 DEBUG: Row (107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 30, 747962), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,201 DEBUG: Row (108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,201 DEBUG: Row (112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,201 DEBUG: Row (109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,201 DEBUG: Row (110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,201 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,201 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,201 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,201 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,201 DEBUG: Row (111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,201 DEBUG: Row (113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,201 DEBUG: Row (114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,201 DEBUG: Row (106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,201 DEBUG: Row (106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,201 DEBUG: Row (128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,202 DEBUG: Row (129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,202 DEBUG: Row (102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,202 DEBUG: Row (102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,202 DEBUG: Row (117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,202 DEBUG: Row (116, 'Frontend Logout Button', 33, 'Add a logout button to the UI and handle session clearing.', 'Subtask', False, False, 'Not Started', None, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 2, 9, 12, 31, 17, 939784), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,202 DEBUG: Row (115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,202 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, None, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,202 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,202 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 296814), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,202 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,202 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,202 DEBUG: Row (45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None, 51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,202 DEBUG: Row (50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 10, 7, 41, 43, 569807), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,203 DEBUG: Row (51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,203 DEBUG: Row (46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None, 54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 286248), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,203 DEBUG: Row (54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 286248), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,203 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, None, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), None, 55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, None, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 290910), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,203 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, None, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), None, 56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, None, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 289338), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,203 DEBUG: Row (56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, None, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 289338), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,203 DEBUG: Row (55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, None, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 290910), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,204 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), None, 57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 294045), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,204 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), None, 58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, None, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 295385), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,204 DEBUG: Row (57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 294045), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,204 DEBUG: Row (58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, None, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 295385), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,204 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 296814), None, 60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, None, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 299971), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,204 DEBUG: Row (59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 9, 23, 48, 8, 770907), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,204 DEBUG: Row (60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, None, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 299971), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,204 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, None, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 10, 7, 41, 33, 252945), None, 52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, None, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 10, 7, 40, 33, 847642), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,205 DEBUG: Row (52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, None, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 10, 7, 40, 33, 847642), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,205 DEBUG: Row (53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, None, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 9, 7, 55, 0, 680183), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,205 DEBUG: Row (42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, None, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 10, 7, 41, 18, 814716), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 09:24:36,205 DEBUG: Row (43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 33, 908549), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,205 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,205 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,205 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,205 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,206 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,206 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,206 DEBUG: Row (90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,206 DEBUG: Row (88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,207 DEBUG: Row (89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,207 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,207 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,207 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,207 DEBUG: Row (93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,207 DEBUG: Row (91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,207 DEBUG: Row (92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,207 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,207 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,207 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,208 DEBUG: Row (96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,208 DEBUG: Row (94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,208 DEBUG: Row (95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,208 DEBUG: Row (127, 'Backend API for Password Reset', 68, 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'Subtask', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 2, 10, 23, 59, 50, 734037), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,208 DEBUG: Row (126, 'Email Configuration for Password Reset', 69, 'Configure email service to send password reset links.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 334340), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,208 DEBUG: Row (104, 'Middleware for Role Enforcement', 70, 'As a system, I want to enforce role-based access to specific routes.', 'User Story', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 23, 40, 346816), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,208 DEBUG: Row (122, 'Testing Role Enforcement', 71, 'Write tests to ensure proper access control based on roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 185693), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,208 DEBUG: Row (121, 'Develop Role Enforcement Middleware', 72, 'Implement middleware to check user roles for access control.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 187439), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,209 DEBUG: Row (105, 'Profile Management', 73, 'As a user, I want to update my profile (username, email, password).', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 339830), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,209 DEBUG: Row (123, 'Backend API for Profile Management', 74, 'Create PATCH /api/profile endpoint to update user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 678781), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,209 DEBUG: Row (125, 'Testing Profile Updates', 75, 'Write tests for profile update functionality.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 680382), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:36,210 INFO: SELECT count(*) AS count_1 
FROM (SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.is_archived = false) AS anon_1
2025-02-11 09:24:36,211 INFO: [cached since 751s ago] {}
2025-02-11 09:24:36,211 DEBUG: Col ('count_1',)
2025-02-11 09:24:36,211 DEBUG: Row (131,)
2025-02-11 09:24:36,212 INFO: SELECT DISTINCT task.task_type AS task_task_type 
FROM task
2025-02-11 09:24:36,212 INFO: [cached since 751s ago] {}
2025-02-11 09:24:36,212 DEBUG: Col ('task_task_type',)
2025-02-11 09:24:36,212 DEBUG: Row ('Epic',)
2025-02-11 09:24:36,213 DEBUG: Row ('Subtask',)
2025-02-11 09:24:36,213 DEBUG: Row ('User Story',)
2025-02-11 09:24:36,213 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project
2025-02-11 09:24:36,213 INFO: [cached since 751s ago] {}
2025-02-11 09:24:36,213 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:36,213 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 09:24:36,213 DEBUG: Row (2, 'Project Beta', datetime.date(2024, 2, 1), datetime.date(2024, 11, 30), None, 10, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 09:24:36,213 DEBUG: Row (3, 'Project Gamma', datetime.date(2024, 3, 1), datetime.date(2024, 10, 31), None, 20, datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), datetime.datetime(2024, 12, 11, 1, 37, 19, 511738))
2025-02-11 09:24:36,213 DEBUG: Row (4, 'Project Theta', datetime.date(2024, 12, 11), datetime.date(2024, 12, 27), None, 0, datetime.datetime(2024, 12, 12, 19, 26, 42, 642098), datetime.datetime(2024, 12, 12, 19, 26, 42, 642102))
2025-02-11 09:24:36,213 DEBUG: Row (5, 'Project Delta', datetime.date(2025, 1, 4), datetime.date(2025, 3, 8), None, 0, datetime.datetime(2025, 1, 3, 8, 16, 18, 658051), datetime.datetime(2025, 1, 3, 8, 16, 18, 658058))
2025-02-11 09:24:36,213 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259))
2025-02-11 09:24:36,213 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:36,214 DEBUG: Tasks passed to template: [{'id': 290, 'name': 'issue: error when changing task type and', 'description': 'issue: error when changing task type and parent task before saving', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:00:03.417734', 'updated_at': '2025-02-10T09:15:09.284969'}, {'id': 298, 'name': 'example user story with parent epic 297', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 297, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:41:01.907455', 'updated_at': '2025-02-10T14:59:04.142570'}, {'id': 275, 'name': 'add sprints, cycles', 'description': 'Make naming customizable', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:48:52.680022', 'updated_at': '2025-02-10T08:38:37.622196'}, {'id': 276, 'name': 'add support for priority', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:49:26.189497', 'updated_at': '2025-02-10T08:28:47.447612'}, {'id': 264, 'name': 'close all / open all childtasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:25:20.101418', 'updated_at': '2025-02-10T08:47:14.915970'}, {'id': 285, 'name': 'add text truncation to project names in task list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:45:47.027805', 'updated_at': '2025-02-10T09:45:47.029729'}, {'id': 257, 'name': 'Update Task API Integration', 'description': "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 240, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-02-05T22:55:49.566819', 'updated_at': '2025-02-05T22:18:17.807154'}, {'id': 294, 'name': 'issue: task table filters not working', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:19:21.022598', 'updated_at': '2025-02-10T10:19:21.024676'}, {'id': 267, 'name': 'improvements to toggles and nested tasks', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:29:12.464594', 'updated_at': '2025-02-10T08:47:24.581680'}, {'id': 271, 'name': 'make sure dynamically added rows has the exact same styling and includes every element', 'description': 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:21:07.108431', 'updated_at': '2025-02-10T08:38:47.340105'}, {'id': 283, 'name': 'fix update title', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:58.769700', 'updated_at': '2025-02-10T08:46:47.282087'}, {'id': 273, 'name': 'disable parent task selector in epics', 'description': 'and add text, Epic can´t have parent tasks', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:45:20.740910', 'updated_at': '2025-02-10T08:39:17.639890'}, {'id': 269, 'name': 'fix styling for sweetalert', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'In Progress', 'created_at': '2025-02-08T15:54:56.717846', 'updated_at': '2025-02-10T08:39:32.172437'}, {'id': 286, 'name': 'add support for labels/tags', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:46:23.985620', 'updated_at': '2025-02-10T09:46:23.987564'}, {'id': 299, 'name': 'example sub task with parent user story 298', 'description': 'Test update 1\nTest update 2\nTest update 3', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 298, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:42:38.905700', 'updated_at': '2025-02-10T23:23:08.671464'}, {'id': 266, 'name': 'highlight the nested tasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:28:30.382949', 'updated_at': '2025-02-10T08:47:04.382929'}, {'id': 279, 'name': 'github integration', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:38.238202', 'updated_at': '2025-02-10T08:39:24.168451'}, {'id': 289, 'name': 'issue: parent task is lost when updating task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:56:25.273984', 'updated_at': '2025-02-10T09:12:47.626993'}, {'id': 272, 'name': 'implement a markdown text editor like notion', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:28:18.300231', 'updated_at': '2025-02-10T08:28:39.669255'}, {'id': 278, 'name': 'search feature for tasks list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:03.369833', 'updated_at': '2025-02-10T08:39:04.005957'}, {'id': 281, 'name': 'add high level plan', 'description': 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:27:01.218606', 'updated_at': '2025-02-10T08:38:54.754760'}, {'id': 287, 'name': 'when moving a parent item to another project make sure the subtasks are moved as well', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:48:31.986870', 'updated_at': '2025-02-10T09:48:31.988859'}, {'id': 293, 'name': 'click on title should copy the task title and id to clipboard', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:16:33.508209', 'updated_at': '2025-02-10T10:16:33.510414'}, {'id': 277, 'name': 'custom task workflow statuses', 'description': 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- Custom status\n-- Custom status\n- In Progress\n-- Custom status\n-- Custom status\n-- Custom status\n- Completed\n-- Custom status\n-- Custom status\n\n2. How can we track a task through different stages and save the sequence of events or stages the task has gone through?\nI´m thinking it could be good for mapping out processes, identifying bottlenecks and provide valuable insights while improving and streamlining workflows.\n- Stages\n- Contacts taken\n- Respons time \n- Time to action after responses\n- Dependencies\n\nNeed to be able to record every action related to this action.\nCommunication integrations\n- Slack\n- Email\n- Text messages\n- Phonecalls\n- Calendar events, meetings\n- Zoom, Google meet, Teams etc..\n\n\n2. Set custom statuses per project (can use tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:16:03.352588', 'updated_at': '2025-02-10T08:38:28.123328'}, {'id': 274, 'name': 'add support for goals, initiatives, okr´s', 'description': 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:46:27.204912', 'updated_at': '2025-02-10T08:28:17.663922'}, {'id': 280, 'name': 'logging (task and project history)', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:37:44.435112', 'updated_at': '2025-02-10T08:28:28.947805'}, {'id': 282, 'name': 'implement same task list in projects but filtered on project', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:17.786154', 'updated_at': '2025-02-10T09:41:17.787861'}, {'id': 296, 'name': 'issue: contributor is lost after updating task', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:26:43.881947', 'updated_at': '2025-02-10T10:26:43.884004'}, {'id': 288, 'name': 'when trying to move subtask to another project, make sure a warning is displayed', 'description': 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be lost"\nOR\n\nIs it possible, and is it desireable to keep parent child relationships across projects?\nSo that a parent can be in one project but the child tasks can be in different projects?\n\nLets say \nParent epic is \n"Internationalisation"\nChild user stories are\n- Timezones\n- Language\n- Currency\n- Day, Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:54:36.297869', 'updated_at': '2025-02-10T08:54:51.840686'}, {'id': 284, 'name': 'add type "issue/bug"', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:42:27.719439', 'updated_at': '2025-02-10T09:42:27.720908'}, {'id': 295, 'name': 'issue: drag and drop errors', 'description': '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:22:54.461413', 'updated_at': '2025-02-10T10:22:54.462542'}, {'id': 297, 'name': 'example parent epic', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:39:51.620509', 'updated_at': '2025-02-10T10:39:51.622712'}, {'id': 292, 'name': 'issue: assigning contributor does not work', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:11:12.273779', 'updated_at': '2025-02-10T10:11:12.274809'}, {'id': 265, 'name': 'smooth transition for toggles', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:27:23.422612', 'updated_at': '2025-02-10T08:46:55.831743'}, {'id': 270, 'name': 'the newest task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:07:34.368035', 'updated_at': '2025-02-10T01:07:34.372478'}, {'id': 291, 'name': 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:09:52.988609', 'updated_at': '2025-02-10T10:09:52.997455'}, {'id': 136, 'name': 'Page scroll should stay in position when reloading', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-16T18:21:50.187247', 'updated_at': '2025-01-16T19:22:36.214901'}, {'id': 130, 'name': 'Implement the Map of Task Relationships solution for drag-and-drop', 'description': 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.093022', 'updated_at': '2025-01-16T19:22:36.216705'}, {'id': 133, 'name': 'Step 4: Enhance Logging in models.py', 'description': 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nupdating the Task model in the following ways:\n\n1.\tLog Changes to parent_id:\n\t•\tLog changes to parent_id during updates, including old and new values.\n\t2.\tValidate Hierarchy with Logging:\n\t•\tLog detailed messages when validating hierarchy changes, especially for circular dependency checks.\n\nHere’s how the models.py can be updated:\n```\nfrom datetime import datetime, timezone\nfrom sqlalchemy import func, cast, CheckConstraint\nfrom sqlalchemy.orm import validates\nfrom app.extensions.db import db\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\nclass Task(db.Model):\n    __tablename__ = "task"\n    \n    # Other columns...\n\n    parent_id = db.Column(\n        db.Integer, db.ForeignKey("task.id"), index=True, nullable=True\n    )\n\n    # Relationships\n    parent = db.relationship(\n        "Task", remote_side=[id], back_populates="children", lazy="select"\n    )\n    children = db.relationship(\n        "Task", back_populates="parent", lazy="select"\n    )\n\n    \n\n\n    @staticmethod\n    def _validate_no_circular_references(new_parent_id):\n        """\n        Validates that there are no circular references in the task hierarchy.\n\n        Args:\n            new_parent_id (int): The new parent ID to validate.\n\n        Raises:\n            ValueError: If a circular reference is detected.\n        """\n        visited = set()\n        current_parent_id = new_parent_id\n\n        logger.info(f"Validating circular references for parent ID: {new_parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error(\n                    f"Circular reference detected: Parent ID {current_parent_id} already visited."\n                )\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            # Fetch the next parent_id in the hierarchy\n            parent = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not parent:\n                break  # Exit if no parent is found\n            current_parent_id = parent.parent_id\n\n        logger.info("No circular reference detected.")\n\n    @validates(\'parent_id\', \'task_type\')\n    def validate_task_changes(self, key, value):\n        """\n        Validates changes to \'parent_id\' and \'task_type\'.\n        Ensures hierarchy validity and checks for circular references.\n        """\n        logger.debug(f"Validating {key} change for Task {self.id}: {value}")\n\n        if key == \'parent_id\':\n            # Log changes to parent_id\n            if self.id and value != self.parent_id:\n                logger.info(f"Task {self.id}: Updating \'parent_id\' from {self.parent_id} to {value}")\n\n            # Prevent a task from being its own parent\n            if value and value == self.id:\n                logger.error("A task cannot be its own parent.")\n                raise ValueError("A task cannot be its own parent.")\n\n            # Check for circular references\n            if value:\n                Task.check_circular_reference(self.id, value)\n\n        elif key == \'task_type\':\n            # Log changes to task_type\n            if self.id and value != self.task_type:\n                logger.info(f"Task {self.id}: Updating \'task_type\' from {self.task_type} to {value}")\n\n        # Check hierarchy rules without triggering further validation\n        if key in [\'parent_id\', \'task_type\']:\n            self._validate_hierarchy_change(key, value)\n\n        logger.info(f"Validation passed for {key}: {value}")\n        return value\n\n    def _validate_hierarchy_change(self, key, value):\n        """\n        Validates hierarchy rules for the task based on `task_type` and `parent_id`.\n        """\n        if key == \'parent_id\' and value:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=value).first()\n            if not parent_task:\n                raise ValueError("Parent task does not exist.")\n\n            logger.debug(f"Validating hierarchy: Task {self.id}, Parent Type: {parent_task.task_type}")\n            if self.task_type == "User Story" and parent_task.task_type != "Epic":\n                raise ValueError("User Stories must have an Epic as a parent.")\n            if self.task_type == "Subtask" and parent_task.task_type != "User Story":\n                raise ValueError("Subtasks must have a User Story as a parent.")\n\n        elif key == \'task_type\' and self.parent_id:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=self.parent_id).first()\n            if parent_task:\n                logger.debug(f"Validating hierarchy: Task Type: {value}, Parent Type: {parent_task.task_type}")\n                if value == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError("User Stories must have an Epic as a parent.")\n                if value == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError("Subtasks must have a User Story as a parent.")\n\n        logger.info(f"Hierarchy validation passed for Task {self.id if self.id else \'New Task\'}.")\n\n    @staticmethod\n    def check_circular_reference(task_id, parent_id):\n        """\n        Iteratively checks for circular references in the task hierarchy.\n        Prevents stack overflow on deep hierarchies.\n        """\n        visited = set()\n        current_parent_id = parent_id\n\n        logger.info(f"Checking circular reference for Task {task_id} with Parent ID: {parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error("Circular reference detected!")\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            if current_parent_id == task_id:\n                logger.error("A task cannot be its own ancestor.")\n                raise ValueError("A task cannot be its own ancestor.")\n\n            # Fetch the next parent_id in the hierarchy\n            task = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not task:\n                break\n            current_parent_id = task.parent_id\n\n        logger.info("Circular reference check passed.")\n```\nKey Enhancements:\n\t1.\tlog_and_validate_parent_id_change:\n\t•\tLogs the old and new parent_id whenever it changes.\n\t•\tEnsures no circular references are introduced.\n\t2.\t_validate_no_circular_references:\n\t•\tValidates the parent_id field to prevent circular dependencies.\n\t•\tLogs progress and raises detailed errors if violations occur.\n\t3.\tlog_and_validate_task_type_change:\n\t•\tLogs changes to task_type with the old and new values.\n\t•\tRevalidates hierarchy rules when task_type changes.\n\t4.\tDetailed Logging for Circular Reference Validation:\n\t•\t_validate_no_circular_references and check_circular_reference methods log every step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:44:08.340041', 'updated_at': '2025-01-16T19:22:36.219710'}, {'id': 132, 'name': 'Step 1: Update tasks_table_interactions.js', 'description': '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the map for efficient parent-child relationship lookups instead of DOM traversal.\n\n```\nexport const TaskManager = {\n    init: function (csrfToken) {\n        this.csrfToken = csrfToken;\n        this.initTaskParentMap(); // Initialize the map\n        this.initDragAndDrop(); // Initialize drag-and-drop functionality\n    },\n\n    // Initialize a global map for task relationships\n    taskParentMap: new Map(),\n\n    // Build the taskParentMap from the DOM\n    initTaskParentMap: function () {\n        console.log("Initializing Task Parent Map...");\n        const rows = document.querySelectorAll("tr[data-task-id]");\n\n        rows.forEach((row) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = parseInt(row.dataset.parentId, 10) || null;\n            this.taskParentMap.set(taskId, parentId);\n        });\n\n        console.log("Task Parent Map initialized:", Array.from(this.taskParentMap.entries()));\n    },\n\n    // Update the map dynamically after drag-and-drop\n    updateTaskParentMap: function (taskId, parentId) {\n        console.log(`Updating Task Parent Map: Task ${taskId} -> Parent ${parentId}`);\n        this.taskParentMap.set(taskId, parentId);\n    },\n\n    initDragAndDrop: function () {\n        if (window.isDragAndDropInitialized) {\n            console.log("Drag-and-drop is already initialized.");\n            return;\n        }\n\n        console.log("Initializing drag-and-drop within TaskManager...");\n\n        const tableBody = document.querySelector("tbody");\n        if (!tableBody) {\n            console.warn("Task table body not found for drag-and-drop initialization");\n            return;\n        }\n\n        // Initialize Sortable.js for drag-and-drop functionality\n        Sortable.create(tableBody, {\n            handle: ".task-row", // Only draggable via `.task-row` elements\n            animation: 150, // Smooth animation\n            filter: ".task-open-link", // Prevent dragging on task links\n            preventOnFilter: true, // Prevent drag if filtered element is clicked\n            onEnd: async (event) => {\n                try {\n                    console.log("Drag-and-drop operation started...");\n                    const rows = Array.from(event.from.querySelectorAll(".task-row"));\n                    const reorderedTasks = [];\n\n                    rows.forEach((row, index) => {\n                        const taskId = parseInt(row.dataset.taskId, 10);\n                        let parentId = null;\n\n                        // Get the parent ID from the map or fallback to the dataset\n                        if (row.classList.contains("subtask-row")) {\n                            const parentRow = row.previousElementSibling;\n                            parentId = parentRow\n                                ? parseInt(parentRow.dataset.taskId, 10)\n                                : this.taskParentMap.get(taskId) || null;\n                        }\n\n                        // Update the taskParentMap dynamically\n                        this.updateTaskParentMap(taskId, parentId);\n\n                        reorderedTasks.push({\n                            id: taskId,\n                            sort_order: index + 1,\n                            parent_id: parentId,\n                        });\n                    });\n\n                    console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n                    console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n                    // Send the payload to the backend\n                    const response = await fetch("/tasks/reorder_subtasks", {\n                        method: "POST",\n                        headers: {\n                            "Content-Type": "application/json",\n                            "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n                        },\n                        body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n                    });\n\n                    if (!response.ok) {\n                        const errorData = await response.json();\n                        console.error("Error reordering tasks:", errorData);\n                        alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n                        return;\n                    }\n\n                    const data = await response.json();\n                    console.log("Task reordering successful:", data);\n\n                } catch (error) {\n                    console.error("Error during drag-and-drop operation:", error);\n                    alert("An unexpected error occurred while reordering tasks.");\n                }\n            },\n        });\n\n        window.isDragAndDropInitialized = true;\n        console.log("Drag-and-drop initialized successfully.");\n    },\n};\n```\n\nKey Updates:\n\t1.\tPrecomputed Map (taskParentMap):\n\t•\tThe initTaskParentMap function initializes the map by iterating over DOM elements and mapping each task’s ID to its parent ID.\n\t•\tThe updateTaskParentMap dynamically updates the map when tasks are reordered.\n\t2.\tEfficient Parent Lookup:\n\t•\tThe parentId is derived from the precomputed map rather than DOM traversal.\n\t3.\tBackend Payload:\n\t•\tA structured payload (reorderedTasks) is sent to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:44:08.338301', 'updated_at': '2025-02-06T21:59:17.417466'}, {'id': 134, 'name': 'Step 2: Update the Backend in routes.py', 'description': 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\nPlan for step 2:\n\t1.\tVerify the payload structure:\n\t•\tEnsure that the payload includes all necessary fields (id, sort_order, parent_id) for each task.\n\t•\tValidate that the parent-child relationships in the precomputed map (taskParentMap) are reflected correctly in the payload.\n\t2.\tSubmit the payload to the backend:\n\t•\tEnhance the fetch request in the onEnd function of initDragAndDrop to log detailed submission data.\n\t•\tConfirm the payload integrity in the browser console before submission.\n\t3.\tUpdate backend logging:\n\t•\tAdd logging to /reorder_subtasks in routes.py to confirm receipt of the correct payload and process parent-child updates.\n\t•\tLog before and after database updates for better debugging.\n\n-----\nUpdated tasks_table_interactions.js\n\nReplace this section:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    let parentId = null;\n```\nWith:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    const parentId = this.taskParentMap.get(taskId) || null;\n```\nThe this.taskParentMap provides a precomputed and dynamic mapping of taskId to parentId. By using this map, we avoid relying on DOM traversal logic (row.closest or row.previousElementSibling) during drag-and-drop operations, which can sometimes be unreliable or cumbersome.\n\nFull Revised onEnd section:\n```\nonEnd: async (event) => {\n    try {\n        console.log("Drag-and-drop operation started...");\n        const rows = Array.from(event.from.querySelectorAll(".task-row"));\n        const reorderedTasks = [];\n\n        rows.forEach((row, index) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = this.taskParentMap.get(taskId) || null;\n\n            // Update the taskParentMap dynamically\n            this.updateTaskParentMap(taskId, parentId);\n\n            reorderedTasks.push({\n                id: taskId,\n                sort_order: index + 1,\n                parent_id: parentId,\n            });\n        });\n\n        console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n        console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n        // Send the payload to the backend\n        const response = await fetch("/tasks/reorder_subtasks", {\n            method: "POST",\n            headers: {\n                "Content-Type": "application/json",\n                "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n            },\n            body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            console.error("Error reordering tasks:", errorData);\n            alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n            return;\n        }\n\n        const data = await response.json();\n        console.log("Task reordering successful:", data);\n\n    } catch (error) {\n        console.error("Error during drag-and-drop operation:", error);\n        alert("An unexpected error occurred while reordering tasks.");\n    }\n}\n```\n---------------------------------\nEnsure updates include:\n\t•\tBetter Logging: Adding logs for key events such as database changes and validation results.\n\t•\tInput Validation: Ensure all required fields (id, sort_order, parent_id) exist in the payload.\n\t•\tPost-Commit Validation: Confirm database updates after the commit.\n\t•\tImproved Error Handling: Include specific error messages and consistent rollback mechanisms.\n\nBelow is the revised reorder_subtasks route with descriptive comments for each section:\n```\n@bp.route("/reorder_subtasks", methods=["POST"])\ndef reorder_subtasks():\n    """\n    Reorder subtasks globally or reassign them to a different parent.\n\n    Steps:\n    - Parse and validate input from the frontend.\n    - Update parent-child relationships and sort order in the database.\n    - Commit changes and return a success response.\n    - Handle errors gracefully and provide detailed logs for debugging.\n    """\n    logger.info("Entering reorder_subtasks route...")\n    logger.info(f"Received payload for reordering tasks: {request.json}")\n\n    try:\n        # Step 1: Parse input\n        parent_id = request.json.get("parent_id", None)  # Optional parent ID for the tasks being reordered\n        ordered_tasks = request.json.get("ordered_tasks", [])\n\n        logger.debug(f"Parsed parent_id: {parent_id}")\n        logger.debug(f"Parsed ordered_tasks: {ordered_tasks}")\n\n        # Step 2: Validate input\n        if not isinstance(ordered_tasks, list) or not all(\n            isinstance(task, dict) and "id" in task and "sort_order" in task and "parent_id" in task\n            for task in ordered_tasks\n        ):\n            logger.error(f"Invalid input received for ordered_tasks: {ordered_tasks}")\n            return jsonify({\n                "error": "Invalid input format for \'ordered_tasks\'. Each task must include \'id\', \'sort_order\', and \'parent_id\'."\n            }), 400\n\n        # Step 3: Validate parent task (if applicable)\n        if parent_id is not None:\n            parent_task = Task.query.get(parent_id)\n            if not parent_task:\n                logger.error(f"Parent task with ID {parent_id} not found.")\n                return jsonify({"error": f"Parent ID {parent_id} is invalid or does not exist."}), 400\n\n        logger.info("Input validation passed. Proceeding with task updates...")\n\n        # Step 4: Process updates for each subtask\n        updated_subtasks = []  # Keep track of updated subtasks for post-commit validation\n\n        for task_data in ordered_tasks:\n            subtask_id = task_data["id"]\n            sort_order = task_data["sort_order"]\n            new_parent_id = task_data["parent_id"]\n\n            # Fetch the subtask from the database\n            subtask = Task.query.get(subtask_id)\n            if not subtask:\n                logger.warning(f"Subtask ID {subtask_id} not found. Skipping...")\n                continue\n\n            # Log and update parent_id if it changes\n            if new_parent_id is not None and new_parent_id != subtask.parent_id:\n                logger.info(f"Reassigning subtask {subtask.id} to new parent {new_parent_id}")\n                subtask.parent_id = new_parent_id\n\n            # Update sort order\n            subtask.sort_order = sort_order\n            logger.debug(f"Updated subtask {subtask.id}: parent_id={subtask.parent_id}, sort_order={subtask.sort_order}")\n\n            # Add to the list of updated subtasks for validation\n            updated_subtasks.append(subtask)\n\n        # Step 5: Commit changes to the database\n        try:\n            db.session.commit()\n            logger.info(f"Subtasks reordered successfully: {[task[\'id\'] for task in ordered_tasks]}")\n        except Exception as e:\n            logger.error(f"Error committing changes to the database: {str(e)}")\n            db.session.rollback()\n            return jsonify({"error": "Failed to save changes to the database. Please try again."}), 500\n\n        # Step 6: Post-commit validation\n        for subtask in updated_subtasks:\n            logger.debug(f"Post-commit parent_id for task {subtask.id}: {subtask.parent_id}")\n            logger.debug(f"Post-commit sort_order for task {subtask.id}: {subtask.sort_order}")\n\n        # Step 7: Return success response\n        return jsonify({\n            "success": True,\n            "message": "Subtasks reordered successfully.",\n            "updated_subtasks": [subtask.id for subtask in updated_subtasks]\n        }), 200\n\n    except Exception as e:\n        # Step 8: Handle unexpected errors\n        logger.error(f"Error while reordering subtasks: {str(e)}", exc_info=True)\n        db.session.rollback()\n        return jsonify({"error": "An unexpected error occurred while reordering subtasks."}), 500\n```\nKey Changes and Descriptive Comments\n\t1.\tInput Parsing:\n\t•\tExtracts parent_id and ordered_tasks from the request payload.\n\t•\tLogs the parsed values for debugging.\n\t2.\tInput Validation:\n\t•\tEnsures ordered_tasks is a list of dictionaries with the required keys.\n\t•\tValidates parent_id if provided, ensuring the parent task exists in the database.\n\t3.\tUpdate Processing:\n\t•\tIterates through ordered_tasks, updating each task’s parent_id and sort_order.\n\t•\tLogs changes for each task.\n\t4.\tDatabase Commit:\n\t•\tCommits all updates in a single transaction.\n\t•\tLogs success or rolls back changes in case of an error.\n\t5.\tPost-Commit Validation:\n\t•\tVerifies that the parent_id and sort_order changes were successfully saved to the database.\n\t6.\tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:46:29.348853', 'updated_at': '2025-02-06T21:59:21.617065'}, {'id': 131, 'name': 'Step 5: Update utils.py', 'description': 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nChanges to Make:\n\t1.\tEnhance Task Filtering:\n\t•\tEnsure the filters handle parent-child relationships explicitly.\n\t•\tAdd options to include or exclude subtasks in queries.\n\t2.\tUtility Function for Debugging Parent-Child Relationships:\n\t•\tProvide a function to generate a map or list of parent-child relationships for debugging purposes.\n\t3.\tValidation Functions:\n\t•\tAdd a utility function to validate parent-child relationships and ensure no circular dependencies.\n\nUpdated utils.py Code:\n```\nimport logging\nfrom sqlalchemy import func\nfrom sqlalchemy.orm import joinedload\nfrom app.extensions.db import db\nfrom app.tasks.models import Task\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\n\nclass TaskService:\n    @staticmethod\n    def filter_tasks(filters=None, include_subtasks=True, page=None, per_page=None):\n        """\n        Dynamically filters tasks with an option to include or exclude subtasks.\n\n        Args:\n            filters (dict): Filtering criteria.\n            include_subtasks (bool): Whether to include subtasks in the query.\n            page (int, optional): Page number for pagination.\n            per_page (int, optional): Items per page for pagination.\n\n        Returns:\n            Query or Pagination: A SQLAlchemy query object or paginated results.\n        """\n        query = Task.query.options(\n            db.joinedload(Task.project).joinedload(Project.contributors),\n            db.joinedload(Task.contributor),\n            db.joinedload(Task.children),\n        ).order_by(Task.sort_order)\n\n        if filters:\n            logger.debug(f"Applying filters: {filters}")\n\n            # Apply standard filters\n            if "is_archived" in filters:\n                query = query.filter(Task.is_archived == filters["is_archived"])\n            if "project_id" in filters:\n                query = query.filter(Task.project_id == filters["project_id"])\n            if "task_type" in filters:\n                if isinstance(filters["task_type"], list):\n                    query = query.filter(Task.task_type.in_(filters["task_type"]))\n                else:\n                    query = query.filter(Task.task_type == filters["task_type"])\n            if "completion_status" in filters:\n                completion_map = {"completed": True, "in_progress": False}\n                if filters["completion_status"] in completion_map:\n                    query = query.filter(Task.completed == completion_map[filters["completion_status"]])\n\n            # Optionally exclude subtasks\n            if not include_subtasks:\n                query = query.filter(Task.task_type != "Subtask")\n\n        logger.debug(f"Generated query: {query}")\n\n        # Pagination\n        if page and per_page:\n            return query.paginate(page=page, per_page=per_page, error_out=False)\n        return query\n\n    @staticmethod\n    def debug_parent_child_relationships(project_id=None):\n        """\n        Generates a debug map of parent-child relationships for all tasks.\n\n        Args:\n            project_id (int, optional): Restrict to tasks from a specific project.\n\n        Returns:\n            dict: A dictionary mapping parent IDs to their child task IDs.\n        """\n        query = Task.query\n        if project_id:\n            query = query.filter(Task.project_id == project_id)\n\n        tasks = query.options(\n            db.load_only(Task.id, Task.parent_id)\n        ).all()\n\n        relationship_map = {}\n        for task in tasks:\n            if task.parent_id not in relationship_map:\n                relationship_map[task.parent_id] = []\n            relationship_map[task.parent_id].append(task.id)\n\n        logger.debug(f"Parent-Child Relationship Map: {relationship_map}")\n        return relationship_map\n\n    @staticmethod\n    def validate_parent_child_relationships():\n        """\n        Validates all parent-child relationships in the database to ensure they conform to hierarchy rules.\n\n        Raises:\n            ValueError: If invalid relationships are detected.\n        """\n        tasks = Task.query.options(db.joinedload(Task.parent)).all()\n\n        for task in tasks:\n            if task.parent_id:\n                parent_task = task.parent\n                if not parent_task:\n                    raise ValueError(f"Task {task.id} has an invalid parent ID {task.parent_id}.")\n\n                # Validate hierarchy rules\n                if task.task_type == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError(f"User Story {task.id} must have an Epic as its parent.")\n                if task.task_type == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError(f"Subtask {task.id} must have a User Story as its parent.")\n\n        logger.info("All parent-child relationships are valid.")\n\n    @staticmethod\n    def get_all_task_ids_with_parents():\n        """\n        Returns a flat list of tasks with their parent IDs for debugging.\n\n        Returns:\n            list: A list of tuples (task_id, parent_id).\n        """\n        tasks = Task.query.with_entities(Task.id, Task.parent_id).all()\n        logger.debug(f"Task IDs with Parent IDs: {tasks}")\n        return tasks\n```\n\n\nExplanation of Changes:\n\t1.\tfilter_tasks Enhancements:\n\t•\tAdded include_subtasks parameter to optionally exclude subtasks from the query.\n\t2.\tdebug_parent_child_relationships:\n\t•\tCreates a parent-child relationship map for debugging purposes.\n\t3.\tvalidate_parent_child_relationships:\n\t•\tIterates through all tasks to validate parent-child hierarchy and ensures no invalid relationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.091824', 'updated_at': '2025-01-16T19:22:36.236691'}, {'id': 135, 'name': 'Step 3: Update list.html', 'description': 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already includes everything needed. No required changes.\n\nHere´s the relevant section of list.html:\n\n```\n<tr id="task-{{ task.id }}"\n                class="task-row {% if task.task_type == \'Subtask\' %}subtask-row{% elif task.task_type == \'User Story\' %}user-story-row{% elif task.task_type == \'Epic\' %}epic-row{% endif %}"\n                style="background-color: \n                {% if task.task_type == \'Subtask\' %}\n                    rgba(200, 230, 255, 0.5); /* Light blue for Subtask */\n                {% elif task.task_type == \'User Story\' %}\n                    rgba(255, 255, 200, 0.5); /* Light yellow for User Story */\n                {% elif task.task_type == \'Epic\' %}\n                    rgba(255, 200, 200, 0.5); /* Light red for Epic */\n                {% else %}\n                    rgba(240, 240, 240, 1); /* Default light gray */\n                {% endif %};"\n                data-task-id="{{ task.id }}"\n                data-parent-id="{{ task.parent_id or \'\' }}"\n                data-level="{{ depth }}">\n                <td><input type="checkbox" name="batch_update" value="{{ task.id }}"></td>\n                <td>\n                    {% if tasks|selectattr("parent_id", "equalto", task.id)|list %}\n                    <button class="btn btn-sm toggle-details" data-task-id="{{ task.id }}" aria-label="Toggle details for task {{ task.name }}">\n                        <i class="bi bi-chevron-right"></i>\n                    </button>\n                    {% endif %}\n                </td>\n                <td class="fw-medium fs-6 \n                {% if task.task_type == \'Epic\' %}\n                    epic-cell\n                {% elif task.task_type == \'User Story\' %}\n                    user-story-cell\n                {% elif task.task_type == \'Subtask\' %}\n                    subtask-cell\n                {% endif %}" \n                style="padding-left: {{ depth|default(0) * 20 }}px; position: relative;">\n                <span class="bi fs-6\n                {% if task.task_type == \'Epic\' %}\n                    bi-circle-fill\n                {% elif task.task_type == \'User Story\' %}\n                    bi-circle-half\n                {% elif task.task_type == \'Subtask\' %}\n                    bi-circle\n                {% endif %}">\n                </span>\n                {{ task.name }}\n                <small class="text-muted fw-light">\n                    (Parent-ID: {{ task.parent_id or \'None\' }})\n                </small>\n                <!-- Open Link -->\n                <a href="#" class="task-open-link" data-task-id="{{ task.id }}">\n                    <i class="bi bi-arrows-angle-expand" style="font-size: 0.8rem; color: white;"></i>\n                    Open\n                </a>\n            </td>\n                <td class="fw-light fs-6">\n                    <small class>\n                    LAC-{{ task.id }}\n                    </small>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light text-bg-secondary">\n                        {{ task.project if task.project else "Unknown Project" }}\n                    </span>\n                </td>\n                <td class="fs-6" data-contributor-column>{{ task.assigned_to if task.assigned_to else "Unassigned" }}</td>\n                <td class="fs-6">{{ task.story_points }}</td>\n                <td class="fs-6">\n                    <span class="badge rounded-pill fw-light text-bg-light">\n                        {{ task.task_type }}\n                    </span>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light {% if task.completed %}text-bg-success{% else %}text-bg-warning{% endif %}">\n                        {{ "Completed" if task.completed else "In Progress" }}\n                    </span>\n                </td>\n                <td>\n                    <!-- Delete Icon -->\n                    <button class="btn btn-dark btn-sm delete-task-btn" style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .2rem; --bs-btn-font-size: .75rem;" data-task-id="{{ task.id }}" aria-label="Deletes task {{ task.id }}">\n                        <i class="bi bi-trash"></i>\n                    </button>\n                </td>\n            </tr>\n            {% for child in tasks if child.parent_id == task.id %}\n                {{ render_task(child, tasks, depth + 1) }}\n            {% endfor %}\n            {% endmacro %}\n            \n            <!-- Render top-level tasks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:46:29.349784', 'updated_at': '2025-01-16T19:22:36.238473'}, {'id': 82, 'name': 'Implement Third-Party Authentication', 'description': 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitHub Login involves integrating OAuth 2.0, which both services support. The complexity depends on your app’s existing setup, frameworks, and experience with third-party authentication. Below is a breakdown:\n\nKey Steps for Implementing Google or GitHub Login\n\t1.\tSet Up OAuth Credentials:\n\t•\tRegister your application in the Google Cloud Console or GitHub Developer Settings.\n\t•\tObtain the client ID and client secret.\n\t2.\tInstall Required Libraries:\n\t•\tUse a library for OAuth (e.g., flask-oauthlib, python-social-auth, or authlib).\n\t•\tPopular frameworks like Flask and Django already have robust integrations for OAuth providers.\n\t3.\tBackend Configuration:\n\t•\tImplement an endpoint to handle the OAuth flow (/auth/login/google or /auth/login/github).\n\t•\tConfigure your app to send users to Google or GitHub’s authentication page.\n\t•\tHandle the OAuth callback to exchange the authorization code for an access token.\n\t•\tVerify the token and fetch user information (e.g., email, name).\n\t4.\tLink OAuth to User Registration:\n\t•\tOn successful login, create or retrieve a user in your database.\n\t•\tStore the user’s details like email, OAuth provider ID, and access token.\n\t5.\tFrontend Integration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T12:15:54.291625', 'updated_at': '2025-01-16T19:22:36.239866'}, {'id': 62, 'name': 'Add OAuth integration for Google Login', 'description': 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.241200'}, {'id': 64, 'name': 'Setup project credentials for Google API', 'description': 'Generate client ID and secret from Google API Console for your application.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.242497'}, {'id': 67, 'name': 'Test Google OAuth flow', 'description': 'Verify the OAuth flow using test accounts and check the token exchange.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.243780'}, {'id': 65, 'name': 'Implement backend endpoints for Google OAuth', 'description': 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.244932'}, {'id': 63, 'name': 'Add OAuth integration for GitHub Login', 'description': 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.246358'}, {'id': 68, 'name': 'Register application in GitHub Developer Console', 'description': 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.247746'}, {'id': 69, 'name': 'Handle callback from GitHub', 'description': 'Implement the callback endpoint to process the authorization code from GitHub.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.248912'}, {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}, {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}, {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:30.747962'}, {'id': 108, 'name': '1.1.2 Backend API for Registration', 'description': '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:33.067643'}, {'id': 112, 'name': '1.2.2 Frontend Login Page', 'description': 'Develop a frontend form for user login with email and password inputs.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.683644'}, {'id': 109, 'name': '1.1.3 Create Frontend Registration Page', 'description': 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.684988'}, {'id': 110, 'name': '1.1.4 Unit Tests for Registration', 'description': 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.686902'}, {'id': 101, 'name': '1.2 User Login', 'description': 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:25:53.687936'}, {'id': 111, 'name': '1.2.1 Backend API for Login', 'description': 'Create POST /api/login endpoint to handle user login.\njjsjj', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.689096'}, {'id': 113, 'name': '1.2.3 Session Management', 'description': 'Implement secure session handling using cookies or JWT.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:20.968680'}, {'id': 114, 'name': '1.2.4 Unit Tests for Login', 'description': 'Write tests for successful and failed login attempts.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:22:36.265866'}, {'id': 106, 'name': 'Password Reset', 'description': 'As a user, I want to reset my password securely using email.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.267247'}, {'id': 128, 'name': 'Frontend Password Reset Page', 'description': 'Develop a page for users to enter a new password using a valid token.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.269158'}, {'id': 129, 'name': 'Testing Password Reset', 'description': 'Write tests for email delivery, token validation, and password updates.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.270849'}, {'id': 102, 'name': 'Logout', 'description': 'As a user, I want to log out so that I can end my session securely.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.272605'}, {'id': 117, 'name': 'Tests for Logout', 'description': 'Verify session invalidation and redirection to the login page.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.274575'}, {'id': 116, 'name': 'Frontend Logout Button', 'description': 'Add a logout button to the UI and handle session clearing.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-02-09T12:31:17.939784'}, {'id': 115, 'name': 'Backend API for Logout', 'description': 'Create POST /api/logout endpoint to invalidate user sessions.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.277547'}, {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}, {'id': 45, 'name': 'Display Default Value in Dropdown', 'description': 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.280493'}, {'id': 50, 'name': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 2, 'status': 'In Progress', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-10T07:41:43.569807'}, {'id': 51, 'name': 'Set Default Value', 'description': 'Set the default value in the dropdown based on the retrieved data.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 45, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 1, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.283309'}, {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882'}, {'id': 54, 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 46, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.286248'}, {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.287641'}, {'id': 56, 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.289338'}, {'id': 55, 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.290910'}, {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.292389'}, {'id': 57, 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.294045'}, {'id': 58, 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.295385'}, {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.296814'}, {'id': 59, 'name': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-09T23:48:08.770907'}, {'id': 60, 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 49, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.299971'}, {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-10T07:41:33.252945'}, {'id': 52, 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 41, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-10T07:40:33.847642'}, {'id': 53, 'name': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-09T07:55:00.680183'}, {'id': 42, 'name': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-10T07:41:18.814716'}, {'id': 43, 'name': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:33.908549'}, {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-02-11T08:24:26.494016'}, {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-02-11T08:24:21.069473'}, {'id': 90, 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:13.204884'}, {'id': 88, 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:05.873554'}, {'id': 89, 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:23:58.436495'}, {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-02-11T08:23:51.269557'}, {'id': 93, 'name': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:42.771565'}, {'id': 91, 'name': 'Update database schema for task ownership', 'description': 'Add a column or relationship to assign a single owner per task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:33.670381'}, {'id': 92, 'name': 'Develop backend API for assigning task owner', 'description': 'Create endpoints to assign or update the owner of a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T09:19:44.027744'}, {'id': 87, 'name': 'Create and customize contributor roles', 'description': 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:43.600461', 'updated_at': '2025-02-11T08:23:23.402442'}, {'id': 96, 'name': 'Allow admin users to create and customize contributor roles via frontend', 'description': 'Provide UI functionality for admins to manage contributor roles dynamically.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:23:13.139282'}, {'id': 94, 'name': 'Add database support for contributor roles', 'description': 'Introduce a roles table and link contributors to specific roles for tasks.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:56.181530'}, {'id': 95, 'name': 'Develop backend API for managing contributor roles', 'description': 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:02.276492'}, {'id': 127, 'name': 'Backend API for Password Reset', 'description': 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-02-10T23:59:50.734037'}, {'id': 126, 'name': 'Email Configuration for Password Reset', 'description': 'Configure email service to send password reset links.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.334340'}, {'id': 104, 'name': 'Middleware for Role Enforcement', 'description': 'As a system, I want to enforce role-based access to specific routes.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:23:40.346816'}, {'id': 122, 'name': 'Testing Role Enforcement', 'description': 'Write tests to ensure proper access control based on roles.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.185693'}, {'id': 121, 'name': 'Develop Role Enforcement Middleware', 'description': 'Implement middleware to check user roles for access control.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.187439'}, {'id': 105, 'name': 'Profile Management', 'description': 'As a user, I want to update my profile (username, email, password).', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.339830'}, {'id': 123, 'name': 'Backend API for Profile Management', 'description': 'Create PATCH /api/profile endpoint to update user details.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.678781'}, {'id': 125, 'name': 'Testing Profile Updates', 'description': 'Write tests for profile update functionality.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.680382'}]
2025-02-11 09:24:36,220 DEBUG: Task types: ['all', 'Epic', 'Subtask', 'User Story']
2025-02-11 09:24:36,220 DEBUG: Projects: [<Project Project Alpha (ID: 1)>, <Project Project Beta (ID: 2)>, <Project Project Gamma (ID: 3)>, <Project Project Theta (ID: 4)>, <Project Project Delta (ID: 5)>, <Project PMS - Feature Requests (ID: 7)>, <Project PMS - Backlog (ID: 6)>]
2025-02-11 09:24:36,221 DEBUG: Tasks response: [{'id': 290, 'name': 'issue: error when changing task type and', 'description': 'issue: error when changing task type and parent task before saving', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:00:03.417734', 'updated_at': '2025-02-10T09:15:09.284969'}, {'id': 298, 'name': 'example user story with parent epic 297', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 297, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:41:01.907455', 'updated_at': '2025-02-10T14:59:04.142570'}, {'id': 275, 'name': 'add sprints, cycles', 'description': 'Make naming customizable', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:48:52.680022', 'updated_at': '2025-02-10T08:38:37.622196'}, {'id': 276, 'name': 'add support for priority', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:49:26.189497', 'updated_at': '2025-02-10T08:28:47.447612'}, {'id': 264, 'name': 'close all / open all childtasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:25:20.101418', 'updated_at': '2025-02-10T08:47:14.915970'}, {'id': 285, 'name': 'add text truncation to project names in task list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:45:47.027805', 'updated_at': '2025-02-10T09:45:47.029729'}, {'id': 257, 'name': 'Update Task API Integration', 'description': "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 240, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-02-05T22:55:49.566819', 'updated_at': '2025-02-05T22:18:17.807154'}, {'id': 294, 'name': 'issue: task table filters not working', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:19:21.022598', 'updated_at': '2025-02-10T10:19:21.024676'}, {'id': 267, 'name': 'improvements to toggles and nested tasks', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:29:12.464594', 'updated_at': '2025-02-10T08:47:24.581680'}, {'id': 271, 'name': 'make sure dynamically added rows has the exact same styling and includes every element', 'description': 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:21:07.108431', 'updated_at': '2025-02-10T08:38:47.340105'}, {'id': 283, 'name': 'fix update title', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:58.769700', 'updated_at': '2025-02-10T08:46:47.282087'}, {'id': 273, 'name': 'disable parent task selector in epics', 'description': 'and add text, Epic can´t have parent tasks', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:45:20.740910', 'updated_at': '2025-02-10T08:39:17.639890'}, {'id': 269, 'name': 'fix styling for sweetalert', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'In Progress', 'created_at': '2025-02-08T15:54:56.717846', 'updated_at': '2025-02-10T08:39:32.172437'}, {'id': 286, 'name': 'add support for labels/tags', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:46:23.985620', 'updated_at': '2025-02-10T09:46:23.987564'}, {'id': 299, 'name': 'example sub task with parent user story 298', 'description': 'Test update 1\nTest update 2\nTest update 3', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 298, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:42:38.905700', 'updated_at': '2025-02-10T23:23:08.671464'}, {'id': 266, 'name': 'highlight the nested tasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:28:30.382949', 'updated_at': '2025-02-10T08:47:04.382929'}, {'id': 279, 'name': 'github integration', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:38.238202', 'updated_at': '2025-02-10T08:39:24.168451'}, {'id': 289, 'name': 'issue: parent task is lost when updating task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:56:25.273984', 'updated_at': '2025-02-10T09:12:47.626993'}, {'id': 272, 'name': 'implement a markdown text editor like notion', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:28:18.300231', 'updated_at': '2025-02-10T08:28:39.669255'}, {'id': 278, 'name': 'search feature for tasks list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:03.369833', 'updated_at': '2025-02-10T08:39:04.005957'}, {'id': 281, 'name': 'add high level plan', 'description': 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:27:01.218606', 'updated_at': '2025-02-10T08:38:54.754760'}, {'id': 287, 'name': 'when moving a parent item to another project make sure the subtasks are moved as well', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:48:31.986870', 'updated_at': '2025-02-10T09:48:31.988859'}, {'id': 293, 'name': 'click on title should copy the task title and id to clipboard', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:16:33.508209', 'updated_at': '2025-02-10T10:16:33.510414'}, {'id': 277, 'name': 'custom task workflow statuses', 'description': 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- Custom status\n-- Custom status\n- In Progress\n-- Custom status\n-- Custom status\n-- Custom status\n- Completed\n-- Custom status\n-- Custom status\n\n2. How can we track a task through different stages and save the sequence of events or stages the task has gone through?\nI´m thinking it could be good for mapping out processes, identifying bottlenecks and provide valuable insights while improving and streamlining workflows.\n- Stages\n- Contacts taken\n- Respons time \n- Time to action after responses\n- Dependencies\n\nNeed to be able to record every action related to this action.\nCommunication integrations\n- Slack\n- Email\n- Text messages\n- Phonecalls\n- Calendar events, meetings\n- Zoom, Google meet, Teams etc..\n\n\n2. Set custom statuses per project (can use tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:16:03.352588', 'updated_at': '2025-02-10T08:38:28.123328'}, {'id': 274, 'name': 'add support for goals, initiatives, okr´s', 'description': 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:46:27.204912', 'updated_at': '2025-02-10T08:28:17.663922'}, {'id': 280, 'name': 'logging (task and project history)', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:37:44.435112', 'updated_at': '2025-02-10T08:28:28.947805'}, {'id': 282, 'name': 'implement same task list in projects but filtered on project', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:17.786154', 'updated_at': '2025-02-10T09:41:17.787861'}, {'id': 296, 'name': 'issue: contributor is lost after updating task', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:26:43.881947', 'updated_at': '2025-02-10T10:26:43.884004'}, {'id': 288, 'name': 'when trying to move subtask to another project, make sure a warning is displayed', 'description': 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be lost"\nOR\n\nIs it possible, and is it desireable to keep parent child relationships across projects?\nSo that a parent can be in one project but the child tasks can be in different projects?\n\nLets say \nParent epic is \n"Internationalisation"\nChild user stories are\n- Timezones\n- Language\n- Currency\n- Day, Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:54:36.297869', 'updated_at': '2025-02-10T08:54:51.840686'}, {'id': 284, 'name': 'add type "issue/bug"', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:42:27.719439', 'updated_at': '2025-02-10T09:42:27.720908'}, {'id': 295, 'name': 'issue: drag and drop errors', 'description': '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:22:54.461413', 'updated_at': '2025-02-10T10:22:54.462542'}, {'id': 297, 'name': 'example parent epic', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:39:51.620509', 'updated_at': '2025-02-10T10:39:51.622712'}, {'id': 292, 'name': 'issue: assigning contributor does not work', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:11:12.273779', 'updated_at': '2025-02-10T10:11:12.274809'}, {'id': 265, 'name': 'smooth transition for toggles', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:27:23.422612', 'updated_at': '2025-02-10T08:46:55.831743'}, {'id': 270, 'name': 'the newest task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:07:34.368035', 'updated_at': '2025-02-10T01:07:34.372478'}, {'id': 291, 'name': 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:09:52.988609', 'updated_at': '2025-02-10T10:09:52.997455'}, {'id': 136, 'name': 'Page scroll should stay in position when reloading', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-16T18:21:50.187247', 'updated_at': '2025-01-16T19:22:36.214901'}, {'id': 130, 'name': 'Implement the Map of Task Relationships solution for drag-and-drop', 'description': 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.093022', 'updated_at': '2025-01-16T19:22:36.216705'}, {'id': 133, 'name': 'Step 4: Enhance Logging in models.py', 'description': 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nupdating the Task model in the following ways:\n\n1.\tLog Changes to parent_id:\n\t•\tLog changes to parent_id during updates, including old and new values.\n\t2.\tValidate Hierarchy with Logging:\n\t•\tLog detailed messages when validating hierarchy changes, especially for circular dependency checks.\n\nHere’s how the models.py can be updated:\n```\nfrom datetime import datetime, timezone\nfrom sqlalchemy import func, cast, CheckConstraint\nfrom sqlalchemy.orm import validates\nfrom app.extensions.db import db\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\nclass Task(db.Model):\n    __tablename__ = "task"\n    \n    # Other columns...\n\n    parent_id = db.Column(\n        db.Integer, db.ForeignKey("task.id"), index=True, nullable=True\n    )\n\n    # Relationships\n    parent = db.relationship(\n        "Task", remote_side=[id], back_populates="children", lazy="select"\n    )\n    children = db.relationship(\n        "Task", back_populates="parent", lazy="select"\n    )\n\n    \n\n\n    @staticmethod\n    def _validate_no_circular_references(new_parent_id):\n        """\n        Validates that there are no circular references in the task hierarchy.\n\n        Args:\n            new_parent_id (int): The new parent ID to validate.\n\n        Raises:\n            ValueError: If a circular reference is detected.\n        """\n        visited = set()\n        current_parent_id = new_parent_id\n\n        logger.info(f"Validating circular references for parent ID: {new_parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error(\n                    f"Circular reference detected: Parent ID {current_parent_id} already visited."\n                )\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            # Fetch the next parent_id in the hierarchy\n            parent = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not parent:\n                break  # Exit if no parent is found\n            current_parent_id = parent.parent_id\n\n        logger.info("No circular reference detected.")\n\n    @validates(\'parent_id\', \'task_type\')\n    def validate_task_changes(self, key, value):\n        """\n        Validates changes to \'parent_id\' and \'task_type\'.\n        Ensures hierarchy validity and checks for circular references.\n        """\n        logger.debug(f"Validating {key} change for Task {self.id}: {value}")\n\n        if key == \'parent_id\':\n            # Log changes to parent_id\n            if self.id and value != self.parent_id:\n                logger.info(f"Task {self.id}: Updating \'parent_id\' from {self.parent_id} to {value}")\n\n            # Prevent a task from being its own parent\n            if value and value == self.id:\n                logger.error("A task cannot be its own parent.")\n                raise ValueError("A task cannot be its own parent.")\n\n            # Check for circular references\n            if value:\n                Task.check_circular_reference(self.id, value)\n\n        elif key == \'task_type\':\n            # Log changes to task_type\n            if self.id and value != self.task_type:\n                logger.info(f"Task {self.id}: Updating \'task_type\' from {self.task_type} to {value}")\n\n        # Check hierarchy rules without triggering further validation\n        if key in [\'parent_id\', \'task_type\']:\n            self._validate_hierarchy_change(key, value)\n\n        logger.info(f"Validation passed for {key}: {value}")\n        return value\n\n    def _validate_hierarchy_change(self, key, value):\n        """\n        Validates hierarchy rules for the task based on `task_type` and `parent_id`.\n        """\n        if key == \'parent_id\' and value:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=value).first()\n            if not parent_task:\n                raise ValueError("Parent task does not exist.")\n\n            logger.debug(f"Validating hierarchy: Task {self.id}, Parent Type: {parent_task.task_type}")\n            if self.task_type == "User Story" and parent_task.task_type != "Epic":\n                raise ValueError("User Stories must have an Epic as a parent.")\n            if self.task_type == "Subtask" and parent_task.task_type != "User Story":\n                raise ValueError("Subtasks must have a User Story as a parent.")\n\n        elif key == \'task_type\' and self.parent_id:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=self.parent_id).first()\n            if parent_task:\n                logger.debug(f"Validating hierarchy: Task Type: {value}, Parent Type: {parent_task.task_type}")\n                if value == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError("User Stories must have an Epic as a parent.")\n                if value == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError("Subtasks must have a User Story as a parent.")\n\n        logger.info(f"Hierarchy validation passed for Task {self.id if self.id else \'New Task\'}.")\n\n    @staticmethod\n    def check_circular_reference(task_id, parent_id):\n        """\n        Iteratively checks for circular references in the task hierarchy.\n        Prevents stack overflow on deep hierarchies.\n        """\n        visited = set()\n        current_parent_id = parent_id\n\n        logger.info(f"Checking circular reference for Task {task_id} with Parent ID: {parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error("Circular reference detected!")\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            if current_parent_id == task_id:\n                logger.error("A task cannot be its own ancestor.")\n                raise ValueError("A task cannot be its own ancestor.")\n\n            # Fetch the next parent_id in the hierarchy\n            task = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not task:\n                break\n            current_parent_id = task.parent_id\n\n        logger.info("Circular reference check passed.")\n```\nKey Enhancements:\n\t1.\tlog_and_validate_parent_id_change:\n\t•\tLogs the old and new parent_id whenever it changes.\n\t•\tEnsures no circular references are introduced.\n\t2.\t_validate_no_circular_references:\n\t•\tValidates the parent_id field to prevent circular dependencies.\n\t•\tLogs progress and raises detailed errors if violations occur.\n\t3.\tlog_and_validate_task_type_change:\n\t•\tLogs changes to task_type with the old and new values.\n\t•\tRevalidates hierarchy rules when task_type changes.\n\t4.\tDetailed Logging for Circular Reference Validation:\n\t•\t_validate_no_circular_references and check_circular_reference methods log every step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:44:08.340041', 'updated_at': '2025-01-16T19:22:36.219710'}, {'id': 132, 'name': 'Step 1: Update tasks_table_interactions.js', 'description': '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the map for efficient parent-child relationship lookups instead of DOM traversal.\n\n```\nexport const TaskManager = {\n    init: function (csrfToken) {\n        this.csrfToken = csrfToken;\n        this.initTaskParentMap(); // Initialize the map\n        this.initDragAndDrop(); // Initialize drag-and-drop functionality\n    },\n\n    // Initialize a global map for task relationships\n    taskParentMap: new Map(),\n\n    // Build the taskParentMap from the DOM\n    initTaskParentMap: function () {\n        console.log("Initializing Task Parent Map...");\n        const rows = document.querySelectorAll("tr[data-task-id]");\n\n        rows.forEach((row) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = parseInt(row.dataset.parentId, 10) || null;\n            this.taskParentMap.set(taskId, parentId);\n        });\n\n        console.log("Task Parent Map initialized:", Array.from(this.taskParentMap.entries()));\n    },\n\n    // Update the map dynamically after drag-and-drop\n    updateTaskParentMap: function (taskId, parentId) {\n        console.log(`Updating Task Parent Map: Task ${taskId} -> Parent ${parentId}`);\n        this.taskParentMap.set(taskId, parentId);\n    },\n\n    initDragAndDrop: function () {\n        if (window.isDragAndDropInitialized) {\n            console.log("Drag-and-drop is already initialized.");\n            return;\n        }\n\n        console.log("Initializing drag-and-drop within TaskManager...");\n\n        const tableBody = document.querySelector("tbody");\n        if (!tableBody) {\n            console.warn("Task table body not found for drag-and-drop initialization");\n            return;\n        }\n\n        // Initialize Sortable.js for drag-and-drop functionality\n        Sortable.create(tableBody, {\n            handle: ".task-row", // Only draggable via `.task-row` elements\n            animation: 150, // Smooth animation\n            filter: ".task-open-link", // Prevent dragging on task links\n            preventOnFilter: true, // Prevent drag if filtered element is clicked\n            onEnd: async (event) => {\n                try {\n                    console.log("Drag-and-drop operation started...");\n                    const rows = Array.from(event.from.querySelectorAll(".task-row"));\n                    const reorderedTasks = [];\n\n                    rows.forEach((row, index) => {\n                        const taskId = parseInt(row.dataset.taskId, 10);\n                        let parentId = null;\n\n                        // Get the parent ID from the map or fallback to the dataset\n                        if (row.classList.contains("subtask-row")) {\n                            const parentRow = row.previousElementSibling;\n                            parentId = parentRow\n                                ? parseInt(parentRow.dataset.taskId, 10)\n                                : this.taskParentMap.get(taskId) || null;\n                        }\n\n                        // Update the taskParentMap dynamically\n                        this.updateTaskParentMap(taskId, parentId);\n\n                        reorderedTasks.push({\n                            id: taskId,\n                            sort_order: index + 1,\n                            parent_id: parentId,\n                        });\n                    });\n\n                    console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n                    console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n                    // Send the payload to the backend\n                    const response = await fetch("/tasks/reorder_subtasks", {\n                        method: "POST",\n                        headers: {\n                            "Content-Type": "application/json",\n                            "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n                        },\n                        body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n                    });\n\n                    if (!response.ok) {\n                        const errorData = await response.json();\n                        console.error("Error reordering tasks:", errorData);\n                        alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n                        return;\n                    }\n\n                    const data = await response.json();\n                    console.log("Task reordering successful:", data);\n\n                } catch (error) {\n                    console.error("Error during drag-and-drop operation:", error);\n                    alert("An unexpected error occurred while reordering tasks.");\n                }\n            },\n        });\n\n        window.isDragAndDropInitialized = true;\n        console.log("Drag-and-drop initialized successfully.");\n    },\n};\n```\n\nKey Updates:\n\t1.\tPrecomputed Map (taskParentMap):\n\t•\tThe initTaskParentMap function initializes the map by iterating over DOM elements and mapping each task’s ID to its parent ID.\n\t•\tThe updateTaskParentMap dynamically updates the map when tasks are reordered.\n\t2.\tEfficient Parent Lookup:\n\t•\tThe parentId is derived from the precomputed map rather than DOM traversal.\n\t3.\tBackend Payload:\n\t•\tA structured payload (reorderedTasks) is sent to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:44:08.338301', 'updated_at': '2025-02-06T21:59:17.417466'}, {'id': 134, 'name': 'Step 2: Update the Backend in routes.py', 'description': 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\nPlan for step 2:\n\t1.\tVerify the payload structure:\n\t•\tEnsure that the payload includes all necessary fields (id, sort_order, parent_id) for each task.\n\t•\tValidate that the parent-child relationships in the precomputed map (taskParentMap) are reflected correctly in the payload.\n\t2.\tSubmit the payload to the backend:\n\t•\tEnhance the fetch request in the onEnd function of initDragAndDrop to log detailed submission data.\n\t•\tConfirm the payload integrity in the browser console before submission.\n\t3.\tUpdate backend logging:\n\t•\tAdd logging to /reorder_subtasks in routes.py to confirm receipt of the correct payload and process parent-child updates.\n\t•\tLog before and after database updates for better debugging.\n\n-----\nUpdated tasks_table_interactions.js\n\nReplace this section:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    let parentId = null;\n```\nWith:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    const parentId = this.taskParentMap.get(taskId) || null;\n```\nThe this.taskParentMap provides a precomputed and dynamic mapping of taskId to parentId. By using this map, we avoid relying on DOM traversal logic (row.closest or row.previousElementSibling) during drag-and-drop operations, which can sometimes be unreliable or cumbersome.\n\nFull Revised onEnd section:\n```\nonEnd: async (event) => {\n    try {\n        console.log("Drag-and-drop operation started...");\n        const rows = Array.from(event.from.querySelectorAll(".task-row"));\n        const reorderedTasks = [];\n\n        rows.forEach((row, index) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = this.taskParentMap.get(taskId) || null;\n\n            // Update the taskParentMap dynamically\n            this.updateTaskParentMap(taskId, parentId);\n\n            reorderedTasks.push({\n                id: taskId,\n                sort_order: index + 1,\n                parent_id: parentId,\n            });\n        });\n\n        console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n        console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n        // Send the payload to the backend\n        const response = await fetch("/tasks/reorder_subtasks", {\n            method: "POST",\n            headers: {\n                "Content-Type": "application/json",\n                "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n            },\n            body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            console.error("Error reordering tasks:", errorData);\n            alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n            return;\n        }\n\n        const data = await response.json();\n        console.log("Task reordering successful:", data);\n\n    } catch (error) {\n        console.error("Error during drag-and-drop operation:", error);\n        alert("An unexpected error occurred while reordering tasks.");\n    }\n}\n```\n---------------------------------\nEnsure updates include:\n\t•\tBetter Logging: Adding logs for key events such as database changes and validation results.\n\t•\tInput Validation: Ensure all required fields (id, sort_order, parent_id) exist in the payload.\n\t•\tPost-Commit Validation: Confirm database updates after the commit.\n\t•\tImproved Error Handling: Include specific error messages and consistent rollback mechanisms.\n\nBelow is the revised reorder_subtasks route with descriptive comments for each section:\n```\n@bp.route("/reorder_subtasks", methods=["POST"])\ndef reorder_subtasks():\n    """\n    Reorder subtasks globally or reassign them to a different parent.\n\n    Steps:\n    - Parse and validate input from the frontend.\n    - Update parent-child relationships and sort order in the database.\n    - Commit changes and return a success response.\n    - Handle errors gracefully and provide detailed logs for debugging.\n    """\n    logger.info("Entering reorder_subtasks route...")\n    logger.info(f"Received payload for reordering tasks: {request.json}")\n\n    try:\n        # Step 1: Parse input\n        parent_id = request.json.get("parent_id", None)  # Optional parent ID for the tasks being reordered\n        ordered_tasks = request.json.get("ordered_tasks", [])\n\n        logger.debug(f"Parsed parent_id: {parent_id}")\n        logger.debug(f"Parsed ordered_tasks: {ordered_tasks}")\n\n        # Step 2: Validate input\n        if not isinstance(ordered_tasks, list) or not all(\n            isinstance(task, dict) and "id" in task and "sort_order" in task and "parent_id" in task\n            for task in ordered_tasks\n        ):\n            logger.error(f"Invalid input received for ordered_tasks: {ordered_tasks}")\n            return jsonify({\n                "error": "Invalid input format for \'ordered_tasks\'. Each task must include \'id\', \'sort_order\', and \'parent_id\'."\n            }), 400\n\n        # Step 3: Validate parent task (if applicable)\n        if parent_id is not None:\n            parent_task = Task.query.get(parent_id)\n            if not parent_task:\n                logger.error(f"Parent task with ID {parent_id} not found.")\n                return jsonify({"error": f"Parent ID {parent_id} is invalid or does not exist."}), 400\n\n        logger.info("Input validation passed. Proceeding with task updates...")\n\n        # Step 4: Process updates for each subtask\n        updated_subtasks = []  # Keep track of updated subtasks for post-commit validation\n\n        for task_data in ordered_tasks:\n            subtask_id = task_data["id"]\n            sort_order = task_data["sort_order"]\n            new_parent_id = task_data["parent_id"]\n\n            # Fetch the subtask from the database\n            subtask = Task.query.get(subtask_id)\n            if not subtask:\n                logger.warning(f"Subtask ID {subtask_id} not found. Skipping...")\n                continue\n\n            # Log and update parent_id if it changes\n            if new_parent_id is not None and new_parent_id != subtask.parent_id:\n                logger.info(f"Reassigning subtask {subtask.id} to new parent {new_parent_id}")\n                subtask.parent_id = new_parent_id\n\n            # Update sort order\n            subtask.sort_order = sort_order\n            logger.debug(f"Updated subtask {subtask.id}: parent_id={subtask.parent_id}, sort_order={subtask.sort_order}")\n\n            # Add to the list of updated subtasks for validation\n            updated_subtasks.append(subtask)\n\n        # Step 5: Commit changes to the database\n        try:\n            db.session.commit()\n            logger.info(f"Subtasks reordered successfully: {[task[\'id\'] for task in ordered_tasks]}")\n        except Exception as e:\n            logger.error(f"Error committing changes to the database: {str(e)}")\n            db.session.rollback()\n            return jsonify({"error": "Failed to save changes to the database. Please try again."}), 500\n\n        # Step 6: Post-commit validation\n        for subtask in updated_subtasks:\n            logger.debug(f"Post-commit parent_id for task {subtask.id}: {subtask.parent_id}")\n            logger.debug(f"Post-commit sort_order for task {subtask.id}: {subtask.sort_order}")\n\n        # Step 7: Return success response\n        return jsonify({\n            "success": True,\n            "message": "Subtasks reordered successfully.",\n            "updated_subtasks": [subtask.id for subtask in updated_subtasks]\n        }), 200\n\n    except Exception as e:\n        # Step 8: Handle unexpected errors\n        logger.error(f"Error while reordering subtasks: {str(e)}", exc_info=True)\n        db.session.rollback()\n        return jsonify({"error": "An unexpected error occurred while reordering subtasks."}), 500\n```\nKey Changes and Descriptive Comments\n\t1.\tInput Parsing:\n\t•\tExtracts parent_id and ordered_tasks from the request payload.\n\t•\tLogs the parsed values for debugging.\n\t2.\tInput Validation:\n\t•\tEnsures ordered_tasks is a list of dictionaries with the required keys.\n\t•\tValidates parent_id if provided, ensuring the parent task exists in the database.\n\t3.\tUpdate Processing:\n\t•\tIterates through ordered_tasks, updating each task’s parent_id and sort_order.\n\t•\tLogs changes for each task.\n\t4.\tDatabase Commit:\n\t•\tCommits all updates in a single transaction.\n\t•\tLogs success or rolls back changes in case of an error.\n\t5.\tPost-Commit Validation:\n\t•\tVerifies that the parent_id and sort_order changes were successfully saved to the database.\n\t6.\tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:46:29.348853', 'updated_at': '2025-02-06T21:59:21.617065'}, {'id': 131, 'name': 'Step 5: Update utils.py', 'description': 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nChanges to Make:\n\t1.\tEnhance Task Filtering:\n\t•\tEnsure the filters handle parent-child relationships explicitly.\n\t•\tAdd options to include or exclude subtasks in queries.\n\t2.\tUtility Function for Debugging Parent-Child Relationships:\n\t•\tProvide a function to generate a map or list of parent-child relationships for debugging purposes.\n\t3.\tValidation Functions:\n\t•\tAdd a utility function to validate parent-child relationships and ensure no circular dependencies.\n\nUpdated utils.py Code:\n```\nimport logging\nfrom sqlalchemy import func\nfrom sqlalchemy.orm import joinedload\nfrom app.extensions.db import db\nfrom app.tasks.models import Task\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\n\nclass TaskService:\n    @staticmethod\n    def filter_tasks(filters=None, include_subtasks=True, page=None, per_page=None):\n        """\n        Dynamically filters tasks with an option to include or exclude subtasks.\n\n        Args:\n            filters (dict): Filtering criteria.\n            include_subtasks (bool): Whether to include subtasks in the query.\n            page (int, optional): Page number for pagination.\n            per_page (int, optional): Items per page for pagination.\n\n        Returns:\n            Query or Pagination: A SQLAlchemy query object or paginated results.\n        """\n        query = Task.query.options(\n            db.joinedload(Task.project).joinedload(Project.contributors),\n            db.joinedload(Task.contributor),\n            db.joinedload(Task.children),\n        ).order_by(Task.sort_order)\n\n        if filters:\n            logger.debug(f"Applying filters: {filters}")\n\n            # Apply standard filters\n            if "is_archived" in filters:\n                query = query.filter(Task.is_archived == filters["is_archived"])\n            if "project_id" in filters:\n                query = query.filter(Task.project_id == filters["project_id"])\n            if "task_type" in filters:\n                if isinstance(filters["task_type"], list):\n                    query = query.filter(Task.task_type.in_(filters["task_type"]))\n                else:\n                    query = query.filter(Task.task_type == filters["task_type"])\n            if "completion_status" in filters:\n                completion_map = {"completed": True, "in_progress": False}\n                if filters["completion_status"] in completion_map:\n                    query = query.filter(Task.completed == completion_map[filters["completion_status"]])\n\n            # Optionally exclude subtasks\n            if not include_subtasks:\n                query = query.filter(Task.task_type != "Subtask")\n\n        logger.debug(f"Generated query: {query}")\n\n        # Pagination\n        if page and per_page:\n            return query.paginate(page=page, per_page=per_page, error_out=False)\n        return query\n\n    @staticmethod\n    def debug_parent_child_relationships(project_id=None):\n        """\n        Generates a debug map of parent-child relationships for all tasks.\n\n        Args:\n            project_id (int, optional): Restrict to tasks from a specific project.\n\n        Returns:\n            dict: A dictionary mapping parent IDs to their child task IDs.\n        """\n        query = Task.query\n        if project_id:\n            query = query.filter(Task.project_id == project_id)\n\n        tasks = query.options(\n            db.load_only(Task.id, Task.parent_id)\n        ).all()\n\n        relationship_map = {}\n        for task in tasks:\n            if task.parent_id not in relationship_map:\n                relationship_map[task.parent_id] = []\n            relationship_map[task.parent_id].append(task.id)\n\n        logger.debug(f"Parent-Child Relationship Map: {relationship_map}")\n        return relationship_map\n\n    @staticmethod\n    def validate_parent_child_relationships():\n        """\n        Validates all parent-child relationships in the database to ensure they conform to hierarchy rules.\n\n        Raises:\n            ValueError: If invalid relationships are detected.\n        """\n        tasks = Task.query.options(db.joinedload(Task.parent)).all()\n\n        for task in tasks:\n            if task.parent_id:\n                parent_task = task.parent\n                if not parent_task:\n                    raise ValueError(f"Task {task.id} has an invalid parent ID {task.parent_id}.")\n\n                # Validate hierarchy rules\n                if task.task_type == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError(f"User Story {task.id} must have an Epic as its parent.")\n                if task.task_type == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError(f"Subtask {task.id} must have a User Story as its parent.")\n\n        logger.info("All parent-child relationships are valid.")\n\n    @staticmethod\n    def get_all_task_ids_with_parents():\n        """\n        Returns a flat list of tasks with their parent IDs for debugging.\n\n        Returns:\n            list: A list of tuples (task_id, parent_id).\n        """\n        tasks = Task.query.with_entities(Task.id, Task.parent_id).all()\n        logger.debug(f"Task IDs with Parent IDs: {tasks}")\n        return tasks\n```\n\n\nExplanation of Changes:\n\t1.\tfilter_tasks Enhancements:\n\t•\tAdded include_subtasks parameter to optionally exclude subtasks from the query.\n\t2.\tdebug_parent_child_relationships:\n\t•\tCreates a parent-child relationship map for debugging purposes.\n\t3.\tvalidate_parent_child_relationships:\n\t•\tIterates through all tasks to validate parent-child hierarchy and ensures no invalid relationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.091824', 'updated_at': '2025-01-16T19:22:36.236691'}, {'id': 135, 'name': 'Step 3: Update list.html', 'description': 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already includes everything needed. No required changes.\n\nHere´s the relevant section of list.html:\n\n```\n<tr id="task-{{ task.id }}"\n                class="task-row {% if task.task_type == \'Subtask\' %}subtask-row{% elif task.task_type == \'User Story\' %}user-story-row{% elif task.task_type == \'Epic\' %}epic-row{% endif %}"\n                style="background-color: \n                {% if task.task_type == \'Subtask\' %}\n                    rgba(200, 230, 255, 0.5); /* Light blue for Subtask */\n                {% elif task.task_type == \'User Story\' %}\n                    rgba(255, 255, 200, 0.5); /* Light yellow for User Story */\n                {% elif task.task_type == \'Epic\' %}\n                    rgba(255, 200, 200, 0.5); /* Light red for Epic */\n                {% else %}\n                    rgba(240, 240, 240, 1); /* Default light gray */\n                {% endif %};"\n                data-task-id="{{ task.id }}"\n                data-parent-id="{{ task.parent_id or \'\' }}"\n                data-level="{{ depth }}">\n                <td><input type="checkbox" name="batch_update" value="{{ task.id }}"></td>\n                <td>\n                    {% if tasks|selectattr("parent_id", "equalto", task.id)|list %}\n                    <button class="btn btn-sm toggle-details" data-task-id="{{ task.id }}" aria-label="Toggle details for task {{ task.name }}">\n                        <i class="bi bi-chevron-right"></i>\n                    </button>\n                    {% endif %}\n                </td>\n                <td class="fw-medium fs-6 \n                {% if task.task_type == \'Epic\' %}\n                    epic-cell\n                {% elif task.task_type == \'User Story\' %}\n                    user-story-cell\n                {% elif task.task_type == \'Subtask\' %}\n                    subtask-cell\n                {% endif %}" \n                style="padding-left: {{ depth|default(0) * 20 }}px; position: relative;">\n                <span class="bi fs-6\n                {% if task.task_type == \'Epic\' %}\n                    bi-circle-fill\n                {% elif task.task_type == \'User Story\' %}\n                    bi-circle-half\n                {% elif task.task_type == \'Subtask\' %}\n                    bi-circle\n                {% endif %}">\n                </span>\n                {{ task.name }}\n                <small class="text-muted fw-light">\n                    (Parent-ID: {{ task.parent_id or \'None\' }})\n                </small>\n                <!-- Open Link -->\n                <a href="#" class="task-open-link" data-task-id="{{ task.id }}">\n                    <i class="bi bi-arrows-angle-expand" style="font-size: 0.8rem; color: white;"></i>\n                    Open\n                </a>\n            </td>\n                <td class="fw-light fs-6">\n                    <small class>\n                    LAC-{{ task.id }}\n                    </small>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light text-bg-secondary">\n                        {{ task.project if task.project else "Unknown Project" }}\n                    </span>\n                </td>\n                <td class="fs-6" data-contributor-column>{{ task.assigned_to if task.assigned_to else "Unassigned" }}</td>\n                <td class="fs-6">{{ task.story_points }}</td>\n                <td class="fs-6">\n                    <span class="badge rounded-pill fw-light text-bg-light">\n                        {{ task.task_type }}\n                    </span>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light {% if task.completed %}text-bg-success{% else %}text-bg-warning{% endif %}">\n                        {{ "Completed" if task.completed else "In Progress" }}\n                    </span>\n                </td>\n                <td>\n                    <!-- Delete Icon -->\n                    <button class="btn btn-dark btn-sm delete-task-btn" style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .2rem; --bs-btn-font-size: .75rem;" data-task-id="{{ task.id }}" aria-label="Deletes task {{ task.id }}">\n                        <i class="bi bi-trash"></i>\n                    </button>\n                </td>\n            </tr>\n            {% for child in tasks if child.parent_id == task.id %}\n                {{ render_task(child, tasks, depth + 1) }}\n            {% endfor %}\n            {% endmacro %}\n            \n            <!-- Render top-level tasks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:46:29.349784', 'updated_at': '2025-01-16T19:22:36.238473'}, {'id': 82, 'name': 'Implement Third-Party Authentication', 'description': 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitHub Login involves integrating OAuth 2.0, which both services support. The complexity depends on your app’s existing setup, frameworks, and experience with third-party authentication. Below is a breakdown:\n\nKey Steps for Implementing Google or GitHub Login\n\t1.\tSet Up OAuth Credentials:\n\t•\tRegister your application in the Google Cloud Console or GitHub Developer Settings.\n\t•\tObtain the client ID and client secret.\n\t2.\tInstall Required Libraries:\n\t•\tUse a library for OAuth (e.g., flask-oauthlib, python-social-auth, or authlib).\n\t•\tPopular frameworks like Flask and Django already have robust integrations for OAuth providers.\n\t3.\tBackend Configuration:\n\t•\tImplement an endpoint to handle the OAuth flow (/auth/login/google or /auth/login/github).\n\t•\tConfigure your app to send users to Google or GitHub’s authentication page.\n\t•\tHandle the OAuth callback to exchange the authorization code for an access token.\n\t•\tVerify the token and fetch user information (e.g., email, name).\n\t4.\tLink OAuth to User Registration:\n\t•\tOn successful login, create or retrieve a user in your database.\n\t•\tStore the user’s details like email, OAuth provider ID, and access token.\n\t5.\tFrontend Integration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T12:15:54.291625', 'updated_at': '2025-01-16T19:22:36.239866'}, {'id': 62, 'name': 'Add OAuth integration for Google Login', 'description': 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.241200'}, {'id': 64, 'name': 'Setup project credentials for Google API', 'description': 'Generate client ID and secret from Google API Console for your application.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.242497'}, {'id': 67, 'name': 'Test Google OAuth flow', 'description': 'Verify the OAuth flow using test accounts and check the token exchange.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.243780'}, {'id': 65, 'name': 'Implement backend endpoints for Google OAuth', 'description': 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.244932'}, {'id': 63, 'name': 'Add OAuth integration for GitHub Login', 'description': 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.246358'}, {'id': 68, 'name': 'Register application in GitHub Developer Console', 'description': 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.247746'}, {'id': 69, 'name': 'Handle callback from GitHub', 'description': 'Implement the callback endpoint to process the authorization code from GitHub.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.248912'}, {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}, {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}, {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:30.747962'}, {'id': 108, 'name': '1.1.2 Backend API for Registration', 'description': '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:33.067643'}, {'id': 112, 'name': '1.2.2 Frontend Login Page', 'description': 'Develop a frontend form for user login with email and password inputs.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.683644'}, {'id': 109, 'name': '1.1.3 Create Frontend Registration Page', 'description': 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.684988'}, {'id': 110, 'name': '1.1.4 Unit Tests for Registration', 'description': 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.686902'}, {'id': 101, 'name': '1.2 User Login', 'description': 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:25:53.687936'}, {'id': 111, 'name': '1.2.1 Backend API for Login', 'description': 'Create POST /api/login endpoint to handle user login.\njjsjj', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.689096'}, {'id': 113, 'name': '1.2.3 Session Management', 'description': 'Implement secure session handling using cookies or JWT.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:20.968680'}, {'id': 114, 'name': '1.2.4 Unit Tests for Login', 'description': 'Write tests for successful and failed login attempts.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:22:36.265866'}, {'id': 106, 'name': 'Password Reset', 'description': 'As a user, I want to reset my password securely using email.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.267247'}, {'id': 128, 'name': 'Frontend Password Reset Page', 'description': 'Develop a page for users to enter a new password using a valid token.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.269158'}, {'id': 129, 'name': 'Testing Password Reset', 'description': 'Write tests for email delivery, token validation, and password updates.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.270849'}, {'id': 102, 'name': 'Logout', 'description': 'As a user, I want to log out so that I can end my session securely.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.272605'}, {'id': 117, 'name': 'Tests for Logout', 'description': 'Verify session invalidation and redirection to the login page.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.274575'}, {'id': 116, 'name': 'Frontend Logout Button', 'description': 'Add a logout button to the UI and handle session clearing.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-02-09T12:31:17.939784'}, {'id': 115, 'name': 'Backend API for Logout', 'description': 'Create POST /api/logout endpoint to invalidate user sessions.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.277547'}, {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}, {'id': 45, 'name': 'Display Default Value in Dropdown', 'description': 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.280493'}, {'id': 50, 'name': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 2, 'status': 'In Progress', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-10T07:41:43.569807'}, {'id': 51, 'name': 'Set Default Value', 'description': 'Set the default value in the dropdown based on the retrieved data.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 45, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 1, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.283309'}, {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882'}, {'id': 54, 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 46, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.286248'}, {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.287641'}, {'id': 56, 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.289338'}, {'id': 55, 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.290910'}, {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.292389'}, {'id': 57, 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.294045'}, {'id': 58, 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.295385'}, {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.296814'}, {'id': 59, 'name': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-09T23:48:08.770907'}, {'id': 60, 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 49, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.299971'}, {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-10T07:41:33.252945'}, {'id': 52, 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 41, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-10T07:40:33.847642'}, {'id': 53, 'name': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-09T07:55:00.680183'}, {'id': 42, 'name': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-10T07:41:18.814716'}, {'id': 43, 'name': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:33.908549'}, {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-02-11T08:24:26.494016'}, {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-02-11T08:24:21.069473'}, {'id': 90, 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:13.204884'}, {'id': 88, 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:05.873554'}, {'id': 89, 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:23:58.436495'}, {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-02-11T08:23:51.269557'}, {'id': 93, 'name': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:42.771565'}, {'id': 91, 'name': 'Update database schema for task ownership', 'description': 'Add a column or relationship to assign a single owner per task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:33.670381'}, {'id': 92, 'name': 'Develop backend API for assigning task owner', 'description': 'Create endpoints to assign or update the owner of a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T09:19:44.027744'}, {'id': 87, 'name': 'Create and customize contributor roles', 'description': 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:43.600461', 'updated_at': '2025-02-11T08:23:23.402442'}, {'id': 96, 'name': 'Allow admin users to create and customize contributor roles via frontend', 'description': 'Provide UI functionality for admins to manage contributor roles dynamically.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:23:13.139282'}, {'id': 94, 'name': 'Add database support for contributor roles', 'description': 'Introduce a roles table and link contributors to specific roles for tasks.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:56.181530'}, {'id': 95, 'name': 'Develop backend API for managing contributor roles', 'description': 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:02.276492'}, {'id': 127, 'name': 'Backend API for Password Reset', 'description': 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-02-10T23:59:50.734037'}, {'id': 126, 'name': 'Email Configuration for Password Reset', 'description': 'Configure email service to send password reset links.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.334340'}, {'id': 104, 'name': 'Middleware for Role Enforcement', 'description': 'As a system, I want to enforce role-based access to specific routes.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:23:40.346816'}, {'id': 122, 'name': 'Testing Role Enforcement', 'description': 'Write tests to ensure proper access control based on roles.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.185693'}, {'id': 121, 'name': 'Develop Role Enforcement Middleware', 'description': 'Implement middleware to check user roles for access control.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.187439'}, {'id': 105, 'name': 'Profile Management', 'description': 'As a user, I want to update my profile (username, email, password).', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.339830'}, {'id': 123, 'name': 'Backend API for Profile Management', 'description': 'Create PATCH /api/profile endpoint to update user details.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.678781'}, {'id': 125, 'name': 'Testing Profile Updates', 'description': 'Write tests for profile update functionality.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.680382'}]
2025-02-11 09:24:36,260 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 09:24:36,260 INFO: [cached since 751s ago] {'param_1': 2}
2025-02-11 09:24:36,261 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:36,261 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 09:24:36,261 INFO: [cached since 751s ago] {'param_1': 3}
2025-02-11 09:24:36,262 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:36,262 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 09:24:36,262 INFO: [cached since 751s ago] {'param_1': 4}
2025-02-11 09:24:36,263 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:36,263 DEBUG: Row (4, 'Fredrik')
2025-02-11 09:24:36,263 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 09:24:36,263 INFO: [cached since 751s ago] {'param_1': 5}
2025-02-11 09:24:36,263 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:36,264 INFO: ROLLBACK
2025-02-11 09:24:36,264 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:36] "GET /tasks/?page=1&is_archived=False HTTP/1.1" 200 -
2025-02-11 09:24:36,312 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:36] "[36mGET /static/custom.css HTTP/1.1[0m" 304 -
2025-02-11 09:24:36,317 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:36] "[36mGET /static/js/filters.js HTTP/1.1[0m" 304 -
2025-02-11 09:24:36,351 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:36] "[36mGET /static/js/modals.js HTTP/1.1[0m" 304 -
2025-02-11 09:24:36,352 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:36] "[36mGET /static/js/tasks_table_interactions.js HTTP/1.1[0m" 304 -
2025-02-11 09:24:36,353 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:36] "[36mGET /static/images/background.svg HTTP/1.1[0m" 304 -
2025-02-11 09:24:36,466 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:36] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-02-11 09:24:42,258 INFO: Fetching task details for Task ID 42.
2025-02-11 09:24:42,258 INFO: Fetching task with ID 42.
2025-02-11 09:24:42,258 INFO: BEGIN (implicit)
2025-02-11 09:24:42,258 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:42,258 INFO: [cached since 749.5s ago] {'pk_1': 42}
2025-02-11 09:24:42,259 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:42,259 DEBUG: Row (42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, None, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 10, 7, 41, 18, 814716), None)
2025-02-11 09:24:42,259 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b6e92b0>, 'sort_order': 53, 'task_type': 'Subtask', 'contributor_id': None, 'id': 42, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), 'status': 'Completed', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 10, 7, 41, 18, 814716), 'name': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'parent_id': None, 'story_points': 3, 'completed_date': None}
2025-02-11 09:24:42,260 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:42,260 INFO: [cached since 749.5s ago] {'pk_1': 6}
2025-02-11 09:24:42,260 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:42,260 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:42,260 INFO: Task ID 42 fetched with parent ID: None
2025-02-11 09:24:42,260 INFO: Task with ID 42 fetched successfully.
2025-02-11 09:24:42,260 DEBUG: Fetched Task Data: {'id': 42, 'name': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-10T07:41:18.814716', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 09:24:42,260 INFO: Task details fetched successfully for Task ID 42.
2025-02-11 09:24:42,260 INFO: ROLLBACK
2025-02-11 09:24:42,260 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:42] "GET /api/tasks/42 HTTP/1.1" 200 -
2025-02-11 09:24:46,290 INFO: Assigning contributor to task ID 42
2025-02-11 09:24:46,291 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:24:46,291 INFO: Contributor ID received: 5
2025-02-11 09:24:46,292 INFO: BEGIN (implicit)
2025-02-11 09:24:46,292 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:46,292 INFO: [cached since 753.5s ago] {'pk_1': 42}
2025-02-11 09:24:46,293 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:46,294 DEBUG: Row (42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, None, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 10, 7, 41, 18, 814716), None)
2025-02-11 09:24:46,294 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:46,294 INFO: [cached since 302.3s ago] {'pk_1': 5}
2025-02-11 09:24:46,295 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:46,295 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:46,296 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:46,296 INFO: [cached since 302.3s ago] {'pk_1': 6}
2025-02-11 09:24:46,297 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:24:46,298 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:46,299 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:24:46,299 INFO: [cached since 302.3s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 24, 46, 299100, tzinfo=datetime.timezone.utc), 'task_id': 42}
2025-02-11 09:24:46,300 INFO: COMMIT
2025-02-11 09:24:46,301 INFO: BEGIN (implicit)
2025-02-11 09:24:46,301 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:46,301 INFO: [cached since 302.3s ago] {'pk_1': 5}
2025-02-11 09:24:46,301 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:46,301 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:46,301 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:46,301 INFO: [cached since 302.3s ago] {'pk_1': 42}
2025-02-11 09:24:46,302 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:46,302 DEBUG: Row (42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, 5, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 9, 24, 46, 299100), None)
2025-02-11 09:24:46,302 INFO: ROLLBACK
2025-02-11 09:24:46,302 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:46] "POST /tasks/42/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:24:47,272 INFO: save_task triggered
2025-02-11 09:24:47,272 INFO: Payload received: {'title': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'task_id': '42', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 3, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:24:47,272 INFO: Update request for Task ID: 42
2025-02-11 09:24:47,272 INFO: BEGIN (implicit)
2025-02-11 09:24:47,272 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:47,272 INFO: [cached since 754.5s ago] {'pk_1': '42'}
2025-02-11 09:24:47,273 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:47,274 DEBUG: Row (42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, 5, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 9, 24, 46, 299100), None)
2025-02-11 09:24:47,274 DEBUG: Received update payload for Task ID 42: {'title': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'task_id': '42', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 3, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:24:47,274 DEBUG: Validating parent_id change for Task 42: None
2025-02-11 09:24:47,274 INFO: Hierarchy validation passed for Task 42.
2025-02-11 09:24:47,274 INFO: Validation passed for parent_id: None
2025-02-11 09:24:47,274 DEBUG: Validating task_type change for Task 42: Subtask
2025-02-11 09:24:47,274 INFO: Hierarchy validation passed for Task 42.
2025-02-11 09:24:47,274 INFO: Validation passed for task_type: Subtask
2025-02-11 09:24:47,275 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:24:47,275 INFO: [cached since 165s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 24, 47, 274896), 'task_id': 42}
2025-02-11 09:24:47,276 INFO: COMMIT
2025-02-11 09:24:47,276 INFO: Task ID 42 updated successfully.
2025-02-11 09:24:47,277 INFO: BEGIN (implicit)
2025-02-11 09:24:47,277 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:47,277 INFO: [cached since 303.2s ago] {'pk_1': 42}
2025-02-11 09:24:47,277 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:47,277 DEBUG: Row (42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, 5, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 47, 274896), None)
2025-02-11 09:24:47,278 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:47,278 INFO: [cached since 754s ago] {'pk_1': 5}
2025-02-11 09:24:47,278 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:47,278 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:47,278 INFO: ROLLBACK
2025-02-11 09:24:47,279 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:47] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:24:49,626 INFO: Fetching task details for Task ID 53.
2025-02-11 09:24:49,627 INFO: Fetching task with ID 53.
2025-02-11 09:24:49,627 INFO: BEGIN (implicit)
2025-02-11 09:24:49,628 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:49,628 INFO: [cached since 756.9s ago] {'pk_1': 53}
2025-02-11 09:24:49,629 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:49,629 DEBUG: Row (53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, None, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 9, 7, 55, 0, 680183), None)
2025-02-11 09:24:49,629 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7424b0>, 'sort_order': 52, 'task_type': 'Subtask', 'contributor_id': None, 'id': 53, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 9, 7, 55, 0, 680183), 'name': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'parent_id': None, 'story_points': 5, 'completed_date': None}
2025-02-11 09:24:49,630 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:49,630 INFO: [cached since 756.9s ago] {'pk_1': 6}
2025-02-11 09:24:49,631 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:49,631 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:49,631 INFO: Task ID 53 fetched with parent ID: None
2025-02-11 09:24:49,631 INFO: Task with ID 53 fetched successfully.
2025-02-11 09:24:49,631 DEBUG: Fetched Task Data: {'id': 53, 'name': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-09T07:55:00.680183', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 09:24:49,632 INFO: Task details fetched successfully for Task ID 53.
2025-02-11 09:24:49,632 INFO: ROLLBACK
2025-02-11 09:24:49,633 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:49] "GET /api/tasks/53 HTTP/1.1" 200 -
2025-02-11 09:24:53,104 INFO: Assigning contributor to task ID 53
2025-02-11 09:24:53,105 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:24:53,105 INFO: Contributor ID received: 5
2025-02-11 09:24:53,106 INFO: BEGIN (implicit)
2025-02-11 09:24:53,106 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:53,107 INFO: [cached since 760.4s ago] {'pk_1': 53}
2025-02-11 09:24:53,108 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:53,109 DEBUG: Row (53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, None, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 9, 7, 55, 0, 680183), None)
2025-02-11 09:24:53,110 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:53,110 INFO: [cached since 309.1s ago] {'pk_1': 5}
2025-02-11 09:24:53,110 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:53,111 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:53,112 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:53,112 INFO: [cached since 309.1s ago] {'pk_1': 6}
2025-02-11 09:24:53,114 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:24:53,114 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:24:53,115 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:24:53,115 INFO: [cached since 309.1s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 24, 53, 115400, tzinfo=datetime.timezone.utc), 'task_id': 53}
2025-02-11 09:24:53,116 INFO: COMMIT
2025-02-11 09:24:53,117 INFO: BEGIN (implicit)
2025-02-11 09:24:53,117 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:53,117 INFO: [cached since 309.1s ago] {'pk_1': 5}
2025-02-11 09:24:53,118 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:53,118 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:53,118 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:53,118 INFO: [cached since 309.1s ago] {'pk_1': 53}
2025-02-11 09:24:53,119 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:53,119 DEBUG: Row (53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 24, 53, 115400), None)
2025-02-11 09:24:53,119 INFO: ROLLBACK
2025-02-11 09:24:53,119 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:53] "POST /tasks/53/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:24:54,240 INFO: save_task triggered
2025-02-11 09:24:54,240 INFO: Payload received: {'title': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'task_id': '53', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 5, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:24:54,240 INFO: Update request for Task ID: 53
2025-02-11 09:24:54,241 INFO: BEGIN (implicit)
2025-02-11 09:24:54,242 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:54,242 INFO: [cached since 761.5s ago] {'pk_1': '53'}
2025-02-11 09:24:54,243 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:54,243 DEBUG: Row (53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 24, 53, 115400), None)
2025-02-11 09:24:54,243 DEBUG: Received update payload for Task ID 53: {'title': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'task_id': '53', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 5, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:24:54,244 DEBUG: Validating parent_id change for Task 53: None
2025-02-11 09:24:54,244 INFO: Hierarchy validation passed for Task 53.
2025-02-11 09:24:54,244 INFO: Validation passed for parent_id: None
2025-02-11 09:24:54,244 DEBUG: Validating task_type change for Task 53: Subtask
2025-02-11 09:24:54,244 INFO: Hierarchy validation passed for Task 53.
2025-02-11 09:24:54,244 INFO: Validation passed for task_type: Subtask
2025-02-11 09:24:54,245 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:24:54,245 INFO: [cached since 172s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 24, 54, 245010), 'task_id': 53}
2025-02-11 09:24:54,247 INFO: COMMIT
2025-02-11 09:24:54,247 INFO: Task ID 53 updated successfully.
2025-02-11 09:24:54,248 INFO: BEGIN (implicit)
2025-02-11 09:24:54,248 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:54,248 INFO: [cached since 310.2s ago] {'pk_1': 53}
2025-02-11 09:24:54,249 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:54,250 DEBUG: Row (53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 24, 54, 245010), None)
2025-02-11 09:24:54,250 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:24:54,251 INFO: [cached since 761s ago] {'pk_1': 5}
2025-02-11 09:24:54,251 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:24:54,251 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:24:54,252 INFO: ROLLBACK
2025-02-11 09:24:54,252 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:54] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:24:56,224 INFO: Fetching task details for Task ID 52.
2025-02-11 09:24:56,225 INFO: Fetching task with ID 52.
2025-02-11 09:24:56,225 INFO: BEGIN (implicit)
2025-02-11 09:24:56,226 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:56,226 INFO: [cached since 763.5s ago] {'pk_1': 52}
2025-02-11 09:24:56,227 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:56,228 DEBUG: Row (52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, None, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 10, 7, 40, 33, 847642), None)
2025-02-11 09:24:56,228 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d31d0>, 'sort_order': 51, 'task_type': 'Subtask', 'contributor_id': None, 'id': 52, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Completed', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 10, 7, 40, 33, 847642), 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'parent_id': 41, 'story_points': 3, 'completed_date': None}
2025-02-11 09:24:56,229 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:56,229 INFO: [cached since 763.5s ago] {'pk_1': 6}
2025-02-11 09:24:56,229 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:56,230 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:56,230 INFO: Task ID 52 fetched with parent ID: 41
2025-02-11 09:24:56,231 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:56,231 INFO: [cached since 763.5s ago] {'pk_1': 41}
2025-02-11 09:24:56,232 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:56,232 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, None, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 10, 7, 41, 33, 252945), None)
2025-02-11 09:24:56,232 INFO: Task with ID 52 fetched successfully.
2025-02-11 09:24:56,233 DEBUG: Fetched Task Data: {'id': 52, 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 41, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-10T07:40:33.847642', 'contributor_name': 'Unassigned', 'parent': {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-10T07:41:33.252945'}}
2025-02-11 09:24:56,233 INFO: Task details fetched successfully for Task ID 52.
2025-02-11 09:24:56,233 INFO: ROLLBACK
2025-02-11 09:24:56,234 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:56] "GET /api/tasks/52 HTTP/1.1" 200 -
2025-02-11 09:24:56,741 INFO: Fetching task details for Task ID 41.
2025-02-11 09:24:56,741 INFO: Fetching task with ID 41.
2025-02-11 09:24:56,742 INFO: BEGIN (implicit)
2025-02-11 09:24:56,742 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:56,742 INFO: [cached since 764s ago] {'pk_1': 41}
2025-02-11 09:24:56,743 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:56,744 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, None, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 10, 7, 41, 33, 252945), None)
2025-02-11 09:24:56,744 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d1d90>, 'sort_order': 50, 'task_type': 'User Story', 'contributor_id': None, 'id': 41, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), 'status': 'Completed', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 10, 7, 41, 33, 252945), 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'parent_id': None, 'story_points': 8, 'completed_date': None}
2025-02-11 09:24:56,744 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:56,745 INFO: [cached since 764s ago] {'pk_1': 6}
2025-02-11 09:24:56,746 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:56,746 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:56,746 INFO: Task ID 41 fetched with parent ID: None
2025-02-11 09:24:56,746 INFO: Task with ID 41 fetched successfully.
2025-02-11 09:24:56,746 DEBUG: Fetched Task Data: {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-10T07:41:33.252945', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 09:24:56,747 INFO: Task details fetched successfully for Task ID 41.
2025-02-11 09:24:56,747 INFO: ROLLBACK
2025-02-11 09:24:56,748 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:56] "GET /api/tasks/41 HTTP/1.1" 200 -
2025-02-11 09:24:57,459 INFO: Fetching task details for Task ID 52.
2025-02-11 09:24:57,459 INFO: Fetching task with ID 52.
2025-02-11 09:24:57,459 INFO: BEGIN (implicit)
2025-02-11 09:24:57,460 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:57,460 INFO: [cached since 764.7s ago] {'pk_1': 52}
2025-02-11 09:24:57,461 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:57,461 DEBUG: Row (52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, None, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 10, 7, 40, 33, 847642), None)
2025-02-11 09:24:57,462 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d24b0>, 'sort_order': 51, 'task_type': 'Subtask', 'contributor_id': None, 'id': 52, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Completed', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 10, 7, 40, 33, 847642), 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'parent_id': 41, 'story_points': 3, 'completed_date': None}
2025-02-11 09:24:57,463 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:57,463 INFO: [cached since 764.7s ago] {'pk_1': 6}
2025-02-11 09:24:57,463 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:57,464 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:57,465 INFO: Task ID 52 fetched with parent ID: 41
2025-02-11 09:24:57,465 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:57,466 INFO: [cached since 764.7s ago] {'pk_1': 41}
2025-02-11 09:24:57,466 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:57,467 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, None, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 10, 7, 41, 33, 252945), None)
2025-02-11 09:24:57,467 INFO: Task with ID 52 fetched successfully.
2025-02-11 09:24:57,467 DEBUG: Fetched Task Data: {'id': 52, 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 41, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-10T07:40:33.847642', 'contributor_name': 'Unassigned', 'parent': {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-10T07:41:33.252945'}}
2025-02-11 09:24:57,467 INFO: Task details fetched successfully for Task ID 52.
2025-02-11 09:24:57,468 INFO: ROLLBACK
2025-02-11 09:24:57,470 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:57] "GET /api/tasks/52 HTTP/1.1" 200 -
2025-02-11 09:24:57,677 INFO: Fetching task details for Task ID 41.
2025-02-11 09:24:57,677 INFO: Fetching task with ID 41.
2025-02-11 09:24:57,678 INFO: BEGIN (implicit)
2025-02-11 09:24:57,678 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:24:57,678 INFO: [cached since 764.9s ago] {'pk_1': 41}
2025-02-11 09:24:57,679 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:24:57,680 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, None, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 10, 7, 41, 33, 252945), None)
2025-02-11 09:24:57,680 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d2c30>, 'sort_order': 50, 'task_type': 'User Story', 'contributor_id': None, 'id': 41, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), 'status': 'Completed', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 10, 7, 41, 33, 252945), 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'parent_id': None, 'story_points': 8, 'completed_date': None}
2025-02-11 09:24:57,681 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:24:57,681 INFO: [cached since 764.9s ago] {'pk_1': 6}
2025-02-11 09:24:57,682 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:24:57,682 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:24:57,683 INFO: Task ID 41 fetched with parent ID: None
2025-02-11 09:24:57,683 INFO: Task with ID 41 fetched successfully.
2025-02-11 09:24:57,684 DEBUG: Fetched Task Data: {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-10T07:41:33.252945', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 09:24:57,684 INFO: Task details fetched successfully for Task ID 41.
2025-02-11 09:24:57,685 INFO: ROLLBACK
2025-02-11 09:24:57,686 INFO: 127.0.0.1 - - [11/Feb/2025 09:24:57] "GET /api/tasks/41 HTTP/1.1" 200 -
2025-02-11 09:25:00,506 INFO: Assigning contributor to task ID 52
2025-02-11 09:25:00,507 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:25:00,507 INFO: Contributor ID received: 5
2025-02-11 09:25:00,507 INFO: BEGIN (implicit)
2025-02-11 09:25:00,508 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:00,508 INFO: [cached since 767.8s ago] {'pk_1': 52}
2025-02-11 09:25:00,509 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:00,509 DEBUG: Row (52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, None, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 10, 7, 40, 33, 847642), None)
2025-02-11 09:25:00,510 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:00,510 INFO: [cached since 316.5s ago] {'pk_1': 5}
2025-02-11 09:25:00,510 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:00,511 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:00,511 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:00,511 INFO: [cached since 316.5s ago] {'pk_1': 6}
2025-02-11 09:25:00,513 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:25:00,513 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:25:00,514 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:00,514 INFO: [cached since 316.5s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 0, 514665, tzinfo=datetime.timezone.utc), 'task_id': 52}
2025-02-11 09:25:00,515 INFO: COMMIT
2025-02-11 09:25:00,517 INFO: BEGIN (implicit)
2025-02-11 09:25:00,517 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:00,518 INFO: [cached since 316.5s ago] {'pk_1': 5}
2025-02-11 09:25:00,519 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:00,519 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:00,519 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:00,520 INFO: [cached since 316.5s ago] {'pk_1': 52}
2025-02-11 09:25:00,520 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:00,520 DEBUG: Row (52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 25, 0, 514665), None)
2025-02-11 09:25:00,521 INFO: ROLLBACK
2025-02-11 09:25:00,521 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:00] "POST /tasks/52/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:25:01,456 INFO: save_task triggered
2025-02-11 09:25:01,457 INFO: Payload received: {'title': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_id': '52', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 3, 'parent_id': 41, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:01,457 INFO: Update request for Task ID: 52
2025-02-11 09:25:01,458 INFO: BEGIN (implicit)
2025-02-11 09:25:01,458 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:01,458 INFO: [cached since 768.7s ago] {'pk_1': '52'}
2025-02-11 09:25:01,459 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:01,460 DEBUG: Row (52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 25, 0, 514665), None)
2025-02-11 09:25:01,460 DEBUG: Received update payload for Task ID 52: {'title': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_id': '52', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 3, 'parent_id': 41, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:01,460 DEBUG: Validating parent_id change for Task 52: 41
2025-02-11 09:25:01,460 INFO: Checking circular reference for Task 52 with Parent ID: 41
2025-02-11 09:25:01,461 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:01,462 INFO: [cached since 179.2s ago] {'id_1': 41, 'param_1': 1}
2025-02-11 09:25:01,462 DEBUG: Col ('task_parent_id',)
2025-02-11 09:25:01,463 DEBUG: Row (None,)
2025-02-11 09:25:01,463 INFO: Circular reference check passed.
2025-02-11 09:25:01,464 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:01,465 INFO: [cached since 179.2s ago] {'id_1': 41, 'param_1': 1}
2025-02-11 09:25:01,465 DEBUG: Col ('task_task_type',)
2025-02-11 09:25:01,466 DEBUG: Row ('User Story',)
2025-02-11 09:25:01,466 DEBUG: Validating hierarchy: Task 52, Parent Type: User Story
2025-02-11 09:25:01,466 INFO: Hierarchy validation passed for Task 52.
2025-02-11 09:25:01,466 INFO: Validation passed for parent_id: 41
2025-02-11 09:25:01,466 DEBUG: Validating task_type change for Task 52: Subtask
2025-02-11 09:25:01,467 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:01,468 INFO: [cached since 179.2s ago] {'id_1': 41, 'param_1': 1}
2025-02-11 09:25:01,468 DEBUG: Col ('task_task_type',)
2025-02-11 09:25:01,469 DEBUG: Row ('User Story',)
2025-02-11 09:25:01,469 DEBUG: Validating hierarchy: Task Type: Subtask, Parent Type: User Story
2025-02-11 09:25:01,469 INFO: Hierarchy validation passed for Task 52.
2025-02-11 09:25:01,469 INFO: Validation passed for task_type: Subtask
2025-02-11 09:25:01,469 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:01,470 INFO: [cached since 179.2s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), 'task_id': 52}
2025-02-11 09:25:01,470 INFO: COMMIT
2025-02-11 09:25:01,470 INFO: Task ID 52 updated successfully.
2025-02-11 09:25:01,471 INFO: BEGIN (implicit)
2025-02-11 09:25:01,471 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:01,471 INFO: [cached since 317.4s ago] {'pk_1': 52}
2025-02-11 09:25:01,471 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:01,471 DEBUG: Row (52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None)
2025-02-11 09:25:01,472 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:01,472 INFO: [cached since 768.2s ago] {'pk_1': 5}
2025-02-11 09:25:01,472 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:01,472 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:01,472 INFO: ROLLBACK
2025-02-11 09:25:01,473 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:01] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:25:03,089 INFO: Fetching task details for Task ID 41.
2025-02-11 09:25:03,089 INFO: Fetching task with ID 41.
2025-02-11 09:25:03,090 INFO: BEGIN (implicit)
2025-02-11 09:25:03,091 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:03,091 INFO: [cached since 770.3s ago] {'pk_1': 41}
2025-02-11 09:25:03,092 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:03,092 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, None, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 10, 7, 41, 33, 252945), None)
2025-02-11 09:25:03,092 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d0a10>, 'sort_order': 50, 'task_type': 'User Story', 'contributor_id': None, 'id': 41, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), 'status': 'Completed', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 10, 7, 41, 33, 252945), 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'parent_id': None, 'story_points': 8, 'completed_date': None}
2025-02-11 09:25:03,093 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:03,093 INFO: [cached since 770.3s ago] {'pk_1': 6}
2025-02-11 09:25:03,093 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:03,093 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:03,094 INFO: Task ID 41 fetched with parent ID: None
2025-02-11 09:25:03,094 INFO: Task with ID 41 fetched successfully.
2025-02-11 09:25:03,094 DEBUG: Fetched Task Data: {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-10T07:41:33.252945', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 09:25:03,094 INFO: Task details fetched successfully for Task ID 41.
2025-02-11 09:25:03,095 INFO: ROLLBACK
2025-02-11 09:25:03,096 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:03] "GET /api/tasks/41 HTTP/1.1" 200 -
2025-02-11 09:25:06,890 INFO: Assigning contributor to task ID 41
2025-02-11 09:25:06,890 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:25:06,890 INFO: Contributor ID received: 5
2025-02-11 09:25:06,891 INFO: BEGIN (implicit)
2025-02-11 09:25:06,892 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:06,892 INFO: [cached since 774.1s ago] {'pk_1': 41}
2025-02-11 09:25:06,893 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:06,894 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, None, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 10, 7, 41, 33, 252945), None)
2025-02-11 09:25:06,894 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:06,895 INFO: [cached since 322.9s ago] {'pk_1': 5}
2025-02-11 09:25:06,897 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:06,898 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:06,899 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:06,899 INFO: [cached since 322.9s ago] {'pk_1': 6}
2025-02-11 09:25:06,900 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:25:06,900 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:25:06,901 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:06,901 INFO: [cached since 322.9s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 6, 901677, tzinfo=datetime.timezone.utc), 'task_id': 41}
2025-02-11 09:25:06,902 INFO: COMMIT
2025-02-11 09:25:06,904 INFO: BEGIN (implicit)
2025-02-11 09:25:06,904 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:06,904 INFO: [cached since 322.9s ago] {'pk_1': 5}
2025-02-11 09:25:06,905 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:06,905 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:06,906 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:06,908 INFO: [cached since 322.9s ago] {'pk_1': 41}
2025-02-11 09:25:06,909 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:06,909 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, 5, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 11, 9, 25, 6, 901677), None)
2025-02-11 09:25:06,910 INFO: ROLLBACK
2025-02-11 09:25:06,911 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:06] "POST /tasks/41/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:25:07,988 INFO: save_task triggered
2025-02-11 09:25:07,988 INFO: Payload received: {'title': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_id': '41', 'project_id': '6', 'task_type': 'User Story', 'story_points': 8, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:07,988 INFO: Update request for Task ID: 41
2025-02-11 09:25:07,989 INFO: BEGIN (implicit)
2025-02-11 09:25:07,989 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:07,989 INFO: [cached since 775.2s ago] {'pk_1': '41'}
2025-02-11 09:25:07,990 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:07,991 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, 5, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 11, 9, 25, 6, 901677), None)
2025-02-11 09:25:07,991 DEBUG: Received update payload for Task ID 41: {'title': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_id': '41', 'project_id': '6', 'task_type': 'User Story', 'story_points': 8, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:07,991 DEBUG: Validating parent_id change for Task 41: None
2025-02-11 09:25:07,992 INFO: Hierarchy validation passed for Task 41.
2025-02-11 09:25:07,992 INFO: Validation passed for parent_id: None
2025-02-11 09:25:07,992 DEBUG: Validating task_type change for Task 41: User Story
2025-02-11 09:25:07,992 INFO: Hierarchy validation passed for Task 41.
2025-02-11 09:25:07,992 INFO: Validation passed for task_type: User Story
2025-02-11 09:25:07,993 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:07,993 INFO: [cached since 185.7s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 7, 992524), 'task_id': 41}
2025-02-11 09:25:07,994 INFO: COMMIT
2025-02-11 09:25:07,995 INFO: Task ID 41 updated successfully.
2025-02-11 09:25:07,995 INFO: BEGIN (implicit)
2025-02-11 09:25:07,996 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:07,997 INFO: [cached since 324s ago] {'pk_1': 41}
2025-02-11 09:25:07,998 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:07,998 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, 5, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 11, 8, 25, 7, 992524), None)
2025-02-11 09:25:07,998 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:07,998 INFO: [cached since 774.7s ago] {'pk_1': 5}
2025-02-11 09:25:07,999 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:07,999 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:07,999 INFO: ROLLBACK
2025-02-11 09:25:08,000 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:08] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:25:09,620 INFO: Fetching task details for Task ID 59.
2025-02-11 09:25:09,621 INFO: Fetching task with ID 59.
2025-02-11 09:25:09,622 INFO: BEGIN (implicit)
2025-02-11 09:25:09,622 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:09,622 INFO: [cached since 776.9s ago] {'pk_1': 59}
2025-02-11 09:25:09,623 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:09,624 DEBUG: Row (59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 9, 23, 48, 8, 770907), None)
2025-02-11 09:25:09,624 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d1970>, 'sort_order': 48, 'task_type': 'Subtask', 'contributor_id': None, 'id': 59, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 9, 23, 48, 8, 770907), 'name': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'parent_id': None, 'story_points': 2, 'completed_date': None}
2025-02-11 09:25:09,625 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:09,625 INFO: [cached since 776.9s ago] {'pk_1': 6}
2025-02-11 09:25:09,625 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:09,625 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:09,626 INFO: Task ID 59 fetched with parent ID: None
2025-02-11 09:25:09,626 INFO: Task with ID 59 fetched successfully.
2025-02-11 09:25:09,626 DEBUG: Fetched Task Data: {'id': 59, 'name': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-09T23:48:08.770907', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 09:25:09,626 INFO: Task details fetched successfully for Task ID 59.
2025-02-11 09:25:09,626 INFO: ROLLBACK
2025-02-11 09:25:09,627 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:09] "GET /api/tasks/59 HTTP/1.1" 200 -
2025-02-11 09:25:14,056 INFO: Assigning contributor to task ID 59
2025-02-11 09:25:14,057 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:25:14,057 INFO: Contributor ID received: 5
2025-02-11 09:25:14,057 INFO: BEGIN (implicit)
2025-02-11 09:25:14,058 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:14,058 INFO: [cached since 781.3s ago] {'pk_1': 59}
2025-02-11 09:25:14,059 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:14,059 DEBUG: Row (59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 9, 23, 48, 8, 770907), None)
2025-02-11 09:25:14,060 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:14,060 INFO: [cached since 330.1s ago] {'pk_1': 5}
2025-02-11 09:25:14,061 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:14,061 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:14,063 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:14,063 INFO: [cached since 330s ago] {'pk_1': 6}
2025-02-11 09:25:14,064 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:25:14,064 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:25:14,065 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:14,067 INFO: [cached since 330s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 14, 65696, tzinfo=datetime.timezone.utc), 'task_id': 59}
2025-02-11 09:25:14,069 INFO: COMMIT
2025-02-11 09:25:14,070 INFO: BEGIN (implicit)
2025-02-11 09:25:14,071 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:14,071 INFO: [cached since 330s ago] {'pk_1': 5}
2025-02-11 09:25:14,071 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:14,071 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:14,072 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:14,072 INFO: [cached since 330s ago] {'pk_1': 59}
2025-02-11 09:25:14,072 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:14,072 DEBUG: Row (59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 25, 14, 65696), None)
2025-02-11 09:25:14,073 INFO: ROLLBACK
2025-02-11 09:25:14,073 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:14] "POST /tasks/59/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:25:15,487 INFO: save_task triggered
2025-02-11 09:25:15,488 INFO: Payload received: {'title': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'task_id': '59', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 2, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:15,488 INFO: Update request for Task ID: 59
2025-02-11 09:25:15,489 INFO: BEGIN (implicit)
2025-02-11 09:25:15,489 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:15,489 INFO: [cached since 782.7s ago] {'pk_1': '59'}
2025-02-11 09:25:15,490 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:15,490 DEBUG: Row (59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 25, 14, 65696), None)
2025-02-11 09:25:15,491 DEBUG: Received update payload for Task ID 59: {'title': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'task_id': '59', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 2, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:15,491 DEBUG: Validating parent_id change for Task 59: None
2025-02-11 09:25:15,491 INFO: Hierarchy validation passed for Task 59.
2025-02-11 09:25:15,491 INFO: Validation passed for parent_id: None
2025-02-11 09:25:15,491 DEBUG: Validating task_type change for Task 59: Subtask
2025-02-11 09:25:15,491 INFO: Hierarchy validation passed for Task 59.
2025-02-11 09:25:15,491 INFO: Validation passed for task_type: Subtask
2025-02-11 09:25:15,492 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:15,492 INFO: [cached since 193.2s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 15, 491910), 'task_id': 59}
2025-02-11 09:25:15,493 INFO: COMMIT
2025-02-11 09:25:15,494 INFO: Task ID 59 updated successfully.
2025-02-11 09:25:15,494 INFO: BEGIN (implicit)
2025-02-11 09:25:15,495 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:15,495 INFO: [cached since 331.5s ago] {'pk_1': 59}
2025-02-11 09:25:15,497 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:15,497 DEBUG: Row (59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 15, 491910), None)
2025-02-11 09:25:15,498 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:15,499 INFO: [cached since 782.2s ago] {'pk_1': 5}
2025-02-11 09:25:15,500 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:15,500 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:15,500 INFO: ROLLBACK
2025-02-11 09:25:15,500 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:15] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:25:17,293 INFO: Fetching task details for Task ID 50.
2025-02-11 09:25:17,293 INFO: Fetching task with ID 50.
2025-02-11 09:25:17,293 INFO: BEGIN (implicit)
2025-02-11 09:25:17,293 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:17,294 INFO: [cached since 784.5s ago] {'pk_1': 50}
2025-02-11 09:25:17,294 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:17,295 DEBUG: Row (50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 10, 7, 41, 43, 569807), None)
2025-02-11 09:25:17,296 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d2810>, 'sort_order': 37, 'task_type': 'Subtask', 'contributor_id': None, 'id': 50, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'In Progress', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 10, 7, 41, 43, 569807), 'name': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'parent_id': None, 'story_points': 2, 'completed_date': None}
2025-02-11 09:25:17,296 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:17,296 INFO: [cached since 784.5s ago] {'pk_1': 6}
2025-02-11 09:25:17,297 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:17,297 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:17,297 INFO: Task ID 50 fetched with parent ID: None
2025-02-11 09:25:17,297 INFO: Task with ID 50 fetched successfully.
2025-02-11 09:25:17,297 DEBUG: Fetched Task Data: {'id': 50, 'name': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 2, 'status': 'In Progress', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-10T07:41:43.569807', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 09:25:17,297 INFO: Task details fetched successfully for Task ID 50.
2025-02-11 09:25:17,297 INFO: ROLLBACK
2025-02-11 09:25:17,297 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:17] "GET /api/tasks/50 HTTP/1.1" 200 -
2025-02-11 09:25:21,273 INFO: Assigning contributor to task ID 50
2025-02-11 09:25:21,273 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:25:21,273 INFO: Contributor ID received: 5
2025-02-11 09:25:21,274 INFO: BEGIN (implicit)
2025-02-11 09:25:21,275 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:21,275 INFO: [cached since 788.5s ago] {'pk_1': 50}
2025-02-11 09:25:21,276 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:21,276 DEBUG: Row (50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 10, 7, 41, 43, 569807), None)
2025-02-11 09:25:21,276 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:21,277 INFO: [cached since 337.3s ago] {'pk_1': 5}
2025-02-11 09:25:21,277 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:21,277 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:21,280 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:21,280 INFO: [cached since 337.3s ago] {'pk_1': 6}
2025-02-11 09:25:21,281 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:25:21,281 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:25:21,283 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:21,283 INFO: [cached since 337.3s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 21, 283004, tzinfo=datetime.timezone.utc), 'task_id': 50}
2025-02-11 09:25:21,284 INFO: COMMIT
2025-02-11 09:25:21,285 INFO: BEGIN (implicit)
2025-02-11 09:25:21,286 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:21,286 INFO: [cached since 337.3s ago] {'pk_1': 5}
2025-02-11 09:25:21,287 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:21,287 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:21,288 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:21,288 INFO: [cached since 337.3s ago] {'pk_1': 50}
2025-02-11 09:25:21,289 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:21,290 DEBUG: Row (50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 25, 21, 283004), None)
2025-02-11 09:25:21,291 INFO: ROLLBACK
2025-02-11 09:25:21,292 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:21] "POST /tasks/50/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:25:22,271 INFO: save_task triggered
2025-02-11 09:25:22,272 INFO: Payload received: {'title': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'task_id': '50', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 2, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:22,272 INFO: Update request for Task ID: 50
2025-02-11 09:25:22,272 INFO: BEGIN (implicit)
2025-02-11 09:25:22,272 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:22,272 INFO: [cached since 789.5s ago] {'pk_1': '50'}
2025-02-11 09:25:22,273 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:22,273 DEBUG: Row (50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 25, 21, 283004), None)
2025-02-11 09:25:22,273 DEBUG: Received update payload for Task ID 50: {'title': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'task_id': '50', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 2, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:22,273 DEBUG: Validating parent_id change for Task 50: None
2025-02-11 09:25:22,274 INFO: Hierarchy validation passed for Task 50.
2025-02-11 09:25:22,274 INFO: Validation passed for parent_id: None
2025-02-11 09:25:22,274 DEBUG: Validating task_type change for Task 50: Subtask
2025-02-11 09:25:22,274 INFO: Hierarchy validation passed for Task 50.
2025-02-11 09:25:22,274 INFO: Validation passed for task_type: Subtask
2025-02-11 09:25:22,274 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:22,274 INFO: [cached since 200s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 22, 274304), 'task_id': 50}
2025-02-11 09:25:22,275 INFO: COMMIT
2025-02-11 09:25:22,276 INFO: Task ID 50 updated successfully.
2025-02-11 09:25:22,276 INFO: BEGIN (implicit)
2025-02-11 09:25:22,276 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:22,276 INFO: [cached since 338.2s ago] {'pk_1': 50}
2025-02-11 09:25:22,276 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:22,277 DEBUG: Row (50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 22, 274304), None)
2025-02-11 09:25:22,277 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:22,277 INFO: [cached since 789s ago] {'pk_1': 5}
2025-02-11 09:25:22,277 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:22,277 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:22,277 INFO: ROLLBACK
2025-02-11 09:25:22,278 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:22] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:25:23,889 INFO: Fetching task details for Task ID 60.
2025-02-11 09:25:23,889 INFO: Fetching task with ID 60.
2025-02-11 09:25:23,890 INFO: BEGIN (implicit)
2025-02-11 09:25:23,890 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:23,890 INFO: [cached since 791.1s ago] {'pk_1': 60}
2025-02-11 09:25:23,891 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:23,892 DEBUG: Row (60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, None, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 299971), None)
2025-02-11 09:25:23,892 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b6ebdd0>, 'sort_order': 49, 'task_type': 'Subtask', 'contributor_id': None, 'id': 60, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 299971), 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'parent_id': 49, 'story_points': 3, 'completed_date': None}
2025-02-11 09:25:23,892 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:23,893 INFO: [cached since 791.1s ago] {'pk_1': 6}
2025-02-11 09:25:23,893 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:23,893 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:23,893 INFO: Task ID 60 fetched with parent ID: 49
2025-02-11 09:25:23,894 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:23,894 INFO: [cached since 791.1s ago] {'pk_1': 49}
2025-02-11 09:25:23,895 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:23,895 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 296814), None)
2025-02-11 09:25:23,896 INFO: Task with ID 60 fetched successfully.
2025-02-11 09:25:23,896 DEBUG: Fetched Task Data: {'id': 60, 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 49, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.299971', 'contributor_name': 'Unassigned', 'parent': {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.296814'}}
2025-02-11 09:25:23,897 INFO: Task details fetched successfully for Task ID 60.
2025-02-11 09:25:23,897 INFO: ROLLBACK
2025-02-11 09:25:23,898 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:23] "GET /api/tasks/60 HTTP/1.1" 200 -
2025-02-11 09:25:24,403 INFO: Fetching task details for Task ID 49.
2025-02-11 09:25:24,403 INFO: Fetching task with ID 49.
2025-02-11 09:25:24,404 INFO: BEGIN (implicit)
2025-02-11 09:25:24,405 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:24,405 INFO: [cached since 791.7s ago] {'pk_1': 49}
2025-02-11 09:25:24,406 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:24,406 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 296814), None)
2025-02-11 09:25:24,407 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b6e98b0>, 'sort_order': 47, 'task_type': 'User Story', 'contributor_id': None, 'id': 49, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 296814), 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'parent_id': 61, 'story_points': 5, 'completed_date': None}
2025-02-11 09:25:24,408 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:24,408 INFO: [cached since 791.7s ago] {'pk_1': 6}
2025-02-11 09:25:24,408 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:24,410 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:24,411 INFO: Task ID 49 fetched with parent ID: 61
2025-02-11 09:25:24,412 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:24,412 INFO: [cached since 791.7s ago] {'pk_1': 61}
2025-02-11 09:25:24,413 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:24,413 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:25:24,414 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:24,415 INFO: [cached since 791.1s ago] {'pk_1': 5}
2025-02-11 09:25:24,415 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:24,416 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:24,416 INFO: Task with ID 49 fetched successfully.
2025-02-11 09:25:24,417 DEBUG: Fetched Task Data: {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.296814', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:25:24,417 INFO: Task details fetched successfully for Task ID 49.
2025-02-11 09:25:24,417 INFO: ROLLBACK
2025-02-11 09:25:24,418 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:24] "GET /api/tasks/49 HTTP/1.1" 200 -
2025-02-11 09:25:25,124 INFO: Fetching task details for Task ID 60.
2025-02-11 09:25:25,125 INFO: Fetching task with ID 60.
2025-02-11 09:25:25,125 INFO: BEGIN (implicit)
2025-02-11 09:25:25,125 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:25,126 INFO: [cached since 792.4s ago] {'pk_1': 60}
2025-02-11 09:25:25,127 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:25,127 DEBUG: Row (60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, None, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 299971), None)
2025-02-11 09:25:25,128 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d1130>, 'sort_order': 49, 'task_type': 'Subtask', 'contributor_id': None, 'id': 60, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 299971), 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'parent_id': 49, 'story_points': 3, 'completed_date': None}
2025-02-11 09:25:25,129 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:25,129 INFO: [cached since 792.4s ago] {'pk_1': 6}
2025-02-11 09:25:25,130 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:25,130 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:25,130 INFO: Task ID 60 fetched with parent ID: 49
2025-02-11 09:25:25,131 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:25,131 INFO: [cached since 792.4s ago] {'pk_1': 49}
2025-02-11 09:25:25,132 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:25,132 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 296814), None)
2025-02-11 09:25:25,133 INFO: Task with ID 60 fetched successfully.
2025-02-11 09:25:25,133 DEBUG: Fetched Task Data: {'id': 60, 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 49, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.299971', 'contributor_name': 'Unassigned', 'parent': {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.296814'}}
2025-02-11 09:25:25,133 INFO: Task details fetched successfully for Task ID 60.
2025-02-11 09:25:25,134 INFO: ROLLBACK
2025-02-11 09:25:25,134 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:25] "GET /api/tasks/60 HTTP/1.1" 200 -
2025-02-11 09:25:25,338 INFO: Fetching task details for Task ID 49.
2025-02-11 09:25:25,339 INFO: Fetching task with ID 49.
2025-02-11 09:25:25,339 INFO: BEGIN (implicit)
2025-02-11 09:25:25,340 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:25,340 INFO: [cached since 792.6s ago] {'pk_1': 49}
2025-02-11 09:25:25,341 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:25,342 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 296814), None)
2025-02-11 09:25:25,342 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d1f70>, 'sort_order': 47, 'task_type': 'User Story', 'contributor_id': None, 'id': 49, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 296814), 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'parent_id': 61, 'story_points': 5, 'completed_date': None}
2025-02-11 09:25:25,343 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:25,343 INFO: [cached since 792.6s ago] {'pk_1': 6}
2025-02-11 09:25:25,343 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:25,344 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:25,344 INFO: Task ID 49 fetched with parent ID: 61
2025-02-11 09:25:25,346 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:25,346 INFO: [cached since 792.6s ago] {'pk_1': 61}
2025-02-11 09:25:25,347 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:25,348 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:25:25,348 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:25,348 INFO: [cached since 792.1s ago] {'pk_1': 5}
2025-02-11 09:25:25,349 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:25,349 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:25,349 INFO: Task with ID 49 fetched successfully.
2025-02-11 09:25:25,349 DEBUG: Fetched Task Data: {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.296814', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:25:25,349 INFO: Task details fetched successfully for Task ID 49.
2025-02-11 09:25:25,349 INFO: ROLLBACK
2025-02-11 09:25:25,349 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:25] "GET /api/tasks/49 HTTP/1.1" 200 -
2025-02-11 09:25:27,239 INFO: Assigning contributor to task ID 60
2025-02-11 09:25:27,239 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:25:27,239 INFO: Contributor ID received: 5
2025-02-11 09:25:27,240 INFO: BEGIN (implicit)
2025-02-11 09:25:27,240 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:27,240 INFO: [cached since 794.5s ago] {'pk_1': 60}
2025-02-11 09:25:27,241 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:27,242 DEBUG: Row (60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, None, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 299971), None)
2025-02-11 09:25:27,243 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:27,243 INFO: [cached since 343.2s ago] {'pk_1': 5}
2025-02-11 09:25:27,243 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:27,243 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:27,244 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:27,244 INFO: [cached since 343.2s ago] {'pk_1': 6}
2025-02-11 09:25:27,246 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:25:27,247 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:25:27,248 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:27,248 INFO: [cached since 343.2s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 27, 248138, tzinfo=datetime.timezone.utc), 'task_id': 60}
2025-02-11 09:25:27,251 INFO: COMMIT
2025-02-11 09:25:27,252 INFO: BEGIN (implicit)
2025-02-11 09:25:27,252 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:27,253 INFO: [cached since 343.2s ago] {'pk_1': 5}
2025-02-11 09:25:27,253 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:27,253 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:27,253 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:27,253 INFO: [cached since 343.2s ago] {'pk_1': 60}
2025-02-11 09:25:27,254 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:27,254 DEBUG: Row (60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 25, 27, 248138), None)
2025-02-11 09:25:27,254 INFO: ROLLBACK
2025-02-11 09:25:27,254 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:27] "POST /tasks/60/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:25:28,356 INFO: save_task triggered
2025-02-11 09:25:28,356 INFO: Payload received: {'title': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_id': '60', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 3, 'parent_id': 49, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:28,356 INFO: Update request for Task ID: 60
2025-02-11 09:25:28,357 INFO: BEGIN (implicit)
2025-02-11 09:25:28,357 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:28,358 INFO: [cached since 795.6s ago] {'pk_1': '60'}
2025-02-11 09:25:28,359 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:28,359 DEBUG: Row (60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 25, 27, 248138), None)
2025-02-11 09:25:28,359 DEBUG: Received update payload for Task ID 60: {'title': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_id': '60', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 3, 'parent_id': 49, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:28,359 DEBUG: Validating parent_id change for Task 60: 49
2025-02-11 09:25:28,359 INFO: Checking circular reference for Task 60 with Parent ID: 49
2025-02-11 09:25:28,361 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:28,361 INFO: [cached since 206.1s ago] {'id_1': 49, 'param_1': 1}
2025-02-11 09:25:28,362 DEBUG: Col ('task_parent_id',)
2025-02-11 09:25:28,363 DEBUG: Row (61,)
2025-02-11 09:25:28,364 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:28,364 INFO: [cached since 206.1s ago] {'id_1': 61, 'param_1': 1}
2025-02-11 09:25:28,364 DEBUG: Col ('task_parent_id',)
2025-02-11 09:25:28,365 DEBUG: Row (None,)
2025-02-11 09:25:28,365 INFO: Circular reference check passed.
2025-02-11 09:25:28,365 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:28,365 INFO: [cached since 206.1s ago] {'id_1': 49, 'param_1': 1}
2025-02-11 09:25:28,366 DEBUG: Col ('task_task_type',)
2025-02-11 09:25:28,366 DEBUG: Row ('User Story',)
2025-02-11 09:25:28,366 DEBUG: Validating hierarchy: Task 60, Parent Type: User Story
2025-02-11 09:25:28,366 INFO: Hierarchy validation passed for Task 60.
2025-02-11 09:25:28,366 INFO: Validation passed for parent_id: 49
2025-02-11 09:25:28,366 DEBUG: Validating task_type change for Task 60: Subtask
2025-02-11 09:25:28,367 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:28,367 INFO: [cached since 206.1s ago] {'id_1': 49, 'param_1': 1}
2025-02-11 09:25:28,367 DEBUG: Col ('task_task_type',)
2025-02-11 09:25:28,367 DEBUG: Row ('User Story',)
2025-02-11 09:25:28,367 DEBUG: Validating hierarchy: Task Type: Subtask, Parent Type: User Story
2025-02-11 09:25:28,367 INFO: Hierarchy validation passed for Task 60.
2025-02-11 09:25:28,367 INFO: Validation passed for task_type: Subtask
2025-02-11 09:25:28,367 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:28,367 INFO: [cached since 206.1s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), 'task_id': 60}
2025-02-11 09:25:28,368 INFO: COMMIT
2025-02-11 09:25:28,368 INFO: Task ID 60 updated successfully.
2025-02-11 09:25:28,369 INFO: BEGIN (implicit)
2025-02-11 09:25:28,369 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:28,369 INFO: [cached since 344.3s ago] {'pk_1': 60}
2025-02-11 09:25:28,369 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:28,369 DEBUG: Row (60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None)
2025-02-11 09:25:28,369 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:28,369 INFO: [cached since 795.1s ago] {'pk_1': 5}
2025-02-11 09:25:28,370 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:28,370 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:28,370 INFO: ROLLBACK
2025-02-11 09:25:28,370 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:28] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:25:30,410 INFO: Fetching task details for Task ID 49.
2025-02-11 09:25:30,411 INFO: Fetching task with ID 49.
2025-02-11 09:25:30,413 INFO: BEGIN (implicit)
2025-02-11 09:25:30,413 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:30,414 INFO: [cached since 797.7s ago] {'pk_1': 49}
2025-02-11 09:25:30,415 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:30,415 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 296814), None)
2025-02-11 09:25:30,415 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d2b70>, 'sort_order': 47, 'task_type': 'User Story', 'contributor_id': None, 'id': 49, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 296814), 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'parent_id': 61, 'story_points': 5, 'completed_date': None}
2025-02-11 09:25:30,416 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:30,416 INFO: [cached since 797.7s ago] {'pk_1': 6}
2025-02-11 09:25:30,417 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:30,417 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:30,417 INFO: Task ID 49 fetched with parent ID: 61
2025-02-11 09:25:30,418 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:30,418 INFO: [cached since 797.7s ago] {'pk_1': 61}
2025-02-11 09:25:30,419 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:30,419 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:25:30,420 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:30,420 INFO: [cached since 797.1s ago] {'pk_1': 5}
2025-02-11 09:25:30,421 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:30,421 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:30,421 INFO: Task with ID 49 fetched successfully.
2025-02-11 09:25:30,421 DEBUG: Fetched Task Data: {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.296814', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:25:30,422 INFO: Task details fetched successfully for Task ID 49.
2025-02-11 09:25:30,422 INFO: ROLLBACK
2025-02-11 09:25:30,423 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:30] "GET /api/tasks/49 HTTP/1.1" 200 -
2025-02-11 09:25:30,930 INFO: Fetching task details for Task ID 61.
2025-02-11 09:25:30,930 INFO: Fetching task with ID 61.
2025-02-11 09:25:30,931 INFO: BEGIN (implicit)
2025-02-11 09:25:30,931 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:30,932 INFO: [cached since 798.2s ago] {'pk_1': 61}
2025-02-11 09:25:30,933 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:30,933 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:25:30,933 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3410>, 'sort_order': 35, 'task_type': 'Epic', 'contributor_id': 5, 'id': 61, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), 'name': 'Parent task assignment', 'description': '', 'parent_id': None, 'story_points': 0, 'completed_date': None}
2025-02-11 09:25:30,934 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:30,934 INFO: [cached since 798.2s ago] {'pk_1': 6}
2025-02-11 09:25:30,935 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:30,935 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:30,935 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:30,936 INFO: [cached since 797.7s ago] {'pk_1': 5}
2025-02-11 09:25:30,936 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:30,937 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:30,937 INFO: Task ID 61 fetched with parent ID: None
2025-02-11 09:25:30,937 INFO: Task with ID 61 fetched successfully.
2025-02-11 09:25:30,937 DEBUG: Fetched Task Data: {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012', 'contributor_name': 'Fredrik Cederborg', 'parent': None}
2025-02-11 09:25:30,937 INFO: Task details fetched successfully for Task ID 61.
2025-02-11 09:25:30,937 INFO: ROLLBACK
2025-02-11 09:25:30,937 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:30] "GET /api/tasks/61 HTTP/1.1" 200 -
2025-02-11 09:25:31,643 INFO: Fetching task details for Task ID 49.
2025-02-11 09:25:31,643 INFO: Fetching task with ID 49.
2025-02-11 09:25:31,644 INFO: BEGIN (implicit)
2025-02-11 09:25:31,644 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:31,645 INFO: [cached since 798.9s ago] {'pk_1': 49}
2025-02-11 09:25:31,646 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:31,646 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 296814), None)
2025-02-11 09:25:31,647 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3b30>, 'sort_order': 47, 'task_type': 'User Story', 'contributor_id': None, 'id': 49, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 296814), 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'parent_id': 61, 'story_points': 5, 'completed_date': None}
2025-02-11 09:25:31,647 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:31,647 INFO: [cached since 798.9s ago] {'pk_1': 6}
2025-02-11 09:25:31,648 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:31,648 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:31,649 INFO: Task ID 49 fetched with parent ID: 61
2025-02-11 09:25:31,649 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:31,649 INFO: [cached since 798.9s ago] {'pk_1': 61}
2025-02-11 09:25:31,650 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:31,651 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:25:31,651 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:31,652 INFO: [cached since 798.4s ago] {'pk_1': 5}
2025-02-11 09:25:31,652 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:31,652 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:31,652 INFO: Task with ID 49 fetched successfully.
2025-02-11 09:25:31,653 DEBUG: Fetched Task Data: {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.296814', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:25:31,653 INFO: Task details fetched successfully for Task ID 49.
2025-02-11 09:25:31,653 INFO: ROLLBACK
2025-02-11 09:25:31,654 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:31] "GET /api/tasks/49 HTTP/1.1" 200 -
2025-02-11 09:25:31,859 INFO: Fetching task details for Task ID 61.
2025-02-11 09:25:31,859 INFO: Fetching task with ID 61.
2025-02-11 09:25:31,860 INFO: BEGIN (implicit)
2025-02-11 09:25:31,860 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:31,860 INFO: [cached since 799.1s ago] {'pk_1': 61}
2025-02-11 09:25:31,861 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:31,862 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:25:31,862 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d2ed0>, 'sort_order': 35, 'task_type': 'Epic', 'contributor_id': 5, 'id': 61, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), 'name': 'Parent task assignment', 'description': '', 'parent_id': None, 'story_points': 0, 'completed_date': None}
2025-02-11 09:25:31,863 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:31,863 INFO: [cached since 799.1s ago] {'pk_1': 6}
2025-02-11 09:25:31,864 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:31,866 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:31,867 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:31,867 INFO: [cached since 798.6s ago] {'pk_1': 5}
2025-02-11 09:25:31,868 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:31,868 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:31,868 INFO: Task ID 61 fetched with parent ID: None
2025-02-11 09:25:31,868 INFO: Task with ID 61 fetched successfully.
2025-02-11 09:25:31,868 DEBUG: Fetched Task Data: {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012', 'contributor_name': 'Fredrik Cederborg', 'parent': None}
2025-02-11 09:25:31,868 INFO: Task details fetched successfully for Task ID 61.
2025-02-11 09:25:31,869 INFO: ROLLBACK
2025-02-11 09:25:31,869 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:31] "GET /api/tasks/61 HTTP/1.1" 200 -
2025-02-11 09:25:34,521 INFO: Assigning contributor to task ID 49
2025-02-11 09:25:34,522 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:25:34,522 INFO: Contributor ID received: 5
2025-02-11 09:25:34,522 INFO: BEGIN (implicit)
2025-02-11 09:25:34,523 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:34,523 INFO: [cached since 801.8s ago] {'pk_1': 49}
2025-02-11 09:25:34,524 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:34,524 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 296814), None)
2025-02-11 09:25:34,525 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:34,525 INFO: [cached since 350.5s ago] {'pk_1': 5}
2025-02-11 09:25:34,526 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:34,526 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:34,527 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:34,527 INFO: [cached since 350.5s ago] {'pk_1': 6}
2025-02-11 09:25:34,529 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:25:34,531 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:25:34,533 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:34,533 INFO: [cached since 350.5s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 34, 533212, tzinfo=datetime.timezone.utc), 'task_id': 49}
2025-02-11 09:25:34,534 INFO: COMMIT
2025-02-11 09:25:34,534 INFO: BEGIN (implicit)
2025-02-11 09:25:34,535 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:34,535 INFO: [cached since 350.5s ago] {'pk_1': 5}
2025-02-11 09:25:34,535 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:34,535 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:34,535 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:34,535 INFO: [cached since 350.5s ago] {'pk_1': 49}
2025-02-11 09:25:34,536 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:34,536 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 9, 25, 34, 533212), None)
2025-02-11 09:25:34,536 INFO: ROLLBACK
2025-02-11 09:25:34,536 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:34] "POST /tasks/49/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:25:36,121 INFO: save_task triggered
2025-02-11 09:25:36,121 INFO: Payload received: {'title': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_id': '49', 'project_id': '6', 'task_type': 'User Story', 'story_points': 5, 'parent_id': 61, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:36,121 INFO: Update request for Task ID: 49
2025-02-11 09:25:36,123 INFO: BEGIN (implicit)
2025-02-11 09:25:36,124 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:36,124 INFO: [cached since 803.4s ago] {'pk_1': '49'}
2025-02-11 09:25:36,125 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:36,126 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 9, 25, 34, 533212), None)
2025-02-11 09:25:36,127 DEBUG: Received update payload for Task ID 49: {'title': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_id': '49', 'project_id': '6', 'task_type': 'User Story', 'story_points': 5, 'parent_id': 61, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:36,127 DEBUG: Validating parent_id change for Task 49: 61
2025-02-11 09:25:36,128 INFO: Checking circular reference for Task 49 with Parent ID: 61
2025-02-11 09:25:36,130 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:36,130 INFO: [cached since 213.9s ago] {'id_1': 61, 'param_1': 1}
2025-02-11 09:25:36,131 DEBUG: Col ('task_parent_id',)
2025-02-11 09:25:36,131 DEBUG: Row (None,)
2025-02-11 09:25:36,131 INFO: Circular reference check passed.
2025-02-11 09:25:36,131 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:36,131 INFO: [cached since 213.9s ago] {'id_1': 61, 'param_1': 1}
2025-02-11 09:25:36,131 DEBUG: Col ('task_task_type',)
2025-02-11 09:25:36,132 DEBUG: Row ('Epic',)
2025-02-11 09:25:36,132 DEBUG: Validating hierarchy: Task 49, Parent Type: Epic
2025-02-11 09:25:36,132 INFO: Hierarchy validation passed for Task 49.
2025-02-11 09:25:36,132 INFO: Validation passed for parent_id: 61
2025-02-11 09:25:36,132 DEBUG: Validating task_type change for Task 49: User Story
2025-02-11 09:25:36,132 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:36,132 INFO: [cached since 213.9s ago] {'id_1': 61, 'param_1': 1}
2025-02-11 09:25:36,132 DEBUG: Col ('task_task_type',)
2025-02-11 09:25:36,132 DEBUG: Row ('Epic',)
2025-02-11 09:25:36,133 DEBUG: Validating hierarchy: Task Type: User Story, Parent Type: Epic
2025-02-11 09:25:36,133 INFO: Hierarchy validation passed for Task 49.
2025-02-11 09:25:36,133 INFO: Validation passed for task_type: User Story
2025-02-11 09:25:36,133 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:36,133 INFO: [cached since 213.9s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), 'task_id': 49}
2025-02-11 09:25:36,133 INFO: COMMIT
2025-02-11 09:25:36,134 INFO: Task ID 49 updated successfully.
2025-02-11 09:25:36,134 INFO: BEGIN (implicit)
2025-02-11 09:25:36,134 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:36,134 INFO: [cached since 352.1s ago] {'pk_1': 49}
2025-02-11 09:25:36,135 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:36,135 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None)
2025-02-11 09:25:36,135 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:36,135 INFO: [cached since 802.9s ago] {'pk_1': 5}
2025-02-11 09:25:36,135 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:36,135 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:36,136 INFO: ROLLBACK
2025-02-11 09:25:36,136 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:36] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:25:38,408 INFO: Fetching task details for Task ID 58.
2025-02-11 09:25:38,408 INFO: Fetching task with ID 58.
2025-02-11 09:25:38,409 INFO: BEGIN (implicit)
2025-02-11 09:25:38,409 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:38,409 INFO: [cached since 805.7s ago] {'pk_1': 58}
2025-02-11 09:25:38,410 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:38,411 DEBUG: Row (58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, None, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 295385), None)
2025-02-11 09:25:38,411 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d1490>, 'sort_order': 46, 'task_type': 'Subtask', 'contributor_id': None, 'id': 58, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 295385), 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'parent_id': 48, 'story_points': 3, 'completed_date': None}
2025-02-11 09:25:38,411 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:38,412 INFO: [cached since 805.7s ago] {'pk_1': 6}
2025-02-11 09:25:38,413 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:38,413 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:38,413 INFO: Task ID 58 fetched with parent ID: 48
2025-02-11 09:25:38,414 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:38,414 INFO: [cached since 805.7s ago] {'pk_1': 48}
2025-02-11 09:25:38,415 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:38,416 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), None)
2025-02-11 09:25:38,416 INFO: Task with ID 58 fetched successfully.
2025-02-11 09:25:38,416 DEBUG: Fetched Task Data: {'id': 58, 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.295385', 'contributor_name': 'Unassigned', 'parent': {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.292389'}}
2025-02-11 09:25:38,416 INFO: Task details fetched successfully for Task ID 58.
2025-02-11 09:25:38,417 INFO: ROLLBACK
2025-02-11 09:25:38,417 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:38] "GET /api/tasks/58 HTTP/1.1" 200 -
2025-02-11 09:25:38,925 INFO: Fetching task details for Task ID 48.
2025-02-11 09:25:38,925 INFO: Fetching task with ID 48.
2025-02-11 09:25:38,926 INFO: BEGIN (implicit)
2025-02-11 09:25:38,926 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:38,926 INFO: [cached since 806.2s ago] {'pk_1': 48}
2025-02-11 09:25:38,927 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:38,927 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), None)
2025-02-11 09:25:38,929 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d2db0>, 'sort_order': 44, 'task_type': 'User Story', 'contributor_id': None, 'id': 48, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'parent_id': 61, 'story_points': 5, 'completed_date': None}
2025-02-11 09:25:38,930 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:38,930 INFO: [cached since 806.2s ago] {'pk_1': 6}
2025-02-11 09:25:38,932 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:38,933 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:38,933 INFO: Task ID 48 fetched with parent ID: 61
2025-02-11 09:25:38,934 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:38,934 INFO: [cached since 806.2s ago] {'pk_1': 61}
2025-02-11 09:25:38,934 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:38,935 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:25:38,935 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:38,935 INFO: [cached since 805.7s ago] {'pk_1': 5}
2025-02-11 09:25:38,936 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:38,937 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:38,937 INFO: Task with ID 48 fetched successfully.
2025-02-11 09:25:38,937 DEBUG: Fetched Task Data: {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.292389', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:25:38,937 INFO: Task details fetched successfully for Task ID 48.
2025-02-11 09:25:38,937 INFO: ROLLBACK
2025-02-11 09:25:38,938 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:38] "GET /api/tasks/48 HTTP/1.1" 200 -
2025-02-11 09:25:39,646 INFO: Fetching task details for Task ID 58.
2025-02-11 09:25:39,646 INFO: Fetching task with ID 58.
2025-02-11 09:25:39,647 INFO: BEGIN (implicit)
2025-02-11 09:25:39,648 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:39,648 INFO: [cached since 806.9s ago] {'pk_1': 58}
2025-02-11 09:25:39,649 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:39,649 DEBUG: Row (58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, None, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 295385), None)
2025-02-11 09:25:39,649 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d0e30>, 'sort_order': 46, 'task_type': 'Subtask', 'contributor_id': None, 'id': 58, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 295385), 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'parent_id': 48, 'story_points': 3, 'completed_date': None}
2025-02-11 09:25:39,650 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:39,650 INFO: [cached since 806.9s ago] {'pk_1': 6}
2025-02-11 09:25:39,650 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:39,651 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:39,651 INFO: Task ID 58 fetched with parent ID: 48
2025-02-11 09:25:39,651 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:39,652 INFO: [cached since 806.9s ago] {'pk_1': 48}
2025-02-11 09:25:39,652 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:39,653 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), None)
2025-02-11 09:25:39,653 INFO: Task with ID 58 fetched successfully.
2025-02-11 09:25:39,653 DEBUG: Fetched Task Data: {'id': 58, 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.295385', 'contributor_name': 'Unassigned', 'parent': {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.292389'}}
2025-02-11 09:25:39,653 INFO: Task details fetched successfully for Task ID 58.
2025-02-11 09:25:39,654 INFO: ROLLBACK
2025-02-11 09:25:39,654 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:39] "GET /api/tasks/58 HTTP/1.1" 200 -
2025-02-11 09:25:39,859 INFO: Fetching task details for Task ID 48.
2025-02-11 09:25:39,859 INFO: Fetching task with ID 48.
2025-02-11 09:25:39,860 INFO: BEGIN (implicit)
2025-02-11 09:25:39,860 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:39,860 INFO: [cached since 807.1s ago] {'pk_1': 48}
2025-02-11 09:25:39,863 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:39,863 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), None)
2025-02-11 09:25:39,864 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3650>, 'sort_order': 44, 'task_type': 'User Story', 'contributor_id': None, 'id': 48, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'parent_id': 61, 'story_points': 5, 'completed_date': None}
2025-02-11 09:25:39,865 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:39,865 INFO: [cached since 807.1s ago] {'pk_1': 6}
2025-02-11 09:25:39,866 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:39,866 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:39,867 INFO: Task ID 48 fetched with parent ID: 61
2025-02-11 09:25:39,867 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:39,867 INFO: [cached since 807.1s ago] {'pk_1': 61}
2025-02-11 09:25:39,868 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:39,868 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:25:39,869 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:39,869 INFO: [cached since 806.6s ago] {'pk_1': 5}
2025-02-11 09:25:39,869 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:39,870 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:39,870 INFO: Task with ID 48 fetched successfully.
2025-02-11 09:25:39,870 DEBUG: Fetched Task Data: {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.292389', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:25:39,870 INFO: Task details fetched successfully for Task ID 48.
2025-02-11 09:25:39,871 INFO: ROLLBACK
2025-02-11 09:25:39,871 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:39] "GET /api/tasks/48 HTTP/1.1" 200 -
2025-02-11 09:25:42,638 INFO: Assigning contributor to task ID 58
2025-02-11 09:25:42,638 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:25:42,638 INFO: Contributor ID received: 5
2025-02-11 09:25:42,639 INFO: BEGIN (implicit)
2025-02-11 09:25:42,640 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:42,640 INFO: [cached since 809.9s ago] {'pk_1': 58}
2025-02-11 09:25:42,641 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:42,641 DEBUG: Row (58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, None, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 295385), None)
2025-02-11 09:25:42,642 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:42,642 INFO: [cached since 358.6s ago] {'pk_1': 5}
2025-02-11 09:25:42,643 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:42,643 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:42,644 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:42,644 INFO: [cached since 358.6s ago] {'pk_1': 6}
2025-02-11 09:25:42,646 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:25:42,647 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:25:42,647 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:42,647 INFO: [cached since 358.6s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 42, 647533, tzinfo=datetime.timezone.utc), 'task_id': 58}
2025-02-11 09:25:42,648 INFO: COMMIT
2025-02-11 09:25:42,648 INFO: BEGIN (implicit)
2025-02-11 09:25:42,649 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:42,649 INFO: [cached since 358.6s ago] {'pk_1': 5}
2025-02-11 09:25:42,649 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:42,649 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:42,650 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:42,650 INFO: [cached since 358.6s ago] {'pk_1': 58}
2025-02-11 09:25:42,650 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:42,650 DEBUG: Row (58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 25, 42, 647533), None)
2025-02-11 09:25:42,650 INFO: ROLLBACK
2025-02-11 09:25:42,651 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:42] "POST /tasks/58/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:25:43,556 INFO: save_task triggered
2025-02-11 09:25:43,556 INFO: Payload received: {'title': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_id': '58', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 3, 'parent_id': 48, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:43,556 INFO: Update request for Task ID: 58
2025-02-11 09:25:43,557 INFO: BEGIN (implicit)
2025-02-11 09:25:43,558 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:43,558 INFO: [cached since 810.8s ago] {'pk_1': '58'}
2025-02-11 09:25:43,559 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:43,559 DEBUG: Row (58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 25, 42, 647533), None)
2025-02-11 09:25:43,559 DEBUG: Received update payload for Task ID 58: {'title': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_id': '58', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 3, 'parent_id': 48, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:43,560 DEBUG: Validating parent_id change for Task 58: 48
2025-02-11 09:25:43,560 INFO: Checking circular reference for Task 58 with Parent ID: 48
2025-02-11 09:25:43,561 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:43,561 INFO: [cached since 221.3s ago] {'id_1': 48, 'param_1': 1}
2025-02-11 09:25:43,562 DEBUG: Col ('task_parent_id',)
2025-02-11 09:25:43,562 DEBUG: Row (61,)
2025-02-11 09:25:43,563 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:43,563 INFO: [cached since 221.3s ago] {'id_1': 61, 'param_1': 1}
2025-02-11 09:25:43,564 DEBUG: Col ('task_parent_id',)
2025-02-11 09:25:43,564 DEBUG: Row (None,)
2025-02-11 09:25:43,564 INFO: Circular reference check passed.
2025-02-11 09:25:43,565 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:43,565 INFO: [cached since 221.3s ago] {'id_1': 48, 'param_1': 1}
2025-02-11 09:25:43,566 DEBUG: Col ('task_task_type',)
2025-02-11 09:25:43,566 DEBUG: Row ('User Story',)
2025-02-11 09:25:43,566 DEBUG: Validating hierarchy: Task 58, Parent Type: User Story
2025-02-11 09:25:43,566 INFO: Hierarchy validation passed for Task 58.
2025-02-11 09:25:43,566 INFO: Validation passed for parent_id: 48
2025-02-11 09:25:43,567 DEBUG: Validating task_type change for Task 58: Subtask
2025-02-11 09:25:43,568 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:43,568 INFO: [cached since 221.3s ago] {'id_1': 48, 'param_1': 1}
2025-02-11 09:25:43,568 DEBUG: Col ('task_task_type',)
2025-02-11 09:25:43,569 DEBUG: Row ('User Story',)
2025-02-11 09:25:43,569 DEBUG: Validating hierarchy: Task Type: Subtask, Parent Type: User Story
2025-02-11 09:25:43,569 INFO: Hierarchy validation passed for Task 58.
2025-02-11 09:25:43,569 INFO: Validation passed for task_type: Subtask
2025-02-11 09:25:43,569 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:43,569 INFO: [cached since 221.3s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), 'task_id': 58}
2025-02-11 09:25:43,570 INFO: COMMIT
2025-02-11 09:25:43,570 INFO: Task ID 58 updated successfully.
2025-02-11 09:25:43,571 INFO: BEGIN (implicit)
2025-02-11 09:25:43,571 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:43,571 INFO: [cached since 359.5s ago] {'pk_1': 58}
2025-02-11 09:25:43,571 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:43,572 DEBUG: Row (58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None)
2025-02-11 09:25:43,572 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:43,572 INFO: [cached since 810.3s ago] {'pk_1': 5}
2025-02-11 09:25:43,573 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:43,573 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:43,573 INFO: ROLLBACK
2025-02-11 09:25:43,573 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:43] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:25:45,659 INFO: Fetching task details for Task ID 57.
2025-02-11 09:25:45,659 INFO: Fetching task with ID 57.
2025-02-11 09:25:45,660 INFO: BEGIN (implicit)
2025-02-11 09:25:45,662 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:45,662 INFO: [cached since 812.9s ago] {'pk_1': 57}
2025-02-11 09:25:45,666 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:45,667 DEBUG: Row (57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 294045), None)
2025-02-11 09:25:45,667 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b6ebef0>, 'sort_order': 45, 'task_type': 'Subtask', 'contributor_id': None, 'id': 57, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 294045), 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'parent_id': 48, 'story_points': 2, 'completed_date': None}
2025-02-11 09:25:45,668 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:45,668 INFO: [cached since 812.9s ago] {'pk_1': 6}
2025-02-11 09:25:45,668 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:45,669 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:45,669 INFO: Task ID 57 fetched with parent ID: 48
2025-02-11 09:25:45,669 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:45,669 INFO: [cached since 812.9s ago] {'pk_1': 48}
2025-02-11 09:25:45,670 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:45,670 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), None)
2025-02-11 09:25:45,670 INFO: Task with ID 57 fetched successfully.
2025-02-11 09:25:45,671 DEBUG: Fetched Task Data: {'id': 57, 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.294045', 'contributor_name': 'Unassigned', 'parent': {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.292389'}}
2025-02-11 09:25:45,671 INFO: Task details fetched successfully for Task ID 57.
2025-02-11 09:25:45,671 INFO: ROLLBACK
2025-02-11 09:25:45,672 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:45] "GET /api/tasks/57 HTTP/1.1" 200 -
2025-02-11 09:25:46,179 INFO: Fetching task details for Task ID 48.
2025-02-11 09:25:46,179 INFO: Fetching task with ID 48.
2025-02-11 09:25:46,180 INFO: BEGIN (implicit)
2025-02-11 09:25:46,180 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:46,180 INFO: [cached since 813.4s ago] {'pk_1': 48}
2025-02-11 09:25:46,182 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:46,182 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), None)
2025-02-11 09:25:46,183 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b6e98b0>, 'sort_order': 44, 'task_type': 'User Story', 'contributor_id': None, 'id': 48, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'parent_id': 61, 'story_points': 5, 'completed_date': None}
2025-02-11 09:25:46,183 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:46,183 INFO: [cached since 813.4s ago] {'pk_1': 6}
2025-02-11 09:25:46,183 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:46,183 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:46,183 INFO: Task ID 48 fetched with parent ID: 61
2025-02-11 09:25:46,183 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:46,184 INFO: [cached since 813.4s ago] {'pk_1': 61}
2025-02-11 09:25:46,184 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:46,184 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:25:46,184 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:46,184 INFO: [cached since 812.9s ago] {'pk_1': 5}
2025-02-11 09:25:46,185 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:46,185 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:46,185 INFO: Task with ID 48 fetched successfully.
2025-02-11 09:25:46,185 DEBUG: Fetched Task Data: {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.292389', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:25:46,185 INFO: Task details fetched successfully for Task ID 48.
2025-02-11 09:25:46,185 INFO: ROLLBACK
2025-02-11 09:25:46,186 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:46] "GET /api/tasks/48 HTTP/1.1" 200 -
2025-02-11 09:25:46,891 INFO: Fetching task details for Task ID 57.
2025-02-11 09:25:46,891 INFO: Fetching task with ID 57.
2025-02-11 09:25:46,892 INFO: BEGIN (implicit)
2025-02-11 09:25:46,892 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:46,892 INFO: [cached since 814.1s ago] {'pk_1': 57}
2025-02-11 09:25:46,893 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:46,893 DEBUG: Row (57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 294045), None)
2025-02-11 09:25:46,894 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3470>, 'sort_order': 45, 'task_type': 'Subtask', 'contributor_id': None, 'id': 57, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 294045), 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'parent_id': 48, 'story_points': 2, 'completed_date': None}
2025-02-11 09:25:46,894 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:46,895 INFO: [cached since 814.1s ago] {'pk_1': 6}
2025-02-11 09:25:46,896 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:46,896 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:46,896 INFO: Task ID 57 fetched with parent ID: 48
2025-02-11 09:25:46,897 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:46,897 INFO: [cached since 814.1s ago] {'pk_1': 48}
2025-02-11 09:25:46,898 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:46,898 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), None)
2025-02-11 09:25:46,898 INFO: Task with ID 57 fetched successfully.
2025-02-11 09:25:46,899 DEBUG: Fetched Task Data: {'id': 57, 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.294045', 'contributor_name': 'Unassigned', 'parent': {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.292389'}}
2025-02-11 09:25:46,899 INFO: Task details fetched successfully for Task ID 57.
2025-02-11 09:25:46,899 INFO: ROLLBACK
2025-02-11 09:25:46,900 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:46] "GET /api/tasks/57 HTTP/1.1" 200 -
2025-02-11 09:25:47,103 INFO: Fetching task details for Task ID 48.
2025-02-11 09:25:47,103 INFO: Fetching task with ID 48.
2025-02-11 09:25:47,104 INFO: BEGIN (implicit)
2025-02-11 09:25:47,105 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:47,105 INFO: [cached since 814.4s ago] {'pk_1': 48}
2025-02-11 09:25:47,106 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:47,106 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), None)
2025-02-11 09:25:47,106 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3e30>, 'sort_order': 44, 'task_type': 'User Story', 'contributor_id': None, 'id': 48, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'parent_id': 61, 'story_points': 5, 'completed_date': None}
2025-02-11 09:25:47,107 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:47,107 INFO: [cached since 814.4s ago] {'pk_1': 6}
2025-02-11 09:25:47,108 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:47,108 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:47,108 INFO: Task ID 48 fetched with parent ID: 61
2025-02-11 09:25:47,109 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:47,109 INFO: [cached since 814.4s ago] {'pk_1': 61}
2025-02-11 09:25:47,109 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:47,110 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:25:47,111 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:47,111 INFO: [cached since 813.8s ago] {'pk_1': 5}
2025-02-11 09:25:47,112 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:47,113 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:47,113 INFO: Task with ID 48 fetched successfully.
2025-02-11 09:25:47,114 DEBUG: Fetched Task Data: {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.292389', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:25:47,114 INFO: Task details fetched successfully for Task ID 48.
2025-02-11 09:25:47,114 INFO: ROLLBACK
2025-02-11 09:25:47,115 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:47] "GET /api/tasks/48 HTTP/1.1" 200 -
2025-02-11 09:25:50,321 INFO: Assigning contributor to task ID 57
2025-02-11 09:25:50,321 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:25:50,321 INFO: Contributor ID received: 5
2025-02-11 09:25:50,322 INFO: BEGIN (implicit)
2025-02-11 09:25:50,323 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:50,323 INFO: [cached since 817.6s ago] {'pk_1': 57}
2025-02-11 09:25:50,324 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:50,324 DEBUG: Row (57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 294045), None)
2025-02-11 09:25:50,325 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:50,325 INFO: [cached since 366.3s ago] {'pk_1': 5}
2025-02-11 09:25:50,326 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:50,326 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:50,327 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:50,327 INFO: [cached since 366.3s ago] {'pk_1': 6}
2025-02-11 09:25:50,328 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:25:50,329 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:25:50,331 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:50,331 INFO: [cached since 366.3s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 50, 331152, tzinfo=datetime.timezone.utc), 'task_id': 57}
2025-02-11 09:25:50,333 INFO: COMMIT
2025-02-11 09:25:50,334 INFO: BEGIN (implicit)
2025-02-11 09:25:50,334 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:50,334 INFO: [cached since 366.3s ago] {'pk_1': 5}
2025-02-11 09:25:50,335 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:50,335 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:50,335 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:50,335 INFO: [cached since 366.3s ago] {'pk_1': 57}
2025-02-11 09:25:50,335 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:50,335 DEBUG: Row (57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 25, 50, 331152), None)
2025-02-11 09:25:50,336 INFO: ROLLBACK
2025-02-11 09:25:50,336 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:50] "POST /tasks/57/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:25:51,304 INFO: save_task triggered
2025-02-11 09:25:51,305 INFO: Payload received: {'title': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_id': '57', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 2, 'parent_id': 48, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:51,305 INFO: Update request for Task ID: 57
2025-02-11 09:25:51,305 INFO: BEGIN (implicit)
2025-02-11 09:25:51,305 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:51,305 INFO: [cached since 818.6s ago] {'pk_1': '57'}
2025-02-11 09:25:51,306 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:51,307 DEBUG: Row (57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 25, 50, 331152), None)
2025-02-11 09:25:51,307 DEBUG: Received update payload for Task ID 57: {'title': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_id': '57', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 2, 'parent_id': 48, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:51,307 DEBUG: Validating parent_id change for Task 57: 48
2025-02-11 09:25:51,307 INFO: Checking circular reference for Task 57 with Parent ID: 48
2025-02-11 09:25:51,307 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:51,308 INFO: [cached since 229s ago] {'id_1': 48, 'param_1': 1}
2025-02-11 09:25:51,308 DEBUG: Col ('task_parent_id',)
2025-02-11 09:25:51,308 DEBUG: Row (61,)
2025-02-11 09:25:51,308 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:51,308 INFO: [cached since 229s ago] {'id_1': 61, 'param_1': 1}
2025-02-11 09:25:51,308 DEBUG: Col ('task_parent_id',)
2025-02-11 09:25:51,308 DEBUG: Row (None,)
2025-02-11 09:25:51,308 INFO: Circular reference check passed.
2025-02-11 09:25:51,309 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:51,309 INFO: [cached since 229s ago] {'id_1': 48, 'param_1': 1}
2025-02-11 09:25:51,309 DEBUG: Col ('task_task_type',)
2025-02-11 09:25:51,309 DEBUG: Row ('User Story',)
2025-02-11 09:25:51,309 DEBUG: Validating hierarchy: Task 57, Parent Type: User Story
2025-02-11 09:25:51,309 INFO: Hierarchy validation passed for Task 57.
2025-02-11 09:25:51,309 INFO: Validation passed for parent_id: 48
2025-02-11 09:25:51,309 DEBUG: Validating task_type change for Task 57: Subtask
2025-02-11 09:25:51,309 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:51,309 INFO: [cached since 229s ago] {'id_1': 48, 'param_1': 1}
2025-02-11 09:25:51,310 DEBUG: Col ('task_task_type',)
2025-02-11 09:25:51,310 DEBUG: Row ('User Story',)
2025-02-11 09:25:51,310 DEBUG: Validating hierarchy: Task Type: Subtask, Parent Type: User Story
2025-02-11 09:25:51,310 INFO: Hierarchy validation passed for Task 57.
2025-02-11 09:25:51,310 INFO: Validation passed for task_type: Subtask
2025-02-11 09:25:51,310 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:51,310 INFO: [cached since 229s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), 'task_id': 57}
2025-02-11 09:25:51,310 INFO: COMMIT
2025-02-11 09:25:51,311 INFO: Task ID 57 updated successfully.
2025-02-11 09:25:51,311 INFO: BEGIN (implicit)
2025-02-11 09:25:51,311 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:51,311 INFO: [cached since 367.3s ago] {'pk_1': 57}
2025-02-11 09:25:51,312 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:51,312 DEBUG: Row (57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None)
2025-02-11 09:25:51,312 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:51,312 INFO: [cached since 818s ago] {'pk_1': 5}
2025-02-11 09:25:51,312 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:51,312 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:51,313 INFO: ROLLBACK
2025-02-11 09:25:51,313 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:51] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:25:53,372 INFO: Fetching task details for Task ID 48.
2025-02-11 09:25:53,373 INFO: Fetching task with ID 48.
2025-02-11 09:25:53,373 INFO: BEGIN (implicit)
2025-02-11 09:25:53,374 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:53,374 INFO: [cached since 820.6s ago] {'pk_1': 48}
2025-02-11 09:25:53,375 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:53,375 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), None)
2025-02-11 09:25:53,375 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b6ebef0>, 'sort_order': 44, 'task_type': 'User Story', 'contributor_id': None, 'id': 48, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'parent_id': 61, 'story_points': 5, 'completed_date': None}
2025-02-11 09:25:53,376 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:53,376 INFO: [cached since 820.6s ago] {'pk_1': 6}
2025-02-11 09:25:53,376 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:53,377 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:53,377 INFO: Task ID 48 fetched with parent ID: 61
2025-02-11 09:25:53,378 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:53,378 INFO: [cached since 820.6s ago] {'pk_1': 61}
2025-02-11 09:25:53,379 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:53,379 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:25:53,380 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:53,380 INFO: [cached since 820.1s ago] {'pk_1': 5}
2025-02-11 09:25:53,381 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:53,381 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:53,382 INFO: Task with ID 48 fetched successfully.
2025-02-11 09:25:53,382 DEBUG: Fetched Task Data: {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.292389', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:25:53,382 INFO: Task details fetched successfully for Task ID 48.
2025-02-11 09:25:53,382 INFO: ROLLBACK
2025-02-11 09:25:53,383 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:53] "GET /api/tasks/48 HTTP/1.1" 200 -
2025-02-11 09:25:53,889 INFO: Fetching task details for Task ID 61.
2025-02-11 09:25:53,889 INFO: Fetching task with ID 61.
2025-02-11 09:25:53,890 INFO: BEGIN (implicit)
2025-02-11 09:25:53,891 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:53,891 INFO: [cached since 821.1s ago] {'pk_1': 61}
2025-02-11 09:25:53,892 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:53,892 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:25:53,893 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3e30>, 'sort_order': 35, 'task_type': 'Epic', 'contributor_id': 5, 'id': 61, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), 'name': 'Parent task assignment', 'description': '', 'parent_id': None, 'story_points': 0, 'completed_date': None}
2025-02-11 09:25:53,893 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:53,893 INFO: [cached since 821.1s ago] {'pk_1': 6}
2025-02-11 09:25:53,894 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:53,895 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:53,896 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:53,896 INFO: [cached since 820.6s ago] {'pk_1': 5}
2025-02-11 09:25:53,897 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:53,897 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:53,898 INFO: Task ID 61 fetched with parent ID: None
2025-02-11 09:25:53,898 INFO: Task with ID 61 fetched successfully.
2025-02-11 09:25:53,898 DEBUG: Fetched Task Data: {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012', 'contributor_name': 'Fredrik Cederborg', 'parent': None}
2025-02-11 09:25:53,898 INFO: Task details fetched successfully for Task ID 61.
2025-02-11 09:25:53,898 INFO: ROLLBACK
2025-02-11 09:25:53,899 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:53] "GET /api/tasks/61 HTTP/1.1" 200 -
2025-02-11 09:25:54,609 INFO: Fetching task details for Task ID 48.
2025-02-11 09:25:54,609 INFO: Fetching task with ID 48.
2025-02-11 09:25:54,610 INFO: BEGIN (implicit)
2025-02-11 09:25:54,610 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:54,610 INFO: [cached since 821.9s ago] {'pk_1': 48}
2025-02-11 09:25:54,612 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:54,612 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), None)
2025-02-11 09:25:54,613 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3710>, 'sort_order': 44, 'task_type': 'User Story', 'contributor_id': None, 'id': 48, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'parent_id': 61, 'story_points': 5, 'completed_date': None}
2025-02-11 09:25:54,613 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:54,614 INFO: [cached since 821.9s ago] {'pk_1': 6}
2025-02-11 09:25:54,615 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:54,615 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:54,616 INFO: Task ID 48 fetched with parent ID: 61
2025-02-11 09:25:54,616 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:54,616 INFO: [cached since 821.9s ago] {'pk_1': 61}
2025-02-11 09:25:54,617 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:54,617 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:25:54,618 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:54,618 INFO: [cached since 821.3s ago] {'pk_1': 5}
2025-02-11 09:25:54,619 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:54,619 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:54,619 INFO: Task with ID 48 fetched successfully.
2025-02-11 09:25:54,619 DEBUG: Fetched Task Data: {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.292389', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:25:54,620 INFO: Task details fetched successfully for Task ID 48.
2025-02-11 09:25:54,620 INFO: ROLLBACK
2025-02-11 09:25:54,621 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:54] "GET /api/tasks/48 HTTP/1.1" 200 -
2025-02-11 09:25:54,825 INFO: Fetching task details for Task ID 61.
2025-02-11 09:25:54,826 INFO: Fetching task with ID 61.
2025-02-11 09:25:54,826 INFO: BEGIN (implicit)
2025-02-11 09:25:54,827 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:54,827 INFO: [cached since 822.1s ago] {'pk_1': 61}
2025-02-11 09:25:54,828 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:54,829 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:25:54,829 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d3590>, 'sort_order': 35, 'task_type': 'Epic', 'contributor_id': 5, 'id': 61, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), 'name': 'Parent task assignment', 'description': '', 'parent_id': None, 'story_points': 0, 'completed_date': None}
2025-02-11 09:25:54,830 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:54,830 INFO: [cached since 822.1s ago] {'pk_1': 6}
2025-02-11 09:25:54,830 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:25:54,831 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:25:54,832 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:54,832 INFO: [cached since 821.6s ago] {'pk_1': 5}
2025-02-11 09:25:54,833 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:54,833 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:54,833 INFO: Task ID 61 fetched with parent ID: None
2025-02-11 09:25:54,833 INFO: Task with ID 61 fetched successfully.
2025-02-11 09:25:54,834 DEBUG: Fetched Task Data: {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012', 'contributor_name': 'Fredrik Cederborg', 'parent': None}
2025-02-11 09:25:54,834 INFO: Task details fetched successfully for Task ID 61.
2025-02-11 09:25:54,834 INFO: ROLLBACK
2025-02-11 09:25:54,835 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:54] "GET /api/tasks/61 HTTP/1.1" 200 -
2025-02-11 09:25:57,821 INFO: Assigning contributor to task ID 48
2025-02-11 09:25:57,822 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:25:57,822 INFO: Contributor ID received: 5
2025-02-11 09:25:57,822 INFO: BEGIN (implicit)
2025-02-11 09:25:57,823 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:57,823 INFO: [cached since 825.1s ago] {'pk_1': 48}
2025-02-11 09:25:57,824 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:57,824 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, None, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 292389), None)
2025-02-11 09:25:57,825 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:57,825 INFO: [cached since 373.8s ago] {'pk_1': 5}
2025-02-11 09:25:57,826 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:57,826 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:57,827 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:25:57,827 INFO: [cached since 373.8s ago] {'pk_1': 6}
2025-02-11 09:25:57,828 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:25:57,829 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:25:57,830 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:57,830 INFO: [cached since 373.8s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 57, 829977, tzinfo=datetime.timezone.utc), 'task_id': 48}
2025-02-11 09:25:57,831 INFO: COMMIT
2025-02-11 09:25:57,832 INFO: BEGIN (implicit)
2025-02-11 09:25:57,833 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:57,833 INFO: [cached since 373.8s ago] {'pk_1': 5}
2025-02-11 09:25:57,834 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:57,834 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:57,835 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:57,835 INFO: [cached since 373.8s ago] {'pk_1': 48}
2025-02-11 09:25:57,835 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:57,836 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 9, 25, 57, 829977), None)
2025-02-11 09:25:57,836 INFO: ROLLBACK
2025-02-11 09:25:57,837 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:57] "POST /tasks/48/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:25:59,639 INFO: save_task triggered
2025-02-11 09:25:59,639 INFO: Payload received: {'title': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_id': '48', 'project_id': '6', 'task_type': 'User Story', 'story_points': 5, 'parent_id': 61, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:59,640 INFO: Update request for Task ID: 48
2025-02-11 09:25:59,640 INFO: BEGIN (implicit)
2025-02-11 09:25:59,641 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:59,641 INFO: [cached since 826.9s ago] {'pk_1': '48'}
2025-02-11 09:25:59,642 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:59,642 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 9, 25, 57, 829977), None)
2025-02-11 09:25:59,642 DEBUG: Received update payload for Task ID 48: {'title': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_id': '48', 'project_id': '6', 'task_type': 'User Story', 'story_points': 5, 'parent_id': 61, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:25:59,643 DEBUG: Validating parent_id change for Task 48: 61
2025-02-11 09:25:59,643 INFO: Checking circular reference for Task 48 with Parent ID: 61
2025-02-11 09:25:59,644 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:59,644 INFO: [cached since 237.4s ago] {'id_1': 61, 'param_1': 1}
2025-02-11 09:25:59,645 DEBUG: Col ('task_parent_id',)
2025-02-11 09:25:59,646 DEBUG: Row (None,)
2025-02-11 09:25:59,646 INFO: Circular reference check passed.
2025-02-11 09:25:59,647 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:59,647 INFO: [cached since 237.4s ago] {'id_1': 61, 'param_1': 1}
2025-02-11 09:25:59,648 DEBUG: Col ('task_task_type',)
2025-02-11 09:25:59,648 DEBUG: Row ('Epic',)
2025-02-11 09:25:59,648 DEBUG: Validating hierarchy: Task 48, Parent Type: Epic
2025-02-11 09:25:59,648 INFO: Hierarchy validation passed for Task 48.
2025-02-11 09:25:59,648 INFO: Validation passed for parent_id: 61
2025-02-11 09:25:59,649 DEBUG: Validating task_type change for Task 48: User Story
2025-02-11 09:25:59,650 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:25:59,650 INFO: [cached since 237.4s ago] {'id_1': 61, 'param_1': 1}
2025-02-11 09:25:59,650 DEBUG: Col ('task_task_type',)
2025-02-11 09:25:59,651 DEBUG: Row ('Epic',)
2025-02-11 09:25:59,651 DEBUG: Validating hierarchy: Task Type: User Story, Parent Type: Epic
2025-02-11 09:25:59,651 INFO: Hierarchy validation passed for Task 48.
2025-02-11 09:25:59,651 INFO: Validation passed for task_type: User Story
2025-02-11 09:25:59,652 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:25:59,652 INFO: [cached since 237.4s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), 'task_id': 48}
2025-02-11 09:25:59,653 INFO: COMMIT
2025-02-11 09:25:59,654 INFO: Task ID 48 updated successfully.
2025-02-11 09:25:59,654 INFO: BEGIN (implicit)
2025-02-11 09:25:59,655 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:25:59,655 INFO: [cached since 375.6s ago] {'pk_1': 48}
2025-02-11 09:25:59,656 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:25:59,656 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None)
2025-02-11 09:25:59,659 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:25:59,659 INFO: [cached since 826.4s ago] {'pk_1': 5}
2025-02-11 09:25:59,659 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:25:59,659 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:25:59,660 INFO: ROLLBACK
2025-02-11 09:25:59,660 INFO: 127.0.0.1 - - [11/Feb/2025 09:25:59] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:26:03,189 INFO: Fetching task details for Task ID 55.
2025-02-11 09:26:03,190 INFO: Fetching task with ID 55.
2025-02-11 09:26:03,190 INFO: BEGIN (implicit)
2025-02-11 09:26:03,190 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:03,191 INFO: [cached since 830.4s ago] {'pk_1': 55}
2025-02-11 09:26:03,191 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:03,192 DEBUG: Row (55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, None, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 290910), None)
2025-02-11 09:26:03,192 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b6e92b0>, 'sort_order': 43, 'task_type': 'Subtask', 'contributor_id': None, 'id': 55, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 290910), 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'parent_id': 47, 'story_points': 8, 'completed_date': None}
2025-02-11 09:26:03,193 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:03,193 INFO: [cached since 830.4s ago] {'pk_1': 6}
2025-02-11 09:26:03,193 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:03,194 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:03,194 INFO: Task ID 55 fetched with parent ID: 47
2025-02-11 09:26:03,195 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:03,195 INFO: [cached since 830.4s ago] {'pk_1': 47}
2025-02-11 09:26:03,196 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:03,196 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, None, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), None)
2025-02-11 09:26:03,196 INFO: Task with ID 55 fetched successfully.
2025-02-11 09:26:03,197 DEBUG: Fetched Task Data: {'id': 55, 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.290910', 'contributor_name': 'Unassigned', 'parent': {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.287641'}}
2025-02-11 09:26:03,197 INFO: Task details fetched successfully for Task ID 55.
2025-02-11 09:26:03,197 INFO: ROLLBACK
2025-02-11 09:26:03,198 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:03] "GET /api/tasks/55 HTTP/1.1" 200 -
2025-02-11 09:26:03,708 INFO: Fetching task details for Task ID 47.
2025-02-11 09:26:03,708 INFO: Fetching task with ID 47.
2025-02-11 09:26:03,709 INFO: BEGIN (implicit)
2025-02-11 09:26:03,709 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:03,709 INFO: [cached since 831s ago] {'pk_1': 47}
2025-02-11 09:26:03,711 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:03,712 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, None, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), None)
2025-02-11 09:26:03,713 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b6e9af0>, 'sort_order': 41, 'task_type': 'User Story', 'contributor_id': None, 'id': 47, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'parent_id': 61, 'story_points': 13, 'completed_date': None}
2025-02-11 09:26:03,715 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:03,715 INFO: [cached since 831s ago] {'pk_1': 6}
2025-02-11 09:26:03,716 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:03,716 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:03,717 INFO: Task ID 47 fetched with parent ID: 61
2025-02-11 09:26:03,717 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:03,717 INFO: [cached since 831s ago] {'pk_1': 61}
2025-02-11 09:26:03,717 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:03,717 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:26:03,718 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:03,718 INFO: [cached since 830.4s ago] {'pk_1': 5}
2025-02-11 09:26:03,718 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:03,718 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:03,718 INFO: Task with ID 47 fetched successfully.
2025-02-11 09:26:03,718 DEBUG: Fetched Task Data: {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.287641', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:26:03,718 INFO: Task details fetched successfully for Task ID 47.
2025-02-11 09:26:03,718 INFO: ROLLBACK
2025-02-11 09:26:03,719 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:03] "GET /api/tasks/47 HTTP/1.1" 200 -
2025-02-11 09:26:04,425 INFO: Fetching task details for Task ID 55.
2025-02-11 09:26:04,425 INFO: Fetching task with ID 55.
2025-02-11 09:26:04,426 INFO: BEGIN (implicit)
2025-02-11 09:26:04,426 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:04,426 INFO: [cached since 831.7s ago] {'pk_1': 55}
2025-02-11 09:26:04,428 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:04,429 DEBUG: Row (55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, None, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 290910), None)
2025-02-11 09:26:04,429 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b6ebdd0>, 'sort_order': 43, 'task_type': 'Subtask', 'contributor_id': None, 'id': 55, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 290910), 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'parent_id': 47, 'story_points': 8, 'completed_date': None}
2025-02-11 09:26:04,430 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:04,430 INFO: [cached since 831.7s ago] {'pk_1': 6}
2025-02-11 09:26:04,431 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:04,432 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:04,432 INFO: Task ID 55 fetched with parent ID: 47
2025-02-11 09:26:04,432 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:04,432 INFO: [cached since 831.7s ago] {'pk_1': 47}
2025-02-11 09:26:04,433 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:04,433 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, None, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), None)
2025-02-11 09:26:04,434 INFO: Task with ID 55 fetched successfully.
2025-02-11 09:26:04,434 DEBUG: Fetched Task Data: {'id': 55, 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.290910', 'contributor_name': 'Unassigned', 'parent': {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.287641'}}
2025-02-11 09:26:04,434 INFO: Task details fetched successfully for Task ID 55.
2025-02-11 09:26:04,434 INFO: ROLLBACK
2025-02-11 09:26:04,435 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:04] "GET /api/tasks/55 HTTP/1.1" 200 -
2025-02-11 09:26:04,641 INFO: Fetching task details for Task ID 47.
2025-02-11 09:26:04,641 INFO: Fetching task with ID 47.
2025-02-11 09:26:04,642 INFO: BEGIN (implicit)
2025-02-11 09:26:04,642 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:04,642 INFO: [cached since 831.9s ago] {'pk_1': 47}
2025-02-11 09:26:04,643 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:04,643 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, None, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), None)
2025-02-11 09:26:04,644 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b6eaa50>, 'sort_order': 41, 'task_type': 'User Story', 'contributor_id': None, 'id': 47, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'parent_id': 61, 'story_points': 13, 'completed_date': None}
2025-02-11 09:26:04,645 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:04,646 INFO: [cached since 831.9s ago] {'pk_1': 6}
2025-02-11 09:26:04,647 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:04,647 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:04,647 INFO: Task ID 47 fetched with parent ID: 61
2025-02-11 09:26:04,648 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:04,648 INFO: [cached since 831.9s ago] {'pk_1': 61}
2025-02-11 09:26:04,649 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:04,649 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:26:04,650 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:04,650 INFO: [cached since 831.4s ago] {'pk_1': 5}
2025-02-11 09:26:04,650 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:04,650 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:04,651 INFO: Task with ID 47 fetched successfully.
2025-02-11 09:26:04,651 DEBUG: Fetched Task Data: {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.287641', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:26:04,651 INFO: Task details fetched successfully for Task ID 47.
2025-02-11 09:26:04,651 INFO: ROLLBACK
2025-02-11 09:26:04,652 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:04] "GET /api/tasks/47 HTTP/1.1" 200 -
2025-02-11 09:26:07,037 INFO: Assigning contributor to task ID 55
2025-02-11 09:26:07,038 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:26:07,038 INFO: Contributor ID received: 5
2025-02-11 09:26:07,039 INFO: BEGIN (implicit)
2025-02-11 09:26:07,039 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:07,040 INFO: [cached since 834.3s ago] {'pk_1': 55}
2025-02-11 09:26:07,041 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:07,041 DEBUG: Row (55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, None, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 290910), None)
2025-02-11 09:26:07,042 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:07,042 INFO: [cached since 383s ago] {'pk_1': 5}
2025-02-11 09:26:07,043 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:07,043 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:07,044 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:07,045 INFO: [cached since 383s ago] {'pk_1': 6}
2025-02-11 09:26:07,047 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:26:07,048 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:26:07,049 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:26:07,049 INFO: [cached since 383s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 26, 7, 49044, tzinfo=datetime.timezone.utc), 'task_id': 55}
2025-02-11 09:26:07,050 INFO: COMMIT
2025-02-11 09:26:07,051 INFO: BEGIN (implicit)
2025-02-11 09:26:07,052 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:07,052 INFO: [cached since 383s ago] {'pk_1': 5}
2025-02-11 09:26:07,053 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:07,053 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:07,054 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:07,054 INFO: [cached since 383s ago] {'pk_1': 55}
2025-02-11 09:26:07,055 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:07,056 DEBUG: Row (55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 26, 7, 49044), None)
2025-02-11 09:26:07,056 INFO: ROLLBACK
2025-02-11 09:26:07,057 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:07] "POST /tasks/55/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:26:08,087 INFO: save_task triggered
2025-02-11 09:26:08,088 INFO: Payload received: {'title': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_id': '55', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 8, 'parent_id': 47, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:26:08,088 INFO: Update request for Task ID: 55
2025-02-11 09:26:08,089 INFO: BEGIN (implicit)
2025-02-11 09:26:08,089 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:08,090 INFO: [cached since 835.3s ago] {'pk_1': '55'}
2025-02-11 09:26:08,091 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:08,091 DEBUG: Row (55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 26, 7, 49044), None)
2025-02-11 09:26:08,092 DEBUG: Received update payload for Task ID 55: {'title': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_id': '55', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 8, 'parent_id': 47, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:26:08,092 DEBUG: Validating parent_id change for Task 55: 47
2025-02-11 09:26:08,092 INFO: Checking circular reference for Task 55 with Parent ID: 47
2025-02-11 09:26:08,093 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:26:08,093 INFO: [cached since 245.8s ago] {'id_1': 47, 'param_1': 1}
2025-02-11 09:26:08,095 DEBUG: Col ('task_parent_id',)
2025-02-11 09:26:08,095 DEBUG: Row (61,)
2025-02-11 09:26:08,096 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:26:08,096 INFO: [cached since 245.8s ago] {'id_1': 61, 'param_1': 1}
2025-02-11 09:26:08,097 DEBUG: Col ('task_parent_id',)
2025-02-11 09:26:08,097 DEBUG: Row (None,)
2025-02-11 09:26:08,097 INFO: Circular reference check passed.
2025-02-11 09:26:08,097 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:26:08,097 INFO: [cached since 245.8s ago] {'id_1': 47, 'param_1': 1}
2025-02-11 09:26:08,098 DEBUG: Col ('task_task_type',)
2025-02-11 09:26:08,098 DEBUG: Row ('User Story',)
2025-02-11 09:26:08,098 DEBUG: Validating hierarchy: Task 55, Parent Type: User Story
2025-02-11 09:26:08,098 INFO: Hierarchy validation passed for Task 55.
2025-02-11 09:26:08,098 INFO: Validation passed for parent_id: 47
2025-02-11 09:26:08,098 DEBUG: Validating task_type change for Task 55: Subtask
2025-02-11 09:26:08,098 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:26:08,098 INFO: [cached since 245.8s ago] {'id_1': 47, 'param_1': 1}
2025-02-11 09:26:08,099 DEBUG: Col ('task_task_type',)
2025-02-11 09:26:08,099 DEBUG: Row ('User Story',)
2025-02-11 09:26:08,099 DEBUG: Validating hierarchy: Task Type: Subtask, Parent Type: User Story
2025-02-11 09:26:08,099 INFO: Hierarchy validation passed for Task 55.
2025-02-11 09:26:08,099 INFO: Validation passed for task_type: Subtask
2025-02-11 09:26:08,099 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:26:08,099 INFO: [cached since 245.8s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), 'task_id': 55}
2025-02-11 09:26:08,099 INFO: COMMIT
2025-02-11 09:26:08,100 INFO: Task ID 55 updated successfully.
2025-02-11 09:26:08,100 INFO: BEGIN (implicit)
2025-02-11 09:26:08,100 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:08,100 INFO: [cached since 384.1s ago] {'pk_1': 55}
2025-02-11 09:26:08,101 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:08,101 DEBUG: Row (55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None)
2025-02-11 09:26:08,101 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:08,101 INFO: [cached since 834.8s ago] {'pk_1': 5}
2025-02-11 09:26:08,101 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:08,101 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:08,102 INFO: ROLLBACK
2025-02-11 09:26:08,102 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:08] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:26:11,253 INFO: Fetching task details for Task ID 56.
2025-02-11 09:26:11,254 INFO: Fetching task with ID 56.
2025-02-11 09:26:11,255 INFO: BEGIN (implicit)
2025-02-11 09:26:11,255 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:11,255 INFO: [cached since 838.5s ago] {'pk_1': 56}
2025-02-11 09:26:11,256 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:11,256 DEBUG: Row (56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, None, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 289338), None)
2025-02-11 09:26:11,257 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b6e9550>, 'sort_order': 42, 'task_type': 'Subtask', 'contributor_id': None, 'id': 56, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 289338), 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'parent_id': 47, 'story_points': 8, 'completed_date': None}
2025-02-11 09:26:11,257 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:11,257 INFO: [cached since 838.5s ago] {'pk_1': 6}
2025-02-11 09:26:11,258 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:11,258 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:11,258 INFO: Task ID 56 fetched with parent ID: 47
2025-02-11 09:26:11,259 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:11,259 INFO: [cached since 838.5s ago] {'pk_1': 47}
2025-02-11 09:26:11,259 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:11,260 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, None, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), None)
2025-02-11 09:26:11,260 INFO: Task with ID 56 fetched successfully.
2025-02-11 09:26:11,260 DEBUG: Fetched Task Data: {'id': 56, 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.289338', 'contributor_name': 'Unassigned', 'parent': {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.287641'}}
2025-02-11 09:26:11,260 INFO: Task details fetched successfully for Task ID 56.
2025-02-11 09:26:11,261 INFO: ROLLBACK
2025-02-11 09:26:11,262 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:11] "GET /api/tasks/56 HTTP/1.1" 200 -
2025-02-11 09:26:11,770 INFO: Fetching task details for Task ID 47.
2025-02-11 09:26:11,770 INFO: Fetching task with ID 47.
2025-02-11 09:26:11,771 INFO: BEGIN (implicit)
2025-02-11 09:26:11,772 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:11,773 INFO: [cached since 839s ago] {'pk_1': 47}
2025-02-11 09:26:11,775 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:11,776 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, None, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), None)
2025-02-11 09:26:11,776 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b742f90>, 'sort_order': 41, 'task_type': 'User Story', 'contributor_id': None, 'id': 47, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'parent_id': 61, 'story_points': 13, 'completed_date': None}
2025-02-11 09:26:11,779 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:11,780 INFO: [cached since 839s ago] {'pk_1': 6}
2025-02-11 09:26:11,780 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:11,781 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:11,781 INFO: Task ID 47 fetched with parent ID: 61
2025-02-11 09:26:11,781 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:11,781 INFO: [cached since 839s ago] {'pk_1': 61}
2025-02-11 09:26:11,784 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:11,785 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:26:11,785 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:11,785 INFO: [cached since 838.5s ago] {'pk_1': 5}
2025-02-11 09:26:11,786 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:11,786 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:11,786 INFO: Task with ID 47 fetched successfully.
2025-02-11 09:26:11,786 DEBUG: Fetched Task Data: {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.287641', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:26:11,786 INFO: Task details fetched successfully for Task ID 47.
2025-02-11 09:26:11,786 INFO: ROLLBACK
2025-02-11 09:26:11,786 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:11] "GET /api/tasks/47 HTTP/1.1" 200 -
2025-02-11 09:26:12,491 INFO: Fetching task details for Task ID 56.
2025-02-11 09:26:12,492 INFO: Fetching task with ID 56.
2025-02-11 09:26:12,492 INFO: BEGIN (implicit)
2025-02-11 09:26:12,493 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:12,493 INFO: [cached since 839.8s ago] {'pk_1': 56}
2025-02-11 09:26:12,494 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:12,494 DEBUG: Row (56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, None, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 289338), None)
2025-02-11 09:26:12,495 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b6e92b0>, 'sort_order': 42, 'task_type': 'Subtask', 'contributor_id': None, 'id': 56, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 289338), 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'parent_id': 47, 'story_points': 8, 'completed_date': None}
2025-02-11 09:26:12,495 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:12,496 INFO: [cached since 839.7s ago] {'pk_1': 6}
2025-02-11 09:26:12,496 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:12,496 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:12,497 INFO: Task ID 56 fetched with parent ID: 47
2025-02-11 09:26:12,498 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:12,498 INFO: [cached since 839.7s ago] {'pk_1': 47}
2025-02-11 09:26:12,499 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:12,500 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, None, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), None)
2025-02-11 09:26:12,500 INFO: Task with ID 56 fetched successfully.
2025-02-11 09:26:12,500 DEBUG: Fetched Task Data: {'id': 56, 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.289338', 'contributor_name': 'Unassigned', 'parent': {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.287641'}}
2025-02-11 09:26:12,501 INFO: Task details fetched successfully for Task ID 56.
2025-02-11 09:26:12,501 INFO: ROLLBACK
2025-02-11 09:26:12,502 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:12] "GET /api/tasks/56 HTTP/1.1" 200 -
2025-02-11 09:26:12,707 INFO: Fetching task details for Task ID 47.
2025-02-11 09:26:12,707 INFO: Fetching task with ID 47.
2025-02-11 09:26:12,708 INFO: BEGIN (implicit)
2025-02-11 09:26:12,708 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:12,708 INFO: [cached since 840s ago] {'pk_1': 47}
2025-02-11 09:26:12,709 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:12,710 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, None, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), None)
2025-02-11 09:26:12,710 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b6ebf50>, 'sort_order': 41, 'task_type': 'User Story', 'contributor_id': None, 'id': 47, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'parent_id': 61, 'story_points': 13, 'completed_date': None}
2025-02-11 09:26:12,711 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:12,711 INFO: [cached since 840s ago] {'pk_1': 6}
2025-02-11 09:26:12,712 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:12,712 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:12,712 INFO: Task ID 47 fetched with parent ID: 61
2025-02-11 09:26:12,713 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:12,713 INFO: [cached since 840s ago] {'pk_1': 61}
2025-02-11 09:26:12,714 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:12,714 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:26:12,715 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:12,715 INFO: [cached since 839.4s ago] {'pk_1': 5}
2025-02-11 09:26:12,716 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:12,716 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:12,716 INFO: Task with ID 47 fetched successfully.
2025-02-11 09:26:12,717 DEBUG: Fetched Task Data: {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.287641', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:26:12,717 INFO: Task details fetched successfully for Task ID 47.
2025-02-11 09:26:12,718 INFO: ROLLBACK
2025-02-11 09:26:12,719 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:12] "GET /api/tasks/47 HTTP/1.1" 200 -
2025-02-11 09:26:15,170 INFO: Assigning contributor to task ID 56
2025-02-11 09:26:15,170 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:26:15,171 INFO: Contributor ID received: 5
2025-02-11 09:26:15,171 INFO: BEGIN (implicit)
2025-02-11 09:26:15,171 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:15,171 INFO: [cached since 842.4s ago] {'pk_1': 56}
2025-02-11 09:26:15,172 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:15,172 DEBUG: Row (56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, None, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 289338), None)
2025-02-11 09:26:15,173 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:15,173 INFO: [cached since 391.2s ago] {'pk_1': 5}
2025-02-11 09:26:15,173 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:15,173 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:15,174 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:15,174 INFO: [cached since 391.2s ago] {'pk_1': 6}
2025-02-11 09:26:15,174 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:26:15,175 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:26:15,175 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:26:15,175 INFO: [cached since 391.2s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 26, 15, 175384, tzinfo=datetime.timezone.utc), 'task_id': 56}
2025-02-11 09:26:15,176 INFO: COMMIT
2025-02-11 09:26:15,177 INFO: BEGIN (implicit)
2025-02-11 09:26:15,177 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:15,177 INFO: [cached since 391.1s ago] {'pk_1': 5}
2025-02-11 09:26:15,178 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:15,178 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:15,178 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:15,178 INFO: [cached since 391.1s ago] {'pk_1': 56}
2025-02-11 09:26:15,178 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:15,179 DEBUG: Row (56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 26, 15, 175384), None)
2025-02-11 09:26:15,179 INFO: ROLLBACK
2025-02-11 09:26:15,179 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:15] "POST /tasks/56/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:26:16,221 INFO: save_task triggered
2025-02-11 09:26:16,221 INFO: Payload received: {'title': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_id': '56', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 8, 'parent_id': 47, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:26:16,221 INFO: Update request for Task ID: 56
2025-02-11 09:26:16,222 INFO: BEGIN (implicit)
2025-02-11 09:26:16,222 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:16,222 INFO: [cached since 843.5s ago] {'pk_1': '56'}
2025-02-11 09:26:16,224 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:16,224 DEBUG: Row (56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 26, 15, 175384), None)
2025-02-11 09:26:16,224 DEBUG: Received update payload for Task ID 56: {'title': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_id': '56', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 8, 'parent_id': 47, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:26:16,224 DEBUG: Validating parent_id change for Task 56: 47
2025-02-11 09:26:16,225 INFO: Checking circular reference for Task 56 with Parent ID: 47
2025-02-11 09:26:16,226 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:26:16,226 INFO: [cached since 254s ago] {'id_1': 47, 'param_1': 1}
2025-02-11 09:26:16,226 DEBUG: Col ('task_parent_id',)
2025-02-11 09:26:16,227 DEBUG: Row (61,)
2025-02-11 09:26:16,227 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:26:16,228 INFO: [cached since 254s ago] {'id_1': 61, 'param_1': 1}
2025-02-11 09:26:16,228 DEBUG: Col ('task_parent_id',)
2025-02-11 09:26:16,228 DEBUG: Row (None,)
2025-02-11 09:26:16,229 INFO: Circular reference check passed.
2025-02-11 09:26:16,229 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:26:16,229 INFO: [cached since 254s ago] {'id_1': 47, 'param_1': 1}
2025-02-11 09:26:16,230 DEBUG: Col ('task_task_type',)
2025-02-11 09:26:16,230 DEBUG: Row ('User Story',)
2025-02-11 09:26:16,230 DEBUG: Validating hierarchy: Task 56, Parent Type: User Story
2025-02-11 09:26:16,231 INFO: Hierarchy validation passed for Task 56.
2025-02-11 09:26:16,231 INFO: Validation passed for parent_id: 47
2025-02-11 09:26:16,231 DEBUG: Validating task_type change for Task 56: Subtask
2025-02-11 09:26:16,232 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:26:16,232 INFO: [cached since 254s ago] {'id_1': 47, 'param_1': 1}
2025-02-11 09:26:16,233 DEBUG: Col ('task_task_type',)
2025-02-11 09:26:16,233 DEBUG: Row ('User Story',)
2025-02-11 09:26:16,233 DEBUG: Validating hierarchy: Task Type: Subtask, Parent Type: User Story
2025-02-11 09:26:16,233 INFO: Hierarchy validation passed for Task 56.
2025-02-11 09:26:16,233 INFO: Validation passed for task_type: Subtask
2025-02-11 09:26:16,233 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:26:16,233 INFO: [cached since 254s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), 'task_id': 56}
2025-02-11 09:26:16,234 INFO: COMMIT
2025-02-11 09:26:16,234 INFO: Task ID 56 updated successfully.
2025-02-11 09:26:16,234 INFO: BEGIN (implicit)
2025-02-11 09:26:16,235 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:16,235 INFO: [cached since 392.2s ago] {'pk_1': 56}
2025-02-11 09:26:16,235 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:16,235 DEBUG: Row (56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None)
2025-02-11 09:26:16,235 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:16,235 INFO: [cached since 843s ago] {'pk_1': 5}
2025-02-11 09:26:16,235 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:16,236 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:16,236 INFO: ROLLBACK
2025-02-11 09:26:16,236 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:16] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:26:18,403 INFO: Fetching task details for Task ID 47.
2025-02-11 09:26:18,403 INFO: Fetching task with ID 47.
2025-02-11 09:26:18,404 INFO: BEGIN (implicit)
2025-02-11 09:26:18,404 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:18,405 INFO: [cached since 845.7s ago] {'pk_1': 47}
2025-02-11 09:26:18,406 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:18,406 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, None, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), None)
2025-02-11 09:26:18,406 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b743530>, 'sort_order': 41, 'task_type': 'User Story', 'contributor_id': None, 'id': 47, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'parent_id': 61, 'story_points': 13, 'completed_date': None}
2025-02-11 09:26:18,407 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:18,407 INFO: [cached since 845.7s ago] {'pk_1': 6}
2025-02-11 09:26:18,407 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:18,408 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:18,408 INFO: Task ID 47 fetched with parent ID: 61
2025-02-11 09:26:18,409 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:18,409 INFO: [cached since 845.7s ago] {'pk_1': 61}
2025-02-11 09:26:18,410 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:18,410 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:26:18,411 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:18,411 INFO: [cached since 845.1s ago] {'pk_1': 5}
2025-02-11 09:26:18,412 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:18,412 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:18,413 INFO: Task with ID 47 fetched successfully.
2025-02-11 09:26:18,413 DEBUG: Fetched Task Data: {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.287641', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:26:18,413 INFO: Task details fetched successfully for Task ID 47.
2025-02-11 09:26:18,414 INFO: ROLLBACK
2025-02-11 09:26:18,415 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:18] "GET /api/tasks/47 HTTP/1.1" 200 -
2025-02-11 09:26:18,921 INFO: Fetching task details for Task ID 61.
2025-02-11 09:26:18,921 INFO: Fetching task with ID 61.
2025-02-11 09:26:18,921 INFO: BEGIN (implicit)
2025-02-11 09:26:18,922 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:18,922 INFO: [cached since 846.2s ago] {'pk_1': 61}
2025-02-11 09:26:18,923 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:18,924 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:26:18,925 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d0e30>, 'sort_order': 35, 'task_type': 'Epic', 'contributor_id': 5, 'id': 61, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), 'name': 'Parent task assignment', 'description': '', 'parent_id': None, 'story_points': 0, 'completed_date': None}
2025-02-11 09:26:18,925 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:18,925 INFO: [cached since 846.2s ago] {'pk_1': 6}
2025-02-11 09:26:18,926 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:18,926 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:18,929 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:18,929 INFO: [cached since 845.6s ago] {'pk_1': 5}
2025-02-11 09:26:18,931 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:18,932 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:18,932 INFO: Task ID 61 fetched with parent ID: None
2025-02-11 09:26:18,932 INFO: Task with ID 61 fetched successfully.
2025-02-11 09:26:18,933 DEBUG: Fetched Task Data: {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012', 'contributor_name': 'Fredrik Cederborg', 'parent': None}
2025-02-11 09:26:18,933 INFO: Task details fetched successfully for Task ID 61.
2025-02-11 09:26:18,933 INFO: ROLLBACK
2025-02-11 09:26:18,934 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:18] "GET /api/tasks/61 HTTP/1.1" 200 -
2025-02-11 09:26:19,641 INFO: Fetching task details for Task ID 47.
2025-02-11 09:26:19,641 INFO: Fetching task with ID 47.
2025-02-11 09:26:19,642 INFO: BEGIN (implicit)
2025-02-11 09:26:19,642 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:19,643 INFO: [cached since 846.9s ago] {'pk_1': 47}
2025-02-11 09:26:19,644 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:19,644 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, None, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), None)
2025-02-11 09:26:19,645 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d1e50>, 'sort_order': 41, 'task_type': 'User Story', 'contributor_id': None, 'id': 47, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'parent_id': 61, 'story_points': 13, 'completed_date': None}
2025-02-11 09:26:19,645 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:19,645 INFO: [cached since 846.9s ago] {'pk_1': 6}
2025-02-11 09:26:19,646 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:19,646 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:19,647 INFO: Task ID 47 fetched with parent ID: 61
2025-02-11 09:26:19,647 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:19,648 INFO: [cached since 846.9s ago] {'pk_1': 61}
2025-02-11 09:26:19,648 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:19,649 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:26:19,650 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:19,650 INFO: [cached since 846.4s ago] {'pk_1': 5}
2025-02-11 09:26:19,651 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:19,651 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:19,652 INFO: Task with ID 47 fetched successfully.
2025-02-11 09:26:19,652 DEBUG: Fetched Task Data: {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.287641', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:26:19,653 INFO: Task details fetched successfully for Task ID 47.
2025-02-11 09:26:19,653 INFO: ROLLBACK
2025-02-11 09:26:19,654 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:19] "GET /api/tasks/47 HTTP/1.1" 200 -
2025-02-11 09:26:19,858 INFO: Fetching task details for Task ID 61.
2025-02-11 09:26:19,858 INFO: Fetching task with ID 61.
2025-02-11 09:26:19,859 INFO: BEGIN (implicit)
2025-02-11 09:26:19,859 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:19,859 INFO: [cached since 847.1s ago] {'pk_1': 61}
2025-02-11 09:26:19,860 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:19,860 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:26:19,861 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b7d0f50>, 'sort_order': 35, 'task_type': 'Epic', 'contributor_id': 5, 'id': 61, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), 'name': 'Parent task assignment', 'description': '', 'parent_id': None, 'story_points': 0, 'completed_date': None}
2025-02-11 09:26:19,862 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:19,862 INFO: [cached since 847.1s ago] {'pk_1': 6}
2025-02-11 09:26:19,863 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:19,863 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:19,864 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:19,865 INFO: [cached since 846.6s ago] {'pk_1': 5}
2025-02-11 09:26:19,865 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:19,866 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:19,866 INFO: Task ID 61 fetched with parent ID: None
2025-02-11 09:26:19,866 INFO: Task with ID 61 fetched successfully.
2025-02-11 09:26:19,866 DEBUG: Fetched Task Data: {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012', 'contributor_name': 'Fredrik Cederborg', 'parent': None}
2025-02-11 09:26:19,866 INFO: Task details fetched successfully for Task ID 61.
2025-02-11 09:26:19,867 INFO: ROLLBACK
2025-02-11 09:26:19,867 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:19] "GET /api/tasks/61 HTTP/1.1" 200 -
2025-02-11 09:26:22,055 INFO: Assigning contributor to task ID 47
2025-02-11 09:26:22,055 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:26:22,055 INFO: Contributor ID received: 5
2025-02-11 09:26:22,056 INFO: BEGIN (implicit)
2025-02-11 09:26:22,056 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:22,057 INFO: [cached since 849.3s ago] {'pk_1': 47}
2025-02-11 09:26:22,057 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:22,058 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, None, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 287641), None)
2025-02-11 09:26:22,058 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:22,058 INFO: [cached since 398.1s ago] {'pk_1': 5}
2025-02-11 09:26:22,059 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:22,059 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:22,060 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:22,060 INFO: [cached since 398s ago] {'pk_1': 6}
2025-02-11 09:26:22,062 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:26:22,062 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:26:22,063 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:26:22,063 INFO: [cached since 398s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 26, 22, 63625, tzinfo=datetime.timezone.utc), 'task_id': 47}
2025-02-11 09:26:22,064 INFO: COMMIT
2025-02-11 09:26:22,065 INFO: BEGIN (implicit)
2025-02-11 09:26:22,066 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:22,066 INFO: [cached since 398s ago] {'pk_1': 5}
2025-02-11 09:26:22,066 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:22,066 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:22,066 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:22,066 INFO: [cached since 398s ago] {'pk_1': 47}
2025-02-11 09:26:22,067 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:22,067 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 9, 26, 22, 63625), None)
2025-02-11 09:26:22,067 INFO: ROLLBACK
2025-02-11 09:26:22,067 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:22] "POST /tasks/47/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:26:23,055 INFO: save_task triggered
2025-02-11 09:26:23,055 INFO: Payload received: {'title': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_id': '47', 'project_id': '6', 'task_type': 'User Story', 'story_points': 13, 'parent_id': 61, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:26:23,056 INFO: Update request for Task ID: 47
2025-02-11 09:26:23,056 INFO: BEGIN (implicit)
2025-02-11 09:26:23,057 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:23,057 INFO: [cached since 850.3s ago] {'pk_1': '47'}
2025-02-11 09:26:23,058 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:23,058 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 9, 26, 22, 63625), None)
2025-02-11 09:26:23,058 DEBUG: Received update payload for Task ID 47: {'title': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_id': '47', 'project_id': '6', 'task_type': 'User Story', 'story_points': 13, 'parent_id': 61, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:26:23,059 DEBUG: Validating parent_id change for Task 47: 61
2025-02-11 09:26:23,059 INFO: Checking circular reference for Task 47 with Parent ID: 61
2025-02-11 09:26:23,060 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:26:23,060 INFO: [cached since 260.8s ago] {'id_1': 61, 'param_1': 1}
2025-02-11 09:26:23,062 DEBUG: Col ('task_parent_id',)
2025-02-11 09:26:23,062 DEBUG: Row (None,)
2025-02-11 09:26:23,062 INFO: Circular reference check passed.
2025-02-11 09:26:23,063 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:26:23,063 INFO: [cached since 260.8s ago] {'id_1': 61, 'param_1': 1}
2025-02-11 09:26:23,063 DEBUG: Col ('task_task_type',)
2025-02-11 09:26:23,064 DEBUG: Row ('Epic',)
2025-02-11 09:26:23,064 DEBUG: Validating hierarchy: Task 47, Parent Type: Epic
2025-02-11 09:26:23,064 INFO: Hierarchy validation passed for Task 47.
2025-02-11 09:26:23,064 INFO: Validation passed for parent_id: 61
2025-02-11 09:26:23,064 DEBUG: Validating task_type change for Task 47: User Story
2025-02-11 09:26:23,066 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:26:23,066 INFO: [cached since 260.8s ago] {'id_1': 61, 'param_1': 1}
2025-02-11 09:26:23,066 DEBUG: Col ('task_task_type',)
2025-02-11 09:26:23,067 DEBUG: Row ('Epic',)
2025-02-11 09:26:23,067 DEBUG: Validating hierarchy: Task Type: User Story, Parent Type: Epic
2025-02-11 09:26:23,067 INFO: Hierarchy validation passed for Task 47.
2025-02-11 09:26:23,067 INFO: Validation passed for task_type: User Story
2025-02-11 09:26:23,067 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:26:23,067 INFO: [cached since 260.8s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), 'task_id': 47}
2025-02-11 09:26:23,068 INFO: COMMIT
2025-02-11 09:26:23,068 INFO: Task ID 47 updated successfully.
2025-02-11 09:26:23,069 INFO: BEGIN (implicit)
2025-02-11 09:26:23,069 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:23,069 INFO: [cached since 399s ago] {'pk_1': 47}
2025-02-11 09:26:23,069 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:23,069 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None)
2025-02-11 09:26:23,070 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:23,070 INFO: [cached since 849.8s ago] {'pk_1': 5}
2025-02-11 09:26:23,070 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:23,070 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:23,070 INFO: ROLLBACK
2025-02-11 09:26:23,070 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:23] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 09:26:24,754 INFO: Fetching task details for Task ID 54.
2025-02-11 09:26:24,755 INFO: Fetching task with ID 54.
2025-02-11 09:26:24,756 INFO: BEGIN (implicit)
2025-02-11 09:26:24,756 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:24,756 INFO: [cached since 852s ago] {'pk_1': 54}
2025-02-11 09:26:24,757 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:24,758 DEBUG: Row (54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 286248), None)
2025-02-11 09:26:24,758 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b743590>, 'sort_order': 40, 'task_type': 'Subtask', 'contributor_id': None, 'id': 54, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 286248), 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'parent_id': 46, 'story_points': 2, 'completed_date': None}
2025-02-11 09:26:24,758 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:24,758 INFO: [cached since 852s ago] {'pk_1': 6}
2025-02-11 09:26:24,759 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:24,759 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:24,759 INFO: Task ID 54 fetched with parent ID: 46
2025-02-11 09:26:24,760 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:24,760 INFO: [cached since 852s ago] {'pk_1': 46}
2025-02-11 09:26:24,761 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:24,761 DEBUG: Row (46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None)
2025-02-11 09:26:24,762 INFO: Task with ID 54 fetched successfully.
2025-02-11 09:26:24,762 DEBUG: Fetched Task Data: {'id': 54, 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 46, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.286248', 'contributor_name': 'Unassigned', 'parent': {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882'}}
2025-02-11 09:26:24,762 INFO: Task details fetched successfully for Task ID 54.
2025-02-11 09:26:24,762 INFO: ROLLBACK
2025-02-11 09:26:24,763 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:24] "GET /api/tasks/54 HTTP/1.1" 200 -
2025-02-11 09:26:25,270 INFO: Fetching task details for Task ID 46.
2025-02-11 09:26:25,271 INFO: Fetching task with ID 46.
2025-02-11 09:26:25,271 INFO: BEGIN (implicit)
2025-02-11 09:26:25,272 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:25,272 INFO: [cached since 852.5s ago] {'pk_1': 46}
2025-02-11 09:26:25,273 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:25,273 DEBUG: Row (46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None)
2025-02-11 09:26:25,273 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b742f90>, 'sort_order': 39, 'task_type': 'User Story', 'contributor_id': None, 'id': 46, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'parent_id': 61, 'story_points': 8, 'completed_date': None}
2025-02-11 09:26:25,274 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:25,274 INFO: [cached since 852.5s ago] {'pk_1': 6}
2025-02-11 09:26:25,275 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:25,277 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:25,277 INFO: Task ID 46 fetched with parent ID: 61
2025-02-11 09:26:25,278 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:25,278 INFO: [cached since 852.5s ago] {'pk_1': 61}
2025-02-11 09:26:25,279 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:25,280 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:26:25,281 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:25,282 INFO: [cached since 852s ago] {'pk_1': 5}
2025-02-11 09:26:25,283 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:25,283 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:25,283 INFO: Task with ID 46 fetched successfully.
2025-02-11 09:26:25,284 DEBUG: Fetched Task Data: {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:26:25,284 INFO: Task details fetched successfully for Task ID 46.
2025-02-11 09:26:25,284 INFO: ROLLBACK
2025-02-11 09:26:25,285 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:25] "GET /api/tasks/46 HTTP/1.1" 200 -
2025-02-11 09:26:25,990 INFO: Fetching task details for Task ID 54.
2025-02-11 09:26:25,990 INFO: Fetching task with ID 54.
2025-02-11 09:26:25,991 INFO: BEGIN (implicit)
2025-02-11 09:26:25,991 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:25,991 INFO: [cached since 853.2s ago] {'pk_1': 54}
2025-02-11 09:26:25,992 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:25,992 DEBUG: Row (54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 286248), None)
2025-02-11 09:26:25,993 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b6e9af0>, 'sort_order': 40, 'task_type': 'Subtask', 'contributor_id': None, 'id': 54, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 286248), 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'parent_id': 46, 'story_points': 2, 'completed_date': None}
2025-02-11 09:26:25,994 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:25,994 INFO: [cached since 853.2s ago] {'pk_1': 6}
2025-02-11 09:26:25,995 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:25,995 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:25,996 INFO: Task ID 54 fetched with parent ID: 46
2025-02-11 09:26:25,996 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:25,997 INFO: [cached since 853.2s ago] {'pk_1': 46}
2025-02-11 09:26:25,997 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:25,998 DEBUG: Row (46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None)
2025-02-11 09:26:25,998 INFO: Task with ID 54 fetched successfully.
2025-02-11 09:26:25,998 DEBUG: Fetched Task Data: {'id': 54, 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 46, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.286248', 'contributor_name': 'Unassigned', 'parent': {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882'}}
2025-02-11 09:26:25,999 INFO: Task details fetched successfully for Task ID 54.
2025-02-11 09:26:25,999 INFO: ROLLBACK
2025-02-11 09:26:26,000 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:26] "GET /api/tasks/54 HTTP/1.1" 200 -
2025-02-11 09:26:26,204 INFO: Fetching task details for Task ID 46.
2025-02-11 09:26:26,204 INFO: Fetching task with ID 46.
2025-02-11 09:26:26,205 INFO: BEGIN (implicit)
2025-02-11 09:26:26,205 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:26,205 INFO: [cached since 853.5s ago] {'pk_1': 46}
2025-02-11 09:26:26,207 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:26,207 DEBUG: Row (46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None)
2025-02-11 09:26:26,208 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12b743950>, 'sort_order': 39, 'task_type': 'User Story', 'contributor_id': None, 'id': 46, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'parent_id': 61, 'story_points': 8, 'completed_date': None}
2025-02-11 09:26:26,208 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:26,209 INFO: [cached since 853.5s ago] {'pk_1': 6}
2025-02-11 09:26:26,210 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 09:26:26,210 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 09:26:26,211 INFO: Task ID 46 fetched with parent ID: 61
2025-02-11 09:26:26,212 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:26,212 INFO: [cached since 853.5s ago] {'pk_1': 61}
2025-02-11 09:26:26,213 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:26,213 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 09:26:26,214 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:26,214 INFO: [cached since 852.9s ago] {'pk_1': 5}
2025-02-11 09:26:26,216 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:26,216 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:26,216 INFO: Task with ID 46 fetched successfully.
2025-02-11 09:26:26,217 DEBUG: Fetched Task Data: {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882', 'contributor_name': 'Unassigned', 'parent': {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}}
2025-02-11 09:26:26,217 INFO: Task details fetched successfully for Task ID 46.
2025-02-11 09:26:26,217 INFO: ROLLBACK
2025-02-11 09:26:26,218 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:26] "GET /api/tasks/46 HTTP/1.1" 200 -
2025-02-11 09:26:28,270 INFO: Assigning contributor to task ID 54
2025-02-11 09:26:28,271 INFO: Received data: {'contributor_id': 5}
2025-02-11 09:26:28,271 INFO: Contributor ID received: 5
2025-02-11 09:26:28,272 INFO: BEGIN (implicit)
2025-02-11 09:26:28,272 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:28,272 INFO: [cached since 855.5s ago] {'pk_1': 54}
2025-02-11 09:26:28,273 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:28,274 DEBUG: Row (54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, None, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 286248), None)
2025-02-11 09:26:28,275 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:28,275 INFO: [cached since 404.3s ago] {'pk_1': 5}
2025-02-11 09:26:28,275 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:28,275 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:28,276 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 09:26:28,276 INFO: [cached since 404.3s ago] {'pk_1': 6}
2025-02-11 09:26:28,278 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 09:26:28,278 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 09:26:28,279 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:26:28,279 INFO: [cached since 404.3s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 8, 26, 28, 279625, tzinfo=datetime.timezone.utc), 'task_id': 54}
2025-02-11 09:26:28,280 INFO: COMMIT
2025-02-11 09:26:28,281 INFO: BEGIN (implicit)
2025-02-11 09:26:28,281 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:28,281 INFO: [cached since 404.3s ago] {'pk_1': 5}
2025-02-11 09:26:28,282 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:28,282 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:28,282 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:28,282 INFO: [cached since 404.3s ago] {'pk_1': 54}
2025-02-11 09:26:28,282 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:28,282 DEBUG: Row (54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 26, 28, 279625), None)
2025-02-11 09:26:28,283 INFO: ROLLBACK
2025-02-11 09:26:28,283 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:28] "POST /tasks/54/assign_contributor HTTP/1.1" 200 -
2025-02-11 09:26:29,238 INFO: save_task triggered
2025-02-11 09:26:29,238 INFO: Payload received: {'title': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_id': '54', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 2, 'parent_id': 46, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:26:29,239 INFO: Update request for Task ID: 54
2025-02-11 09:26:29,239 INFO: BEGIN (implicit)
2025-02-11 09:26:29,240 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:29,240 INFO: [cached since 856.5s ago] {'pk_1': '54'}
2025-02-11 09:26:29,241 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:29,241 DEBUG: Row (54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 9, 26, 28, 279625), None)
2025-02-11 09:26:29,241 DEBUG: Received update payload for Task ID 54: {'title': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_id': '54', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 2, 'parent_id': 46, 'contributor_id': None, 'sort_order': 0}
2025-02-11 09:26:29,242 DEBUG: Validating parent_id change for Task 54: 46
2025-02-11 09:26:29,242 INFO: Checking circular reference for Task 54 with Parent ID: 46
2025-02-11 09:26:29,243 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:26:29,243 INFO: [cached since 267s ago] {'id_1': 46, 'param_1': 1}
2025-02-11 09:26:29,244 DEBUG: Col ('task_parent_id',)
2025-02-11 09:26:29,244 DEBUG: Row (61,)
2025-02-11 09:26:29,245 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:26:29,245 INFO: [cached since 267s ago] {'id_1': 61, 'param_1': 1}
2025-02-11 09:26:29,246 DEBUG: Col ('task_parent_id',)
2025-02-11 09:26:29,246 DEBUG: Row (None,)
2025-02-11 09:26:29,246 INFO: Circular reference check passed.
2025-02-11 09:26:29,247 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:26:29,247 INFO: [cached since 267s ago] {'id_1': 46, 'param_1': 1}
2025-02-11 09:26:29,248 DEBUG: Col ('task_task_type',)
2025-02-11 09:26:29,248 DEBUG: Row ('User Story',)
2025-02-11 09:26:29,248 DEBUG: Validating hierarchy: Task 54, Parent Type: User Story
2025-02-11 09:26:29,248 INFO: Hierarchy validation passed for Task 54.
2025-02-11 09:26:29,248 INFO: Validation passed for parent_id: 46
2025-02-11 09:26:29,249 DEBUG: Validating task_type change for Task 54: Subtask
2025-02-11 09:26:29,250 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 09:26:29,250 INFO: [cached since 267s ago] {'id_1': 46, 'param_1': 1}
2025-02-11 09:26:29,250 DEBUG: Col ('task_task_type',)
2025-02-11 09:26:29,250 DEBUG: Row ('User Story',)
2025-02-11 09:26:29,250 DEBUG: Validating hierarchy: Task Type: Subtask, Parent Type: User Story
2025-02-11 09:26:29,250 INFO: Hierarchy validation passed for Task 54.
2025-02-11 09:26:29,250 INFO: Validation passed for task_type: Subtask
2025-02-11 09:26:29,251 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 09:26:29,251 INFO: [cached since 267s ago] {'updated_at': datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), 'task_id': 54}
2025-02-11 09:26:29,251 INFO: COMMIT
2025-02-11 09:26:29,252 INFO: Task ID 54 updated successfully.
2025-02-11 09:26:29,252 INFO: BEGIN (implicit)
2025-02-11 09:26:29,252 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 09:26:29,252 INFO: [cached since 405.2s ago] {'pk_1': 54}
2025-02-11 09:26:29,252 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 09:26:29,253 DEBUG: Row (54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None)
2025-02-11 09:26:29,253 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 09:26:29,253 INFO: [cached since 856s ago] {'pk_1': 5}
2025-02-11 09:26:29,253 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 09:26:29,253 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 09:26:29,253 INFO: ROLLBACK
2025-02-11 09:26:29,254 INFO: 127.0.0.1 - - [11/Feb/2025 09:26:29] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 12:32:05,736 INFO: Flash messages: []
2025-02-11 12:32:05,745 INFO: BEGIN (implicit)
2025-02-11 12:32:05,755 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date 
FROM project LEFT OUTER JOIN task AS task_1 ON project.id = task_1.project_id
2025-02-11 12:32:05,756 INFO: [generated in 0.00195s] {}
2025-02-11 12:32:05,777 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'task_1_id', 'task_1_name', 'task_1_sort_order', 'task_1_description', 'task_1_task_type', 'task_1_is_archived', 'task_1_completed', 'task_1_status', 'task_1_parent_id', 'task_1_project_id', 'task_1_contributor_id', 'task_1_story_points', 'task_1_created_at', 'task_1_updated_at', 'task_1_completed_date')
2025-02-11 12:32:05,778 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 15, 491910), None)
2025-02-11 12:32:05,778 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None)
2025-02-11 12:32:05,779 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None)
2025-02-11 12:32:05,779 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None)
2025-02-11 12:32:05,779 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None)
2025-02-11 12:32:05,779 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None)
2025-02-11 12:32:05,779 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 269, 'fix styling for sweetalert', 0, '', 'User Story', False, False, 'In Progress', None, 6, None, 0, datetime.datetime(2025, 2, 8, 15, 54, 56, 717846), datetime.datetime(2025, 2, 10, 8, 39, 32, 172437), None)
2025-02-11 12:32:05,779 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 265, 'smooth transition for toggles', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 27, 23, 422612), datetime.datetime(2025, 2, 10, 8, 46, 55, 831743), None)
2025-02-11 12:32:05,779 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 266, 'highlight the nested tasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 28, 30, 382949), datetime.datetime(2025, 2, 10, 8, 47, 4, 382929), None)
2025-02-11 12:32:05,779 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 264, 'close all / open all childtasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 25, 20, 101418), datetime.datetime(2025, 2, 10, 8, 47, 14, 915970), None)
2025-02-11 12:32:05,779 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 267, 'improvements to toggles and nested tasks', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 29, 12, 464594), datetime.datetime(2025, 2, 10, 8, 47, 24, 581680), None)
2025-02-11 12:32:05,779 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 12:32:05,779 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 30, 747962), None)
2025-02-11 12:32:05,779 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), 270, 'the newest task', 0, '', 'Subtask', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 0, 7, 34, 368035), datetime.datetime(2025, 2, 10, 1, 7, 34, 372478), None)
2025-02-11 12:32:05,780 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None)
2025-02-11 12:32:05,780 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None)
2025-02-11 12:32:05,780 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None)
2025-02-11 12:32:05,780 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None)
2025-02-11 12:32:05,780 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None)
2025-02-11 12:32:05,780 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 280, 'logging (task and project history)', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 37, 44, 435112), datetime.datetime(2025, 2, 10, 8, 28, 28, 947805), None)
2025-02-11 12:32:05,780 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 275, 'add sprints, cycles', 0, 'Make naming customizable', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 48, 52, 680022), datetime.datetime(2025, 2, 10, 8, 38, 37, 622196), None)
2025-02-11 12:32:05,780 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None)
2025-02-11 12:32:05,780 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None)
2025-02-11 12:32:05,780 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None)
2025-02-11 12:32:05,780 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None)
2025-02-11 12:32:05,780 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None)
2025-02-11 12:32:05,781 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None)
2025-02-11 12:32:05,781 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None)
2025-02-11 12:32:05,781 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None)
2025-02-11 12:32:05,781 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None)
2025-02-11 12:32:05,781 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 274, 'add support for goals, initiatives, okr´s', 0, 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 46, 27, 204912), datetime.datetime(2025, 2, 10, 8, 28, 17, 663922), None)
2025-02-11 12:32:05,781 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 272, 'implement a markdown text editor like notion', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 28, 18, 300231), datetime.datetime(2025, 2, 10, 8, 28, 39, 669255), None)
2025-02-11 12:32:05,781 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 276, 'add support for priority', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 49, 26, 189497), datetime.datetime(2025, 2, 10, 8, 28, 47, 447612), None)
2025-02-11 12:32:05,781 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 271, 'make sure dynamically added rows has the exact same styling and includes every element', 0, 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 21, 7, 108431), datetime.datetime(2025, 2, 10, 8, 38, 47, 340105), None)
2025-02-11 12:32:05,781 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 281, 'add high level plan', 0, 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 27, 1, 218606), datetime.datetime(2025, 2, 10, 8, 38, 54, 754760), None)
2025-02-11 12:32:05,781 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None)
2025-02-11 12:32:05,781 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 278, 'search feature for tasks list', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 3, 369833), datetime.datetime(2025, 2, 10, 8, 39, 4, 5957), None)
2025-02-11 12:32:05,781 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 273, 'disable parent task selector in epics', 0, 'and add text, Epic can´t have parent tasks', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 0, 45, 20, 740910), datetime.datetime(2025, 2, 10, 8, 39, 17, 639890), None)
2025-02-11 12:32:05,782 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 279, 'github integration', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 38, 238202), datetime.datetime(2025, 2, 10, 8, 39, 24, 168451), None)
2025-02-11 12:32:05,782 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None)
2025-02-11 12:32:05,782 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None)
2025-02-11 12:32:05,782 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None)
2025-02-11 12:32:05,782 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None)
2025-02-11 12:32:05,782 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 277, 'custom task workflow statuses', 0, 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- ... (780 characters truncated) ...  tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 16, 3, 352588), datetime.datetime(2025, 2, 10, 8, 38, 28, 123328), None)
2025-02-11 12:32:05,782 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None)
2025-02-11 12:32:05,782 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None)
2025-02-11 12:32:05,783 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None)
2025-02-11 12:32:05,783 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 282, 'implement same task list in projects but filtered on project', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 17, 786154), datetime.datetime(2025, 2, 10, 9, 41, 17, 787861), None)
2025-02-11 12:32:05,784 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None)
2025-02-11 12:32:05,784 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 284, 'add type "issue/bug"', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 42, 27, 719439), datetime.datetime(2025, 2, 10, 9, 42, 27, 720908), None)
2025-02-11 12:32:05,784 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 283, 'fix update title', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 58, 769700), datetime.datetime(2025, 2, 10, 8, 46, 47, 282087), None)
2025-02-11 12:32:05,784 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 250, 'Preserve User Preferences', None, 'Persist the user’s chosen view state between sessions.', 'Subtask', False, False, 'Not Started', 242, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), datetime.datetime(2025, 2, 5, 16, 33, 21, 995140), None)
2025-02-11 12:32:05,784 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None)
2025-02-11 12:32:05,784 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 22, 274304), None)
2025-02-11 12:32:05,784 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None)
2025-02-11 12:32:05,784 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 10, 9, 12, 47, 626993), None)
2025-02-11 12:32:05,784 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 285, 'add text truncation to project names in task list', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 45, 47, 27805), datetime.datetime(2025, 2, 10, 9, 45, 47, 29729), None)
2025-02-11 12:32:05,784 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 286, 'add support for labels/tags', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 46, 23, 985620), datetime.datetime(2025, 2, 10, 9, 46, 23, 987564), None)
2025-02-11 12:32:05,785 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None)
2025-02-11 12:32:05,785 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 287, 'when moving a parent item to another project make sure the subtasks are moved as well', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 48, 31, 986870), datetime.datetime(2025, 2, 10, 9, 48, 31, 988859), None)
2025-02-11 12:32:05,785 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None)
2025-02-11 12:32:05,785 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 288, 'when trying to move subtask to another project, make sure a warning is displayed', 0, 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be l ... (312 characters truncated) ... , Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 54, 36, 297869), datetime.datetime(2025, 2, 10, 8, 54, 51, 840686), None)
2025-02-11 12:32:05,785 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 295, 'issue: drag and drop errors', 0, '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 22, 54, 461413), datetime.datetime(2025, 2, 10, 10, 22, 54, 462542), None)
2025-02-11 12:32:05,785 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 244, 'Scroll to Updated Task', None, 'Automatically scroll to the updated task in the list if it’s out of view.', 'Subtask', False, False, 'Completed', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 56, 52, 818501), datetime.datetime(2025, 2, 5, 16, 33, 38, 895813), None)
2025-02-11 12:32:05,785 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None)
2025-02-11 12:32:05,785 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None)
2025-02-11 12:32:05,785 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None)
2025-02-11 12:32:05,785 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 296, 'issue: contributor is lost after updating task', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 26, 43, 881947), datetime.datetime(2025, 2, 10, 10, 26, 43, 884004), None)
2025-02-11 12:32:05,785 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None)
2025-02-11 12:32:05,785 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None)
2025-02-11 12:32:05,785 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 241, 'Provide User Feedback', None, 'As a user, I want to receive immediate feedback after updating a task’s status so that I know the update was successful.', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 55, 19, 826398), datetime.datetime(2025, 2, 5, 12, 55, 19, 826398), None)
2025-02-11 12:32:05,785 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 242, 'User Control Over Views', None, 'As a user, I want to toggle between hierarchical and flat views so that I can switch sorting preferences based on my workflow.', 'User Story', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 2, 5, 12, 55, 50, 108011), datetime.datetime(2025, 2, 5, 12, 55, 50, 108011), None)
2025-02-11 12:32:05,785 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 246, 'Toast Notification', None, 'Display a toast notification confirming the task status update.', 'Subtask', False, False, 'Not Started', 241, 6, 5, 2, datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), None)
2025-02-11 12:32:05,785 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 247, 'Add Temporary Badge', None, 'Add a temporary badge or visual indicator to the updated task.', 'Subtask', False, False, 'Not Started', 241, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), None)
2025-02-11 12:32:05,786 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 248, 'Implement Toggle Button', None, 'Add a toggle button to switch between hierarchical and flat views.', 'Subtask', False, False, 'Not Started', 242, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), None)
2025-02-11 12:32:05,786 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 249, 'Define View States', None, 'Clearly label and define the view states for hierarchical and flat sorting.', 'Subtask', False, False, 'Not Started', 242, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), None)
2025-02-11 12:32:05,786 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), 297, 'example parent epic', 0, '', 'Epic', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 39, 51, 620509), datetime.datetime(2025, 2, 10, 10, 39, 51, 622712), None)
2025-02-11 12:32:05,786 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 291, 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 9, 52, 988609), datetime.datetime(2025, 2, 10, 10, 9, 52, 997455), None)
2025-02-11 12:32:05,786 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 292, 'issue: assigning contributor does not work', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 10, 10, 11, 12, 274809), None)
2025-02-11 12:32:05,786 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None)
2025-02-11 12:32:05,786 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 243, 'Highlight Updated Task', None, 'Highlight the updated task in the UI to provide immediate visual feedback.', 'Subtask', False, False, 'Completed', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 56, 52, 818501), datetime.datetime(2025, 2, 5, 16, 33, 46, 11135), None)
2025-02-11 12:32:05,786 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 245, 'Apply Dynamic Sorting and Filtering', None, 'Ensure the task list dynamically updates its sorting and filtering after a status change.', 'Subtask', False, False, 'In Progress', 240, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 56, 52, 818501), datetime.datetime(2025, 2, 5, 16, 35, 16, 991226), None)
2025-02-11 12:32:05,786 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 240, 'Update Task Workflow', None, 'As a user, I want to update the status of a task so that it reflects the changes in the UI dynamically without reloading the page.', 'User Story', False, False, 'In Progress', None, 6, 5, 8, datetime.datetime(2025, 2, 5, 12, 54, 55, 61344), datetime.datetime(2025, 2, 5, 19, 2, 8, 832430), None)
2025-02-11 12:32:05,786 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None)
2025-02-11 12:32:05,786 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 293, 'click on title should copy the task title and id to clipboard', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 16, 33, 508209), datetime.datetime(2025, 2, 10, 10, 16, 33, 510414), None)
2025-02-11 12:32:05,786 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 294, 'issue: task table filters not working', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 19, 21, 22598), datetime.datetime(2025, 2, 10, 10, 19, 21, 24676), None)
2025-02-11 12:32:05,787 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), 298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None)
2025-02-11 12:32:05,787 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), 299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None)
2025-02-11 12:32:05,787 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None)
2025-02-11 12:32:05,787 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None)
2025-02-11 12:32:05,787 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None)
2025-02-11 12:32:05,787 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 116, 'Frontend Logout Button', 33, 'Add a logout button to the UI and handle session clearing.', 'Subtask', False, False, 'Not Started', None, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 2, 9, 12, 31, 17, 939784), None)
2025-02-11 12:32:05,788 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None)
2025-02-11 12:32:05,788 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None)
2025-02-11 12:32:05,788 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 127, 'Backend API for Password Reset', 68, 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'Subtask', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 2, 10, 23, 59, 50, 734037), None)
2025-02-11 12:32:05,788 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 126, 'Email Configuration for Password Reset', 69, 'Configure email service to send password reset links.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 334340), None)
2025-02-11 12:32:05,789 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None)
2025-02-11 12:32:05,789 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 104, 'Middleware for Role Enforcement', 70, 'As a system, I want to enforce role-based access to specific routes.', 'User Story', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 23, 40, 346816), None)
2025-02-11 12:32:05,789 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None)
2025-02-11 12:32:05,789 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 122, 'Testing Role Enforcement', 71, 'Write tests to ensure proper access control based on roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 185693), None)
2025-02-11 12:32:05,789 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 257, 'Update Task API Integration', 0, "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'Subtask', False, False, 'Not Started', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 22, 55, 49, 566819), datetime.datetime(2025, 2, 5, 22, 18, 17, 807154), None)
