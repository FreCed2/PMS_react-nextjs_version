2025-02-11 12:37:15,276 DEBUG: Row (63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,279 DEBUG: Row (63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,279 DEBUG: Row (68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,280 DEBUG: Row (69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,280 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,280 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,280 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,280 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,281 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,281 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,281 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 2, 11, 11, 36, 20, 238219), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,281 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,281 DEBUG: Row (107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 2, 11, 11, 36, 20, 238219), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,281 DEBUG: Row (108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,282 DEBUG: Row (112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,282 DEBUG: Row (109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,282 DEBUG: Row (110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,282 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,282 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,282 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,282 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,282 DEBUG: Row (111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,283 DEBUG: Row (113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,283 DEBUG: Row (114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,284 DEBUG: Row (106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,284 DEBUG: Row (106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,284 DEBUG: Row (128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,285 DEBUG: Row (129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,285 DEBUG: Row (102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,286 DEBUG: Row (102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,286 DEBUG: Row (117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,286 DEBUG: Row (116, 'Frontend Logout Button', 33, 'Add a logout button to the UI and handle session clearing.', 'Subtask', False, False, 'Not Started', None, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 2, 9, 12, 31, 17, 939784), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,286 DEBUG: Row (115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,287 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,287 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,287 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,287 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,287 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,287 DEBUG: Row (45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None, 51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,287 DEBUG: Row (50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 22, 274304), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,287 DEBUG: Row (51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,288 DEBUG: Row (46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None, 54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,288 DEBUG: Row (54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,288 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None, 56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,288 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None, 55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,288 DEBUG: Row (56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,288 DEBUG: Row (55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,288 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None, 58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,288 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None, 57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,289 DEBUG: Row (57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,289 DEBUG: Row (58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,289 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None, 60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,289 DEBUG: Row (59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 15, 491910), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,289 DEBUG: Row (60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,289 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, 5, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 11, 8, 25, 7, 992524), None, 52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,290 DEBUG: Row (52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,290 DEBUG: Row (53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 24, 54, 245010), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,290 DEBUG: Row (42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, 5, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 47, 274896), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,290 DEBUG: Row (43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 33, 908549), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,291 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,291 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,291 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,291 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,291 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,291 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,292 DEBUG: Row (90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,292 DEBUG: Row (88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,292 DEBUG: Row (89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,292 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,292 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,292 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,292 DEBUG: Row (93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,292 DEBUG: Row (91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,292 DEBUG: Row (92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,292 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,293 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,293 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,293 DEBUG: Row (96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,293 DEBUG: Row (94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,293 DEBUG: Row (95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,293 DEBUG: Row (127, 'Backend API for Password Reset', 68, 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'Subtask', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 2, 10, 23, 59, 50, 734037), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,293 DEBUG: Row (126, 'Email Configuration for Password Reset', 69, 'Configure email service to send password reset links.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 334340), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,293 DEBUG: Row (104, 'Middleware for Role Enforcement', 70, 'As a system, I want to enforce role-based access to specific routes.', 'User Story', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 23, 40, 346816), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,293 DEBUG: Row (122, 'Testing Role Enforcement', 71, 'Write tests to ensure proper access control based on roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 185693), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,293 DEBUG: Row (121, 'Develop Role Enforcement Middleware', 72, 'Implement middleware to check user roles for access control.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 187439), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,294 DEBUG: Row (105, 'Profile Management', 73, 'As a user, I want to update my profile (username, email, password).', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 339830), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,294 DEBUG: Row (123, 'Backend API for Profile Management', 74, 'Create PATCH /api/profile endpoint to update user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 678781), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,294 DEBUG: Row (125, 'Testing Profile Updates', 75, 'Write tests for profile update functionality.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 680382), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,296 INFO: SELECT count(*) AS count_1 
FROM (SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.is_archived = false) AS anon_1
2025-02-11 12:37:15,297 INFO: [cached since 2703s ago] {}
2025-02-11 12:37:15,297 DEBUG: Col ('count_1',)
2025-02-11 12:37:15,297 DEBUG: Row (131,)
2025-02-11 12:37:15,298 INFO: SELECT DISTINCT task.task_type AS task_task_type 
FROM task
2025-02-11 12:37:15,299 INFO: [cached since 2703s ago] {}
2025-02-11 12:37:15,299 DEBUG: Col ('task_task_type',)
2025-02-11 12:37:15,299 DEBUG: Row ('Epic',)
2025-02-11 12:37:15,299 DEBUG: Row ('Subtask',)
2025-02-11 12:37:15,299 DEBUG: Row ('User Story',)
2025-02-11 12:37:15,299 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project
2025-02-11 12:37:15,300 INFO: [cached since 2703s ago] {}
2025-02-11 12:37:15,300 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:37:15,300 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 12:37:15,301 DEBUG: Row (2, 'Project Beta', datetime.date(2024, 2, 1), datetime.date(2024, 11, 30), None, 10, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 12:37:15,301 DEBUG: Row (3, 'Project Gamma', datetime.date(2024, 3, 1), datetime.date(2024, 10, 31), None, 20, datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), datetime.datetime(2024, 12, 11, 1, 37, 19, 511738))
2025-02-11 12:37:15,301 DEBUG: Row (4, 'Project Theta', datetime.date(2024, 12, 11), datetime.date(2024, 12, 27), None, 0, datetime.datetime(2024, 12, 12, 19, 26, 42, 642098), datetime.datetime(2024, 12, 12, 19, 26, 42, 642102))
2025-02-11 12:37:15,301 DEBUG: Row (5, 'Project Delta', datetime.date(2025, 1, 4), datetime.date(2025, 3, 8), None, 0, datetime.datetime(2025, 1, 3, 8, 16, 18, 658051), datetime.datetime(2025, 1, 3, 8, 16, 18, 658058))
2025-02-11 12:37:15,301 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259))
2025-02-11 12:37:15,301 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:37:15,302 DEBUG: Tasks passed to template: [{'id': 290, 'name': 'issue: error when changing task type and', 'description': 'issue: error when changing task type and parent task before saving', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:00:03.417734', 'updated_at': '2025-02-10T09:15:09.284969'}, {'id': 298, 'name': 'example user story with parent epic 297', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 297, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:41:01.907455', 'updated_at': '2025-02-10T14:59:04.142570'}, {'id': 275, 'name': 'add sprints, cycles', 'description': 'Make naming customizable', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:48:52.680022', 'updated_at': '2025-02-10T08:38:37.622196'}, {'id': 276, 'name': 'add support for priority', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:49:26.189497', 'updated_at': '2025-02-10T08:28:47.447612'}, {'id': 264, 'name': 'close all / open all childtasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:25:20.101418', 'updated_at': '2025-02-10T08:47:14.915970'}, {'id': 285, 'name': 'add text truncation to project names in task list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:45:47.027805', 'updated_at': '2025-02-10T09:45:47.029729'}, {'id': 257, 'name': 'Update Task API Integration', 'description': "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 240, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-02-05T22:55:49.566819', 'updated_at': '2025-02-05T22:18:17.807154'}, {'id': 294, 'name': 'issue: task table filters not working', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:19:21.022598', 'updated_at': '2025-02-10T10:19:21.024676'}, {'id': 267, 'name': 'improvements to toggles and nested tasks', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:29:12.464594', 'updated_at': '2025-02-10T08:47:24.581680'}, {'id': 283, 'name': 'fix update title', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:58.769700', 'updated_at': '2025-02-10T08:46:47.282087'}, {'id': 271, 'name': 'make sure dynamically added rows has the exact same styling and includes every element', 'description': 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:21:07.108431', 'updated_at': '2025-02-10T08:38:47.340105'}, {'id': 273, 'name': 'disable parent task selector in epics', 'description': 'and add text, Epic can´t have parent tasks', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:45:20.740910', 'updated_at': '2025-02-10T08:39:17.639890'}, {'id': 269, 'name': 'fix styling for sweetalert', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'In Progress', 'created_at': '2025-02-08T15:54:56.717846', 'updated_at': '2025-02-10T08:39:32.172437'}, {'id': 286, 'name': 'add support for labels/tags', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:46:23.985620', 'updated_at': '2025-02-10T09:46:23.987564'}, {'id': 299, 'name': 'example sub task with parent user story 298', 'description': 'Test update 1\nTest update 2\nTest update 3', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 298, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:42:38.905700', 'updated_at': '2025-02-10T23:23:08.671464'}, {'id': 266, 'name': 'highlight the nested tasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:28:30.382949', 'updated_at': '2025-02-10T08:47:04.382929'}, {'id': 279, 'name': 'github integration', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:38.238202', 'updated_at': '2025-02-10T08:39:24.168451'}, {'id': 289, 'name': 'issue: parent task is lost when updating task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:56:25.273984', 'updated_at': '2025-02-10T09:12:47.626993'}, {'id': 278, 'name': 'search feature for tasks list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:03.369833', 'updated_at': '2025-02-10T08:39:04.005957'}, {'id': 281, 'name': 'add high level plan', 'description': 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:27:01.218606', 'updated_at': '2025-02-10T08:38:54.754760'}, {'id': 287, 'name': 'when moving a parent item to another project make sure the subtasks are moved as well', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:48:31.986870', 'updated_at': '2025-02-10T09:48:31.988859'}, {'id': 272, 'name': 'implement a markdown text editor like notion', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:28:18.300231', 'updated_at': '2025-02-10T08:28:39.669255'}, {'id': 293, 'name': 'click on title should copy the task title and id to clipboard', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:16:33.508209', 'updated_at': '2025-02-10T10:16:33.510414'}, {'id': 277, 'name': 'custom task workflow statuses', 'description': 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- Custom status\n-- Custom status\n- In Progress\n-- Custom status\n-- Custom status\n-- Custom status\n- Completed\n-- Custom status\n-- Custom status\n\n2. How can we track a task through different stages and save the sequence of events or stages the task has gone through?\nI´m thinking it could be good for mapping out processes, identifying bottlenecks and provide valuable insights while improving and streamlining workflows.\n- Stages\n- Contacts taken\n- Respons time \n- Time to action after responses\n- Dependencies\n\nNeed to be able to record every action related to this action.\nCommunication integrations\n- Slack\n- Email\n- Text messages\n- Phonecalls\n- Calendar events, meetings\n- Zoom, Google meet, Teams etc..\n\n\n2. Set custom statuses per project (can use tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:16:03.352588', 'updated_at': '2025-02-10T08:38:28.123328'}, {'id': 274, 'name': 'add support for goals, initiatives, okr´s', 'description': 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:46:27.204912', 'updated_at': '2025-02-10T08:28:17.663922'}, {'id': 280, 'name': 'logging (task and project history)', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:37:44.435112', 'updated_at': '2025-02-10T08:28:28.947805'}, {'id': 282, 'name': 'implement same task list in projects but filtered on project', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:17.786154', 'updated_at': '2025-02-10T09:41:17.787861'}, {'id': 296, 'name': 'issue: contributor is lost after updating task', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:26:43.881947', 'updated_at': '2025-02-10T10:26:43.884004'}, {'id': 288, 'name': 'when trying to move subtask to another project, make sure a warning is displayed', 'description': 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be lost"\nOR\n\nIs it possible, and is it desireable to keep parent child relationships across projects?\nSo that a parent can be in one project but the child tasks can be in different projects?\n\nLets say \nParent epic is \n"Internationalisation"\nChild user stories are\n- Timezones\n- Language\n- Currency\n- Day, Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:54:36.297869', 'updated_at': '2025-02-10T08:54:51.840686'}, {'id': 284, 'name': 'add type "issue/bug"', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:42:27.719439', 'updated_at': '2025-02-10T09:42:27.720908'}, {'id': 295, 'name': 'issue: drag and drop errors', 'description': '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:22:54.461413', 'updated_at': '2025-02-10T10:22:54.462542'}, {'id': 297, 'name': 'example parent epic', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:39:51.620509', 'updated_at': '2025-02-10T10:39:51.622712'}, {'id': 292, 'name': 'issue: assigning contributor does not work', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:11:12.273779', 'updated_at': '2025-02-10T10:11:12.274809'}, {'id': 265, 'name': 'smooth transition for toggles', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:27:23.422612', 'updated_at': '2025-02-10T08:46:55.831743'}, {'id': 270, 'name': 'the newest task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:07:34.368035', 'updated_at': '2025-02-10T01:07:34.372478'}, {'id': 291, 'name': 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:09:52.988609', 'updated_at': '2025-02-10T10:09:52.997455'}, {'id': 136, 'name': 'Page scroll should stay in position when reloading', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-16T18:21:50.187247', 'updated_at': '2025-01-16T19:22:36.214901'}, {'id': 130, 'name': 'Implement the Map of Task Relationships solution for drag-and-drop', 'description': 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.093022', 'updated_at': '2025-01-16T19:22:36.216705'}, {'id': 133, 'name': 'Step 4: Enhance Logging in models.py', 'description': 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nupdating the Task model in the following ways:\n\n1.\tLog Changes to parent_id:\n\t•\tLog changes to parent_id during updates, including old and new values.\n\t2.\tValidate Hierarchy with Logging:\n\t•\tLog detailed messages when validating hierarchy changes, especially for circular dependency checks.\n\nHere’s how the models.py can be updated:\n```\nfrom datetime import datetime, timezone\nfrom sqlalchemy import func, cast, CheckConstraint\nfrom sqlalchemy.orm import validates\nfrom app.extensions.db import db\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\nclass Task(db.Model):\n    __tablename__ = "task"\n    \n    # Other columns...\n\n    parent_id = db.Column(\n        db.Integer, db.ForeignKey("task.id"), index=True, nullable=True\n    )\n\n    # Relationships\n    parent = db.relationship(\n        "Task", remote_side=[id], back_populates="children", lazy="select"\n    )\n    children = db.relationship(\n        "Task", back_populates="parent", lazy="select"\n    )\n\n    \n\n\n    @staticmethod\n    def _validate_no_circular_references(new_parent_id):\n        """\n        Validates that there are no circular references in the task hierarchy.\n\n        Args:\n            new_parent_id (int): The new parent ID to validate.\n\n        Raises:\n            ValueError: If a circular reference is detected.\n        """\n        visited = set()\n        current_parent_id = new_parent_id\n\n        logger.info(f"Validating circular references for parent ID: {new_parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error(\n                    f"Circular reference detected: Parent ID {current_parent_id} already visited."\n                )\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            # Fetch the next parent_id in the hierarchy\n            parent = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not parent:\n                break  # Exit if no parent is found\n            current_parent_id = parent.parent_id\n\n        logger.info("No circular reference detected.")\n\n    @validates(\'parent_id\', \'task_type\')\n    def validate_task_changes(self, key, value):\n        """\n        Validates changes to \'parent_id\' and \'task_type\'.\n        Ensures hierarchy validity and checks for circular references.\n        """\n        logger.debug(f"Validating {key} change for Task {self.id}: {value}")\n\n        if key == \'parent_id\':\n            # Log changes to parent_id\n            if self.id and value != self.parent_id:\n                logger.info(f"Task {self.id}: Updating \'parent_id\' from {self.parent_id} to {value}")\n\n            # Prevent a task from being its own parent\n            if value and value == self.id:\n                logger.error("A task cannot be its own parent.")\n                raise ValueError("A task cannot be its own parent.")\n\n            # Check for circular references\n            if value:\n                Task.check_circular_reference(self.id, value)\n\n        elif key == \'task_type\':\n            # Log changes to task_type\n            if self.id and value != self.task_type:\n                logger.info(f"Task {self.id}: Updating \'task_type\' from {self.task_type} to {value}")\n\n        # Check hierarchy rules without triggering further validation\n        if key in [\'parent_id\', \'task_type\']:\n            self._validate_hierarchy_change(key, value)\n\n        logger.info(f"Validation passed for {key}: {value}")\n        return value\n\n    def _validate_hierarchy_change(self, key, value):\n        """\n        Validates hierarchy rules for the task based on `task_type` and `parent_id`.\n        """\n        if key == \'parent_id\' and value:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=value).first()\n            if not parent_task:\n                raise ValueError("Parent task does not exist.")\n\n            logger.debug(f"Validating hierarchy: Task {self.id}, Parent Type: {parent_task.task_type}")\n            if self.task_type == "User Story" and parent_task.task_type != "Epic":\n                raise ValueError("User Stories must have an Epic as a parent.")\n            if self.task_type == "Subtask" and parent_task.task_type != "User Story":\n                raise ValueError("Subtasks must have a User Story as a parent.")\n\n        elif key == \'task_type\' and self.parent_id:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=self.parent_id).first()\n            if parent_task:\n                logger.debug(f"Validating hierarchy: Task Type: {value}, Parent Type: {parent_task.task_type}")\n                if value == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError("User Stories must have an Epic as a parent.")\n                if value == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError("Subtasks must have a User Story as a parent.")\n\n        logger.info(f"Hierarchy validation passed for Task {self.id if self.id else \'New Task\'}.")\n\n    @staticmethod\n    def check_circular_reference(task_id, parent_id):\n        """\n        Iteratively checks for circular references in the task hierarchy.\n        Prevents stack overflow on deep hierarchies.\n        """\n        visited = set()\n        current_parent_id = parent_id\n\n        logger.info(f"Checking circular reference for Task {task_id} with Parent ID: {parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error("Circular reference detected!")\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            if current_parent_id == task_id:\n                logger.error("A task cannot be its own ancestor.")\n                raise ValueError("A task cannot be its own ancestor.")\n\n            # Fetch the next parent_id in the hierarchy\n            task = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not task:\n                break\n            current_parent_id = task.parent_id\n\n        logger.info("Circular reference check passed.")\n```\nKey Enhancements:\n\t1.\tlog_and_validate_parent_id_change:\n\t•\tLogs the old and new parent_id whenever it changes.\n\t•\tEnsures no circular references are introduced.\n\t2.\t_validate_no_circular_references:\n\t•\tValidates the parent_id field to prevent circular dependencies.\n\t•\tLogs progress and raises detailed errors if violations occur.\n\t3.\tlog_and_validate_task_type_change:\n\t•\tLogs changes to task_type with the old and new values.\n\t•\tRevalidates hierarchy rules when task_type changes.\n\t4.\tDetailed Logging for Circular Reference Validation:\n\t•\t_validate_no_circular_references and check_circular_reference methods log every step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:44:08.340041', 'updated_at': '2025-01-16T19:22:36.219710'}, {'id': 132, 'name': 'Step 1: Update tasks_table_interactions.js', 'description': '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the map for efficient parent-child relationship lookups instead of DOM traversal.\n\n```\nexport const TaskManager = {\n    init: function (csrfToken) {\n        this.csrfToken = csrfToken;\n        this.initTaskParentMap(); // Initialize the map\n        this.initDragAndDrop(); // Initialize drag-and-drop functionality\n    },\n\n    // Initialize a global map for task relationships\n    taskParentMap: new Map(),\n\n    // Build the taskParentMap from the DOM\n    initTaskParentMap: function () {\n        console.log("Initializing Task Parent Map...");\n        const rows = document.querySelectorAll("tr[data-task-id]");\n\n        rows.forEach((row) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = parseInt(row.dataset.parentId, 10) || null;\n            this.taskParentMap.set(taskId, parentId);\n        });\n\n        console.log("Task Parent Map initialized:", Array.from(this.taskParentMap.entries()));\n    },\n\n    // Update the map dynamically after drag-and-drop\n    updateTaskParentMap: function (taskId, parentId) {\n        console.log(`Updating Task Parent Map: Task ${taskId} -> Parent ${parentId}`);\n        this.taskParentMap.set(taskId, parentId);\n    },\n\n    initDragAndDrop: function () {\n        if (window.isDragAndDropInitialized) {\n            console.log("Drag-and-drop is already initialized.");\n            return;\n        }\n\n        console.log("Initializing drag-and-drop within TaskManager...");\n\n        const tableBody = document.querySelector("tbody");\n        if (!tableBody) {\n            console.warn("Task table body not found for drag-and-drop initialization");\n            return;\n        }\n\n        // Initialize Sortable.js for drag-and-drop functionality\n        Sortable.create(tableBody, {\n            handle: ".task-row", // Only draggable via `.task-row` elements\n            animation: 150, // Smooth animation\n            filter: ".task-open-link", // Prevent dragging on task links\n            preventOnFilter: true, // Prevent drag if filtered element is clicked\n            onEnd: async (event) => {\n                try {\n                    console.log("Drag-and-drop operation started...");\n                    const rows = Array.from(event.from.querySelectorAll(".task-row"));\n                    const reorderedTasks = [];\n\n                    rows.forEach((row, index) => {\n                        const taskId = parseInt(row.dataset.taskId, 10);\n                        let parentId = null;\n\n                        // Get the parent ID from the map or fallback to the dataset\n                        if (row.classList.contains("subtask-row")) {\n                            const parentRow = row.previousElementSibling;\n                            parentId = parentRow\n                                ? parseInt(parentRow.dataset.taskId, 10)\n                                : this.taskParentMap.get(taskId) || null;\n                        }\n\n                        // Update the taskParentMap dynamically\n                        this.updateTaskParentMap(taskId, parentId);\n\n                        reorderedTasks.push({\n                            id: taskId,\n                            sort_order: index + 1,\n                            parent_id: parentId,\n                        });\n                    });\n\n                    console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n                    console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n                    // Send the payload to the backend\n                    const response = await fetch("/tasks/reorder_subtasks", {\n                        method: "POST",\n                        headers: {\n                            "Content-Type": "application/json",\n                            "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n                        },\n                        body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n                    });\n\n                    if (!response.ok) {\n                        const errorData = await response.json();\n                        console.error("Error reordering tasks:", errorData);\n                        alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n                        return;\n                    }\n\n                    const data = await response.json();\n                    console.log("Task reordering successful:", data);\n\n                } catch (error) {\n                    console.error("Error during drag-and-drop operation:", error);\n                    alert("An unexpected error occurred while reordering tasks.");\n                }\n            },\n        });\n\n        window.isDragAndDropInitialized = true;\n        console.log("Drag-and-drop initialized successfully.");\n    },\n};\n```\n\nKey Updates:\n\t1.\tPrecomputed Map (taskParentMap):\n\t•\tThe initTaskParentMap function initializes the map by iterating over DOM elements and mapping each task’s ID to its parent ID.\n\t•\tThe updateTaskParentMap dynamically updates the map when tasks are reordered.\n\t2.\tEfficient Parent Lookup:\n\t•\tThe parentId is derived from the precomputed map rather than DOM traversal.\n\t3.\tBackend Payload:\n\t•\tA structured payload (reorderedTasks) is sent to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:44:08.338301', 'updated_at': '2025-02-06T21:59:17.417466'}, {'id': 134, 'name': 'Step 2: Update the Backend in routes.py', 'description': 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\nPlan for step 2:\n\t1.\tVerify the payload structure:\n\t•\tEnsure that the payload includes all necessary fields (id, sort_order, parent_id) for each task.\n\t•\tValidate that the parent-child relationships in the precomputed map (taskParentMap) are reflected correctly in the payload.\n\t2.\tSubmit the payload to the backend:\n\t•\tEnhance the fetch request in the onEnd function of initDragAndDrop to log detailed submission data.\n\t•\tConfirm the payload integrity in the browser console before submission.\n\t3.\tUpdate backend logging:\n\t•\tAdd logging to /reorder_subtasks in routes.py to confirm receipt of the correct payload and process parent-child updates.\n\t•\tLog before and after database updates for better debugging.\n\n-----\nUpdated tasks_table_interactions.js\n\nReplace this section:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    let parentId = null;\n```\nWith:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    const parentId = this.taskParentMap.get(taskId) || null;\n```\nThe this.taskParentMap provides a precomputed and dynamic mapping of taskId to parentId. By using this map, we avoid relying on DOM traversal logic (row.closest or row.previousElementSibling) during drag-and-drop operations, which can sometimes be unreliable or cumbersome.\n\nFull Revised onEnd section:\n```\nonEnd: async (event) => {\n    try {\n        console.log("Drag-and-drop operation started...");\n        const rows = Array.from(event.from.querySelectorAll(".task-row"));\n        const reorderedTasks = [];\n\n        rows.forEach((row, index) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = this.taskParentMap.get(taskId) || null;\n\n            // Update the taskParentMap dynamically\n            this.updateTaskParentMap(taskId, parentId);\n\n            reorderedTasks.push({\n                id: taskId,\n                sort_order: index + 1,\n                parent_id: parentId,\n            });\n        });\n\n        console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n        console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n        // Send the payload to the backend\n        const response = await fetch("/tasks/reorder_subtasks", {\n            method: "POST",\n            headers: {\n                "Content-Type": "application/json",\n                "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n            },\n            body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            console.error("Error reordering tasks:", errorData);\n            alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n            return;\n        }\n\n        const data = await response.json();\n        console.log("Task reordering successful:", data);\n\n    } catch (error) {\n        console.error("Error during drag-and-drop operation:", error);\n        alert("An unexpected error occurred while reordering tasks.");\n    }\n}\n```\n---------------------------------\nEnsure updates include:\n\t•\tBetter Logging: Adding logs for key events such as database changes and validation results.\n\t•\tInput Validation: Ensure all required fields (id, sort_order, parent_id) exist in the payload.\n\t•\tPost-Commit Validation: Confirm database updates after the commit.\n\t•\tImproved Error Handling: Include specific error messages and consistent rollback mechanisms.\n\nBelow is the revised reorder_subtasks route with descriptive comments for each section:\n```\n@bp.route("/reorder_subtasks", methods=["POST"])\ndef reorder_subtasks():\n    """\n    Reorder subtasks globally or reassign them to a different parent.\n\n    Steps:\n    - Parse and validate input from the frontend.\n    - Update parent-child relationships and sort order in the database.\n    - Commit changes and return a success response.\n    - Handle errors gracefully and provide detailed logs for debugging.\n    """\n    logger.info("Entering reorder_subtasks route...")\n    logger.info(f"Received payload for reordering tasks: {request.json}")\n\n    try:\n        # Step 1: Parse input\n        parent_id = request.json.get("parent_id", None)  # Optional parent ID for the tasks being reordered\n        ordered_tasks = request.json.get("ordered_tasks", [])\n\n        logger.debug(f"Parsed parent_id: {parent_id}")\n        logger.debug(f"Parsed ordered_tasks: {ordered_tasks}")\n\n        # Step 2: Validate input\n        if not isinstance(ordered_tasks, list) or not all(\n            isinstance(task, dict) and "id" in task and "sort_order" in task and "parent_id" in task\n            for task in ordered_tasks\n        ):\n            logger.error(f"Invalid input received for ordered_tasks: {ordered_tasks}")\n            return jsonify({\n                "error": "Invalid input format for \'ordered_tasks\'. Each task must include \'id\', \'sort_order\', and \'parent_id\'."\n            }), 400\n\n        # Step 3: Validate parent task (if applicable)\n        if parent_id is not None:\n            parent_task = Task.query.get(parent_id)\n            if not parent_task:\n                logger.error(f"Parent task with ID {parent_id} not found.")\n                return jsonify({"error": f"Parent ID {parent_id} is invalid or does not exist."}), 400\n\n        logger.info("Input validation passed. Proceeding with task updates...")\n\n        # Step 4: Process updates for each subtask\n        updated_subtasks = []  # Keep track of updated subtasks for post-commit validation\n\n        for task_data in ordered_tasks:\n            subtask_id = task_data["id"]\n            sort_order = task_data["sort_order"]\n            new_parent_id = task_data["parent_id"]\n\n            # Fetch the subtask from the database\n            subtask = Task.query.get(subtask_id)\n            if not subtask:\n                logger.warning(f"Subtask ID {subtask_id} not found. Skipping...")\n                continue\n\n            # Log and update parent_id if it changes\n            if new_parent_id is not None and new_parent_id != subtask.parent_id:\n                logger.info(f"Reassigning subtask {subtask.id} to new parent {new_parent_id}")\n                subtask.parent_id = new_parent_id\n\n            # Update sort order\n            subtask.sort_order = sort_order\n            logger.debug(f"Updated subtask {subtask.id}: parent_id={subtask.parent_id}, sort_order={subtask.sort_order}")\n\n            # Add to the list of updated subtasks for validation\n            updated_subtasks.append(subtask)\n\n        # Step 5: Commit changes to the database\n        try:\n            db.session.commit()\n            logger.info(f"Subtasks reordered successfully: {[task[\'id\'] for task in ordered_tasks]}")\n        except Exception as e:\n            logger.error(f"Error committing changes to the database: {str(e)}")\n            db.session.rollback()\n            return jsonify({"error": "Failed to save changes to the database. Please try again."}), 500\n\n        # Step 6: Post-commit validation\n        for subtask in updated_subtasks:\n            logger.debug(f"Post-commit parent_id for task {subtask.id}: {subtask.parent_id}")\n            logger.debug(f"Post-commit sort_order for task {subtask.id}: {subtask.sort_order}")\n\n        # Step 7: Return success response\n        return jsonify({\n            "success": True,\n            "message": "Subtasks reordered successfully.",\n            "updated_subtasks": [subtask.id for subtask in updated_subtasks]\n        }), 200\n\n    except Exception as e:\n        # Step 8: Handle unexpected errors\n        logger.error(f"Error while reordering subtasks: {str(e)}", exc_info=True)\n        db.session.rollback()\n        return jsonify({"error": "An unexpected error occurred while reordering subtasks."}), 500\n```\nKey Changes and Descriptive Comments\n\t1.\tInput Parsing:\n\t•\tExtracts parent_id and ordered_tasks from the request payload.\n\t•\tLogs the parsed values for debugging.\n\t2.\tInput Validation:\n\t•\tEnsures ordered_tasks is a list of dictionaries with the required keys.\n\t•\tValidates parent_id if provided, ensuring the parent task exists in the database.\n\t3.\tUpdate Processing:\n\t•\tIterates through ordered_tasks, updating each task’s parent_id and sort_order.\n\t•\tLogs changes for each task.\n\t4.\tDatabase Commit:\n\t•\tCommits all updates in a single transaction.\n\t•\tLogs success or rolls back changes in case of an error.\n\t5.\tPost-Commit Validation:\n\t•\tVerifies that the parent_id and sort_order changes were successfully saved to the database.\n\t6.\tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:46:29.348853', 'updated_at': '2025-02-06T21:59:21.617065'}, {'id': 131, 'name': 'Step 5: Update utils.py', 'description': 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nChanges to Make:\n\t1.\tEnhance Task Filtering:\n\t•\tEnsure the filters handle parent-child relationships explicitly.\n\t•\tAdd options to include or exclude subtasks in queries.\n\t2.\tUtility Function for Debugging Parent-Child Relationships:\n\t•\tProvide a function to generate a map or list of parent-child relationships for debugging purposes.\n\t3.\tValidation Functions:\n\t•\tAdd a utility function to validate parent-child relationships and ensure no circular dependencies.\n\nUpdated utils.py Code:\n```\nimport logging\nfrom sqlalchemy import func\nfrom sqlalchemy.orm import joinedload\nfrom app.extensions.db import db\nfrom app.tasks.models import Task\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\n\nclass TaskService:\n    @staticmethod\n    def filter_tasks(filters=None, include_subtasks=True, page=None, per_page=None):\n        """\n        Dynamically filters tasks with an option to include or exclude subtasks.\n\n        Args:\n            filters (dict): Filtering criteria.\n            include_subtasks (bool): Whether to include subtasks in the query.\n            page (int, optional): Page number for pagination.\n            per_page (int, optional): Items per page for pagination.\n\n        Returns:\n            Query or Pagination: A SQLAlchemy query object or paginated results.\n        """\n        query = Task.query.options(\n            db.joinedload(Task.project).joinedload(Project.contributors),\n            db.joinedload(Task.contributor),\n            db.joinedload(Task.children),\n        ).order_by(Task.sort_order)\n\n        if filters:\n            logger.debug(f"Applying filters: {filters}")\n\n            # Apply standard filters\n            if "is_archived" in filters:\n                query = query.filter(Task.is_archived == filters["is_archived"])\n            if "project_id" in filters:\n                query = query.filter(Task.project_id == filters["project_id"])\n            if "task_type" in filters:\n                if isinstance(filters["task_type"], list):\n                    query = query.filter(Task.task_type.in_(filters["task_type"]))\n                else:\n                    query = query.filter(Task.task_type == filters["task_type"])\n            if "completion_status" in filters:\n                completion_map = {"completed": True, "in_progress": False}\n                if filters["completion_status"] in completion_map:\n                    query = query.filter(Task.completed == completion_map[filters["completion_status"]])\n\n            # Optionally exclude subtasks\n            if not include_subtasks:\n                query = query.filter(Task.task_type != "Subtask")\n\n        logger.debug(f"Generated query: {query}")\n\n        # Pagination\n        if page and per_page:\n            return query.paginate(page=page, per_page=per_page, error_out=False)\n        return query\n\n    @staticmethod\n    def debug_parent_child_relationships(project_id=None):\n        """\n        Generates a debug map of parent-child relationships for all tasks.\n\n        Args:\n            project_id (int, optional): Restrict to tasks from a specific project.\n\n        Returns:\n            dict: A dictionary mapping parent IDs to their child task IDs.\n        """\n        query = Task.query\n        if project_id:\n            query = query.filter(Task.project_id == project_id)\n\n        tasks = query.options(\n            db.load_only(Task.id, Task.parent_id)\n        ).all()\n\n        relationship_map = {}\n        for task in tasks:\n            if task.parent_id not in relationship_map:\n                relationship_map[task.parent_id] = []\n            relationship_map[task.parent_id].append(task.id)\n\n        logger.debug(f"Parent-Child Relationship Map: {relationship_map}")\n        return relationship_map\n\n    @staticmethod\n    def validate_parent_child_relationships():\n        """\n        Validates all parent-child relationships in the database to ensure they conform to hierarchy rules.\n\n        Raises:\n            ValueError: If invalid relationships are detected.\n        """\n        tasks = Task.query.options(db.joinedload(Task.parent)).all()\n\n        for task in tasks:\n            if task.parent_id:\n                parent_task = task.parent\n                if not parent_task:\n                    raise ValueError(f"Task {task.id} has an invalid parent ID {task.parent_id}.")\n\n                # Validate hierarchy rules\n                if task.task_type == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError(f"User Story {task.id} must have an Epic as its parent.")\n                if task.task_type == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError(f"Subtask {task.id} must have a User Story as its parent.")\n\n        logger.info("All parent-child relationships are valid.")\n\n    @staticmethod\n    def get_all_task_ids_with_parents():\n        """\n        Returns a flat list of tasks with their parent IDs for debugging.\n\n        Returns:\n            list: A list of tuples (task_id, parent_id).\n        """\n        tasks = Task.query.with_entities(Task.id, Task.parent_id).all()\n        logger.debug(f"Task IDs with Parent IDs: {tasks}")\n        return tasks\n```\n\n\nExplanation of Changes:\n\t1.\tfilter_tasks Enhancements:\n\t•\tAdded include_subtasks parameter to optionally exclude subtasks from the query.\n\t2.\tdebug_parent_child_relationships:\n\t•\tCreates a parent-child relationship map for debugging purposes.\n\t3.\tvalidate_parent_child_relationships:\n\t•\tIterates through all tasks to validate parent-child hierarchy and ensures no invalid relationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.091824', 'updated_at': '2025-01-16T19:22:36.236691'}, {'id': 135, 'name': 'Step 3: Update list.html', 'description': 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already includes everything needed. No required changes.\n\nHere´s the relevant section of list.html:\n\n```\n<tr id="task-{{ task.id }}"\n                class="task-row {% if task.task_type == \'Subtask\' %}subtask-row{% elif task.task_type == \'User Story\' %}user-story-row{% elif task.task_type == \'Epic\' %}epic-row{% endif %}"\n                style="background-color: \n                {% if task.task_type == \'Subtask\' %}\n                    rgba(200, 230, 255, 0.5); /* Light blue for Subtask */\n                {% elif task.task_type == \'User Story\' %}\n                    rgba(255, 255, 200, 0.5); /* Light yellow for User Story */\n                {% elif task.task_type == \'Epic\' %}\n                    rgba(255, 200, 200, 0.5); /* Light red for Epic */\n                {% else %}\n                    rgba(240, 240, 240, 1); /* Default light gray */\n                {% endif %};"\n                data-task-id="{{ task.id }}"\n                data-parent-id="{{ task.parent_id or \'\' }}"\n                data-level="{{ depth }}">\n                <td><input type="checkbox" name="batch_update" value="{{ task.id }}"></td>\n                <td>\n                    {% if tasks|selectattr("parent_id", "equalto", task.id)|list %}\n                    <button class="btn btn-sm toggle-details" data-task-id="{{ task.id }}" aria-label="Toggle details for task {{ task.name }}">\n                        <i class="bi bi-chevron-right"></i>\n                    </button>\n                    {% endif %}\n                </td>\n                <td class="fw-medium fs-6 \n                {% if task.task_type == \'Epic\' %}\n                    epic-cell\n                {% elif task.task_type == \'User Story\' %}\n                    user-story-cell\n                {% elif task.task_type == \'Subtask\' %}\n                    subtask-cell\n                {% endif %}" \n                style="padding-left: {{ depth|default(0) * 20 }}px; position: relative;">\n                <span class="bi fs-6\n                {% if task.task_type == \'Epic\' %}\n                    bi-circle-fill\n                {% elif task.task_type == \'User Story\' %}\n                    bi-circle-half\n                {% elif task.task_type == \'Subtask\' %}\n                    bi-circle\n                {% endif %}">\n                </span>\n                {{ task.name }}\n                <small class="text-muted fw-light">\n                    (Parent-ID: {{ task.parent_id or \'None\' }})\n                </small>\n                <!-- Open Link -->\n                <a href="#" class="task-open-link" data-task-id="{{ task.id }}">\n                    <i class="bi bi-arrows-angle-expand" style="font-size: 0.8rem; color: white;"></i>\n                    Open\n                </a>\n            </td>\n                <td class="fw-light fs-6">\n                    <small class>\n                    LAC-{{ task.id }}\n                    </small>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light text-bg-secondary">\n                        {{ task.project if task.project else "Unknown Project" }}\n                    </span>\n                </td>\n                <td class="fs-6" data-contributor-column>{{ task.assigned_to if task.assigned_to else "Unassigned" }}</td>\n                <td class="fs-6">{{ task.story_points }}</td>\n                <td class="fs-6">\n                    <span class="badge rounded-pill fw-light text-bg-light">\n                        {{ task.task_type }}\n                    </span>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light {% if task.completed %}text-bg-success{% else %}text-bg-warning{% endif %}">\n                        {{ "Completed" if task.completed else "In Progress" }}\n                    </span>\n                </td>\n                <td>\n                    <!-- Delete Icon -->\n                    <button class="btn btn-dark btn-sm delete-task-btn" style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .2rem; --bs-btn-font-size: .75rem;" data-task-id="{{ task.id }}" aria-label="Deletes task {{ task.id }}">\n                        <i class="bi bi-trash"></i>\n                    </button>\n                </td>\n            </tr>\n            {% for child in tasks if child.parent_id == task.id %}\n                {{ render_task(child, tasks, depth + 1) }}\n            {% endfor %}\n            {% endmacro %}\n            \n            <!-- Render top-level tasks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:46:29.349784', 'updated_at': '2025-01-16T19:22:36.238473'}, {'id': 82, 'name': 'Implement Third-Party Authentication', 'description': 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitHub Login involves integrating OAuth 2.0, which both services support. The complexity depends on your app’s existing setup, frameworks, and experience with third-party authentication. Below is a breakdown:\n\nKey Steps for Implementing Google or GitHub Login\n\t1.\tSet Up OAuth Credentials:\n\t•\tRegister your application in the Google Cloud Console or GitHub Developer Settings.\n\t•\tObtain the client ID and client secret.\n\t2.\tInstall Required Libraries:\n\t•\tUse a library for OAuth (e.g., flask-oauthlib, python-social-auth, or authlib).\n\t•\tPopular frameworks like Flask and Django already have robust integrations for OAuth providers.\n\t3.\tBackend Configuration:\n\t•\tImplement an endpoint to handle the OAuth flow (/auth/login/google or /auth/login/github).\n\t•\tConfigure your app to send users to Google or GitHub’s authentication page.\n\t•\tHandle the OAuth callback to exchange the authorization code for an access token.\n\t•\tVerify the token and fetch user information (e.g., email, name).\n\t4.\tLink OAuth to User Registration:\n\t•\tOn successful login, create or retrieve a user in your database.\n\t•\tStore the user’s details like email, OAuth provider ID, and access token.\n\t5.\tFrontend Integration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T12:15:54.291625', 'updated_at': '2025-01-16T19:22:36.239866'}, {'id': 62, 'name': 'Add OAuth integration for Google Login', 'description': 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.241200'}, {'id': 64, 'name': 'Setup project credentials for Google API', 'description': 'Generate client ID and secret from Google API Console for your application.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.242497'}, {'id': 67, 'name': 'Test Google OAuth flow', 'description': 'Verify the OAuth flow using test accounts and check the token exchange.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.243780'}, {'id': 65, 'name': 'Implement backend endpoints for Google OAuth', 'description': 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.244932'}, {'id': 63, 'name': 'Add OAuth integration for GitHub Login', 'description': 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.246358'}, {'id': 68, 'name': 'Register application in GitHub Developer Console', 'description': 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.247746'}, {'id': 69, 'name': 'Handle callback from GitHub', 'description': 'Implement the callback endpoint to process the authorization code from GitHub.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.248912'}, {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}, {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}, {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-02-11T11:36:20.238219'}, {'id': 108, 'name': '1.1.2 Backend API for Registration', 'description': '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:33.067643'}, {'id': 112, 'name': '1.2.2 Frontend Login Page', 'description': 'Develop a frontend form for user login with email and password inputs.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.683644'}, {'id': 109, 'name': '1.1.3 Create Frontend Registration Page', 'description': 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.684988'}, {'id': 110, 'name': '1.1.4 Unit Tests for Registration', 'description': 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.686902'}, {'id': 101, 'name': '1.2 User Login', 'description': 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:25:53.687936'}, {'id': 111, 'name': '1.2.1 Backend API for Login', 'description': 'Create POST /api/login endpoint to handle user login.\njjsjj', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.689096'}, {'id': 113, 'name': '1.2.3 Session Management', 'description': 'Implement secure session handling using cookies or JWT.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:20.968680'}, {'id': 114, 'name': '1.2.4 Unit Tests for Login', 'description': 'Write tests for successful and failed login attempts.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:22:36.265866'}, {'id': 106, 'name': 'Password Reset', 'description': 'As a user, I want to reset my password securely using email.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.267247'}, {'id': 128, 'name': 'Frontend Password Reset Page', 'description': 'Develop a page for users to enter a new password using a valid token.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.269158'}, {'id': 129, 'name': 'Testing Password Reset', 'description': 'Write tests for email delivery, token validation, and password updates.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.270849'}, {'id': 102, 'name': 'Logout', 'description': 'As a user, I want to log out so that I can end my session securely.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.272605'}, {'id': 117, 'name': 'Tests for Logout', 'description': 'Verify session invalidation and redirection to the login page.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.274575'}, {'id': 116, 'name': 'Frontend Logout Button', 'description': 'Add a logout button to the UI and handle session clearing.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-02-09T12:31:17.939784'}, {'id': 115, 'name': 'Backend API for Logout', 'description': 'Create POST /api/logout endpoint to invalidate user sessions.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.277547'}, {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}, {'id': 45, 'name': 'Display Default Value in Dropdown', 'description': 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.280493'}, {'id': 50, 'name': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'In Progress', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:22.274304'}, {'id': 51, 'name': 'Set Default Value', 'description': 'Set the default value in the dropdown based on the retrieved data.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 45, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 1, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.283309'}, {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882'}, {'id': 54, 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 46, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:29.251047'}, {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:26:23.067490'}, {'id': 56, 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:16.233517'}, {'id': 55, 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:08.099271'}, {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:59.651639'}, {'id': 57, 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:51.310240'}, {'id': 58, 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:43.569501'}, {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:36.133259'}, {'id': 59, 'name': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:15.491910'}, {'id': 60, 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 49, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:28.367797'}, {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-11T08:25:07.992524'}, {'id': 52, 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 41, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:01.469601'}, {'id': 53, 'name': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:24:54.245010'}, {'id': 42, 'name': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:47.274896'}, {'id': 43, 'name': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:33.908549'}, {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-02-11T08:24:26.494016'}, {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-02-11T08:24:21.069473'}, {'id': 90, 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:13.204884'}, {'id': 88, 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:05.873554'}, {'id': 89, 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:23:58.436495'}, {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-02-11T08:23:51.269557'}, {'id': 93, 'name': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:42.771565'}, {'id': 91, 'name': 'Update database schema for task ownership', 'description': 'Add a column or relationship to assign a single owner per task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:33.670381'}, {'id': 92, 'name': 'Develop backend API for assigning task owner', 'description': 'Create endpoints to assign or update the owner of a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T09:19:44.027744'}, {'id': 87, 'name': 'Create and customize contributor roles', 'description': 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:43.600461', 'updated_at': '2025-02-11T08:23:23.402442'}, {'id': 96, 'name': 'Allow admin users to create and customize contributor roles via frontend', 'description': 'Provide UI functionality for admins to manage contributor roles dynamically.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:23:13.139282'}, {'id': 94, 'name': 'Add database support for contributor roles', 'description': 'Introduce a roles table and link contributors to specific roles for tasks.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:56.181530'}, {'id': 95, 'name': 'Develop backend API for managing contributor roles', 'description': 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:02.276492'}, {'id': 127, 'name': 'Backend API for Password Reset', 'description': 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-02-10T23:59:50.734037'}, {'id': 126, 'name': 'Email Configuration for Password Reset', 'description': 'Configure email service to send password reset links.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.334340'}, {'id': 104, 'name': 'Middleware for Role Enforcement', 'description': 'As a system, I want to enforce role-based access to specific routes.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:23:40.346816'}, {'id': 122, 'name': 'Testing Role Enforcement', 'description': 'Write tests to ensure proper access control based on roles.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.185693'}, {'id': 121, 'name': 'Develop Role Enforcement Middleware', 'description': 'Implement middleware to check user roles for access control.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.187439'}, {'id': 105, 'name': 'Profile Management', 'description': 'As a user, I want to update my profile (username, email, password).', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.339830'}, {'id': 123, 'name': 'Backend API for Profile Management', 'description': 'Create PATCH /api/profile endpoint to update user details.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.678781'}, {'id': 125, 'name': 'Testing Profile Updates', 'description': 'Write tests for profile update functionality.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.680382'}]
2025-02-11 12:37:15,305 DEBUG: Task types: ['all', 'Epic', 'Subtask', 'User Story']
2025-02-11 12:37:15,305 DEBUG: Projects: [<Project Project Alpha (ID: 1)>, <Project Project Beta (ID: 2)>, <Project Project Gamma (ID: 3)>, <Project Project Theta (ID: 4)>, <Project Project Delta (ID: 5)>, <Project PMS - Feature Requests (ID: 7)>, <Project PMS - Backlog (ID: 6)>]
2025-02-11 12:37:15,306 DEBUG: Tasks response: [{'id': 290, 'name': 'issue: error when changing task type and', 'description': 'issue: error when changing task type and parent task before saving', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:00:03.417734', 'updated_at': '2025-02-10T09:15:09.284969'}, {'id': 298, 'name': 'example user story with parent epic 297', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 297, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:41:01.907455', 'updated_at': '2025-02-10T14:59:04.142570'}, {'id': 275, 'name': 'add sprints, cycles', 'description': 'Make naming customizable', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:48:52.680022', 'updated_at': '2025-02-10T08:38:37.622196'}, {'id': 276, 'name': 'add support for priority', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:49:26.189497', 'updated_at': '2025-02-10T08:28:47.447612'}, {'id': 264, 'name': 'close all / open all childtasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:25:20.101418', 'updated_at': '2025-02-10T08:47:14.915970'}, {'id': 285, 'name': 'add text truncation to project names in task list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:45:47.027805', 'updated_at': '2025-02-10T09:45:47.029729'}, {'id': 257, 'name': 'Update Task API Integration', 'description': "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 240, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-02-05T22:55:49.566819', 'updated_at': '2025-02-05T22:18:17.807154'}, {'id': 294, 'name': 'issue: task table filters not working', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:19:21.022598', 'updated_at': '2025-02-10T10:19:21.024676'}, {'id': 267, 'name': 'improvements to toggles and nested tasks', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:29:12.464594', 'updated_at': '2025-02-10T08:47:24.581680'}, {'id': 283, 'name': 'fix update title', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:58.769700', 'updated_at': '2025-02-10T08:46:47.282087'}, {'id': 271, 'name': 'make sure dynamically added rows has the exact same styling and includes every element', 'description': 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:21:07.108431', 'updated_at': '2025-02-10T08:38:47.340105'}, {'id': 273, 'name': 'disable parent task selector in epics', 'description': 'and add text, Epic can´t have parent tasks', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:45:20.740910', 'updated_at': '2025-02-10T08:39:17.639890'}, {'id': 269, 'name': 'fix styling for sweetalert', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'In Progress', 'created_at': '2025-02-08T15:54:56.717846', 'updated_at': '2025-02-10T08:39:32.172437'}, {'id': 286, 'name': 'add support for labels/tags', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:46:23.985620', 'updated_at': '2025-02-10T09:46:23.987564'}, {'id': 299, 'name': 'example sub task with parent user story 298', 'description': 'Test update 1\nTest update 2\nTest update 3', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 298, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:42:38.905700', 'updated_at': '2025-02-10T23:23:08.671464'}, {'id': 266, 'name': 'highlight the nested tasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:28:30.382949', 'updated_at': '2025-02-10T08:47:04.382929'}, {'id': 279, 'name': 'github integration', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:38.238202', 'updated_at': '2025-02-10T08:39:24.168451'}, {'id': 289, 'name': 'issue: parent task is lost when updating task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:56:25.273984', 'updated_at': '2025-02-10T09:12:47.626993'}, {'id': 278, 'name': 'search feature for tasks list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:03.369833', 'updated_at': '2025-02-10T08:39:04.005957'}, {'id': 281, 'name': 'add high level plan', 'description': 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:27:01.218606', 'updated_at': '2025-02-10T08:38:54.754760'}, {'id': 287, 'name': 'when moving a parent item to another project make sure the subtasks are moved as well', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:48:31.986870', 'updated_at': '2025-02-10T09:48:31.988859'}, {'id': 272, 'name': 'implement a markdown text editor like notion', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:28:18.300231', 'updated_at': '2025-02-10T08:28:39.669255'}, {'id': 293, 'name': 'click on title should copy the task title and id to clipboard', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:16:33.508209', 'updated_at': '2025-02-10T10:16:33.510414'}, {'id': 277, 'name': 'custom task workflow statuses', 'description': 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- Custom status\n-- Custom status\n- In Progress\n-- Custom status\n-- Custom status\n-- Custom status\n- Completed\n-- Custom status\n-- Custom status\n\n2. How can we track a task through different stages and save the sequence of events or stages the task has gone through?\nI´m thinking it could be good for mapping out processes, identifying bottlenecks and provide valuable insights while improving and streamlining workflows.\n- Stages\n- Contacts taken\n- Respons time \n- Time to action after responses\n- Dependencies\n\nNeed to be able to record every action related to this action.\nCommunication integrations\n- Slack\n- Email\n- Text messages\n- Phonecalls\n- Calendar events, meetings\n- Zoom, Google meet, Teams etc..\n\n\n2. Set custom statuses per project (can use tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:16:03.352588', 'updated_at': '2025-02-10T08:38:28.123328'}, {'id': 274, 'name': 'add support for goals, initiatives, okr´s', 'description': 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:46:27.204912', 'updated_at': '2025-02-10T08:28:17.663922'}, {'id': 280, 'name': 'logging (task and project history)', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:37:44.435112', 'updated_at': '2025-02-10T08:28:28.947805'}, {'id': 282, 'name': 'implement same task list in projects but filtered on project', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:17.786154', 'updated_at': '2025-02-10T09:41:17.787861'}, {'id': 296, 'name': 'issue: contributor is lost after updating task', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:26:43.881947', 'updated_at': '2025-02-10T10:26:43.884004'}, {'id': 288, 'name': 'when trying to move subtask to another project, make sure a warning is displayed', 'description': 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be lost"\nOR\n\nIs it possible, and is it desireable to keep parent child relationships across projects?\nSo that a parent can be in one project but the child tasks can be in different projects?\n\nLets say \nParent epic is \n"Internationalisation"\nChild user stories are\n- Timezones\n- Language\n- Currency\n- Day, Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:54:36.297869', 'updated_at': '2025-02-10T08:54:51.840686'}, {'id': 284, 'name': 'add type "issue/bug"', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:42:27.719439', 'updated_at': '2025-02-10T09:42:27.720908'}, {'id': 295, 'name': 'issue: drag and drop errors', 'description': '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:22:54.461413', 'updated_at': '2025-02-10T10:22:54.462542'}, {'id': 297, 'name': 'example parent epic', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:39:51.620509', 'updated_at': '2025-02-10T10:39:51.622712'}, {'id': 292, 'name': 'issue: assigning contributor does not work', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:11:12.273779', 'updated_at': '2025-02-10T10:11:12.274809'}, {'id': 265, 'name': 'smooth transition for toggles', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:27:23.422612', 'updated_at': '2025-02-10T08:46:55.831743'}, {'id': 270, 'name': 'the newest task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:07:34.368035', 'updated_at': '2025-02-10T01:07:34.372478'}, {'id': 291, 'name': 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:09:52.988609', 'updated_at': '2025-02-10T10:09:52.997455'}, {'id': 136, 'name': 'Page scroll should stay in position when reloading', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-16T18:21:50.187247', 'updated_at': '2025-01-16T19:22:36.214901'}, {'id': 130, 'name': 'Implement the Map of Task Relationships solution for drag-and-drop', 'description': 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.093022', 'updated_at': '2025-01-16T19:22:36.216705'}, {'id': 133, 'name': 'Step 4: Enhance Logging in models.py', 'description': 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nupdating the Task model in the following ways:\n\n1.\tLog Changes to parent_id:\n\t•\tLog changes to parent_id during updates, including old and new values.\n\t2.\tValidate Hierarchy with Logging:\n\t•\tLog detailed messages when validating hierarchy changes, especially for circular dependency checks.\n\nHere’s how the models.py can be updated:\n```\nfrom datetime import datetime, timezone\nfrom sqlalchemy import func, cast, CheckConstraint\nfrom sqlalchemy.orm import validates\nfrom app.extensions.db import db\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\nclass Task(db.Model):\n    __tablename__ = "task"\n    \n    # Other columns...\n\n    parent_id = db.Column(\n        db.Integer, db.ForeignKey("task.id"), index=True, nullable=True\n    )\n\n    # Relationships\n    parent = db.relationship(\n        "Task", remote_side=[id], back_populates="children", lazy="select"\n    )\n    children = db.relationship(\n        "Task", back_populates="parent", lazy="select"\n    )\n\n    \n\n\n    @staticmethod\n    def _validate_no_circular_references(new_parent_id):\n        """\n        Validates that there are no circular references in the task hierarchy.\n\n        Args:\n            new_parent_id (int): The new parent ID to validate.\n\n        Raises:\n            ValueError: If a circular reference is detected.\n        """\n        visited = set()\n        current_parent_id = new_parent_id\n\n        logger.info(f"Validating circular references for parent ID: {new_parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error(\n                    f"Circular reference detected: Parent ID {current_parent_id} already visited."\n                )\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            # Fetch the next parent_id in the hierarchy\n            parent = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not parent:\n                break  # Exit if no parent is found\n            current_parent_id = parent.parent_id\n\n        logger.info("No circular reference detected.")\n\n    @validates(\'parent_id\', \'task_type\')\n    def validate_task_changes(self, key, value):\n        """\n        Validates changes to \'parent_id\' and \'task_type\'.\n        Ensures hierarchy validity and checks for circular references.\n        """\n        logger.debug(f"Validating {key} change for Task {self.id}: {value}")\n\n        if key == \'parent_id\':\n            # Log changes to parent_id\n            if self.id and value != self.parent_id:\n                logger.info(f"Task {self.id}: Updating \'parent_id\' from {self.parent_id} to {value}")\n\n            # Prevent a task from being its own parent\n            if value and value == self.id:\n                logger.error("A task cannot be its own parent.")\n                raise ValueError("A task cannot be its own parent.")\n\n            # Check for circular references\n            if value:\n                Task.check_circular_reference(self.id, value)\n\n        elif key == \'task_type\':\n            # Log changes to task_type\n            if self.id and value != self.task_type:\n                logger.info(f"Task {self.id}: Updating \'task_type\' from {self.task_type} to {value}")\n\n        # Check hierarchy rules without triggering further validation\n        if key in [\'parent_id\', \'task_type\']:\n            self._validate_hierarchy_change(key, value)\n\n        logger.info(f"Validation passed for {key}: {value}")\n        return value\n\n    def _validate_hierarchy_change(self, key, value):\n        """\n        Validates hierarchy rules for the task based on `task_type` and `parent_id`.\n        """\n        if key == \'parent_id\' and value:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=value).first()\n            if not parent_task:\n                raise ValueError("Parent task does not exist.")\n\n            logger.debug(f"Validating hierarchy: Task {self.id}, Parent Type: {parent_task.task_type}")\n            if self.task_type == "User Story" and parent_task.task_type != "Epic":\n                raise ValueError("User Stories must have an Epic as a parent.")\n            if self.task_type == "Subtask" and parent_task.task_type != "User Story":\n                raise ValueError("Subtasks must have a User Story as a parent.")\n\n        elif key == \'task_type\' and self.parent_id:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=self.parent_id).first()\n            if parent_task:\n                logger.debug(f"Validating hierarchy: Task Type: {value}, Parent Type: {parent_task.task_type}")\n                if value == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError("User Stories must have an Epic as a parent.")\n                if value == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError("Subtasks must have a User Story as a parent.")\n\n        logger.info(f"Hierarchy validation passed for Task {self.id if self.id else \'New Task\'}.")\n\n    @staticmethod\n    def check_circular_reference(task_id, parent_id):\n        """\n        Iteratively checks for circular references in the task hierarchy.\n        Prevents stack overflow on deep hierarchies.\n        """\n        visited = set()\n        current_parent_id = parent_id\n\n        logger.info(f"Checking circular reference for Task {task_id} with Parent ID: {parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error("Circular reference detected!")\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            if current_parent_id == task_id:\n                logger.error("A task cannot be its own ancestor.")\n                raise ValueError("A task cannot be its own ancestor.")\n\n            # Fetch the next parent_id in the hierarchy\n            task = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not task:\n                break\n            current_parent_id = task.parent_id\n\n        logger.info("Circular reference check passed.")\n```\nKey Enhancements:\n\t1.\tlog_and_validate_parent_id_change:\n\t•\tLogs the old and new parent_id whenever it changes.\n\t•\tEnsures no circular references are introduced.\n\t2.\t_validate_no_circular_references:\n\t•\tValidates the parent_id field to prevent circular dependencies.\n\t•\tLogs progress and raises detailed errors if violations occur.\n\t3.\tlog_and_validate_task_type_change:\n\t•\tLogs changes to task_type with the old and new values.\n\t•\tRevalidates hierarchy rules when task_type changes.\n\t4.\tDetailed Logging for Circular Reference Validation:\n\t•\t_validate_no_circular_references and check_circular_reference methods log every step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:44:08.340041', 'updated_at': '2025-01-16T19:22:36.219710'}, {'id': 132, 'name': 'Step 1: Update tasks_table_interactions.js', 'description': '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the map for efficient parent-child relationship lookups instead of DOM traversal.\n\n```\nexport const TaskManager = {\n    init: function (csrfToken) {\n        this.csrfToken = csrfToken;\n        this.initTaskParentMap(); // Initialize the map\n        this.initDragAndDrop(); // Initialize drag-and-drop functionality\n    },\n\n    // Initialize a global map for task relationships\n    taskParentMap: new Map(),\n\n    // Build the taskParentMap from the DOM\n    initTaskParentMap: function () {\n        console.log("Initializing Task Parent Map...");\n        const rows = document.querySelectorAll("tr[data-task-id]");\n\n        rows.forEach((row) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = parseInt(row.dataset.parentId, 10) || null;\n            this.taskParentMap.set(taskId, parentId);\n        });\n\n        console.log("Task Parent Map initialized:", Array.from(this.taskParentMap.entries()));\n    },\n\n    // Update the map dynamically after drag-and-drop\n    updateTaskParentMap: function (taskId, parentId) {\n        console.log(`Updating Task Parent Map: Task ${taskId} -> Parent ${parentId}`);\n        this.taskParentMap.set(taskId, parentId);\n    },\n\n    initDragAndDrop: function () {\n        if (window.isDragAndDropInitialized) {\n            console.log("Drag-and-drop is already initialized.");\n            return;\n        }\n\n        console.log("Initializing drag-and-drop within TaskManager...");\n\n        const tableBody = document.querySelector("tbody");\n        if (!tableBody) {\n            console.warn("Task table body not found for drag-and-drop initialization");\n            return;\n        }\n\n        // Initialize Sortable.js for drag-and-drop functionality\n        Sortable.create(tableBody, {\n            handle: ".task-row", // Only draggable via `.task-row` elements\n            animation: 150, // Smooth animation\n            filter: ".task-open-link", // Prevent dragging on task links\n            preventOnFilter: true, // Prevent drag if filtered element is clicked\n            onEnd: async (event) => {\n                try {\n                    console.log("Drag-and-drop operation started...");\n                    const rows = Array.from(event.from.querySelectorAll(".task-row"));\n                    const reorderedTasks = [];\n\n                    rows.forEach((row, index) => {\n                        const taskId = parseInt(row.dataset.taskId, 10);\n                        let parentId = null;\n\n                        // Get the parent ID from the map or fallback to the dataset\n                        if (row.classList.contains("subtask-row")) {\n                            const parentRow = row.previousElementSibling;\n                            parentId = parentRow\n                                ? parseInt(parentRow.dataset.taskId, 10)\n                                : this.taskParentMap.get(taskId) || null;\n                        }\n\n                        // Update the taskParentMap dynamically\n                        this.updateTaskParentMap(taskId, parentId);\n\n                        reorderedTasks.push({\n                            id: taskId,\n                            sort_order: index + 1,\n                            parent_id: parentId,\n                        });\n                    });\n\n                    console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n                    console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n                    // Send the payload to the backend\n                    const response = await fetch("/tasks/reorder_subtasks", {\n                        method: "POST",\n                        headers: {\n                            "Content-Type": "application/json",\n                            "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n                        },\n                        body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n                    });\n\n                    if (!response.ok) {\n                        const errorData = await response.json();\n                        console.error("Error reordering tasks:", errorData);\n                        alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n                        return;\n                    }\n\n                    const data = await response.json();\n                    console.log("Task reordering successful:", data);\n\n                } catch (error) {\n                    console.error("Error during drag-and-drop operation:", error);\n                    alert("An unexpected error occurred while reordering tasks.");\n                }\n            },\n        });\n\n        window.isDragAndDropInitialized = true;\n        console.log("Drag-and-drop initialized successfully.");\n    },\n};\n```\n\nKey Updates:\n\t1.\tPrecomputed Map (taskParentMap):\n\t•\tThe initTaskParentMap function initializes the map by iterating over DOM elements and mapping each task’s ID to its parent ID.\n\t•\tThe updateTaskParentMap dynamically updates the map when tasks are reordered.\n\t2.\tEfficient Parent Lookup:\n\t•\tThe parentId is derived from the precomputed map rather than DOM traversal.\n\t3.\tBackend Payload:\n\t•\tA structured payload (reorderedTasks) is sent to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:44:08.338301', 'updated_at': '2025-02-06T21:59:17.417466'}, {'id': 134, 'name': 'Step 2: Update the Backend in routes.py', 'description': 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\nPlan for step 2:\n\t1.\tVerify the payload structure:\n\t•\tEnsure that the payload includes all necessary fields (id, sort_order, parent_id) for each task.\n\t•\tValidate that the parent-child relationships in the precomputed map (taskParentMap) are reflected correctly in the payload.\n\t2.\tSubmit the payload to the backend:\n\t•\tEnhance the fetch request in the onEnd function of initDragAndDrop to log detailed submission data.\n\t•\tConfirm the payload integrity in the browser console before submission.\n\t3.\tUpdate backend logging:\n\t•\tAdd logging to /reorder_subtasks in routes.py to confirm receipt of the correct payload and process parent-child updates.\n\t•\tLog before and after database updates for better debugging.\n\n-----\nUpdated tasks_table_interactions.js\n\nReplace this section:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    let parentId = null;\n```\nWith:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    const parentId = this.taskParentMap.get(taskId) || null;\n```\nThe this.taskParentMap provides a precomputed and dynamic mapping of taskId to parentId. By using this map, we avoid relying on DOM traversal logic (row.closest or row.previousElementSibling) during drag-and-drop operations, which can sometimes be unreliable or cumbersome.\n\nFull Revised onEnd section:\n```\nonEnd: async (event) => {\n    try {\n        console.log("Drag-and-drop operation started...");\n        const rows = Array.from(event.from.querySelectorAll(".task-row"));\n        const reorderedTasks = [];\n\n        rows.forEach((row, index) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = this.taskParentMap.get(taskId) || null;\n\n            // Update the taskParentMap dynamically\n            this.updateTaskParentMap(taskId, parentId);\n\n            reorderedTasks.push({\n                id: taskId,\n                sort_order: index + 1,\n                parent_id: parentId,\n            });\n        });\n\n        console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n        console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n        // Send the payload to the backend\n        const response = await fetch("/tasks/reorder_subtasks", {\n            method: "POST",\n            headers: {\n                "Content-Type": "application/json",\n                "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n            },\n            body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            console.error("Error reordering tasks:", errorData);\n            alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n            return;\n        }\n\n        const data = await response.json();\n        console.log("Task reordering successful:", data);\n\n    } catch (error) {\n        console.error("Error during drag-and-drop operation:", error);\n        alert("An unexpected error occurred while reordering tasks.");\n    }\n}\n```\n---------------------------------\nEnsure updates include:\n\t•\tBetter Logging: Adding logs for key events such as database changes and validation results.\n\t•\tInput Validation: Ensure all required fields (id, sort_order, parent_id) exist in the payload.\n\t•\tPost-Commit Validation: Confirm database updates after the commit.\n\t•\tImproved Error Handling: Include specific error messages and consistent rollback mechanisms.\n\nBelow is the revised reorder_subtasks route with descriptive comments for each section:\n```\n@bp.route("/reorder_subtasks", methods=["POST"])\ndef reorder_subtasks():\n    """\n    Reorder subtasks globally or reassign them to a different parent.\n\n    Steps:\n    - Parse and validate input from the frontend.\n    - Update parent-child relationships and sort order in the database.\n    - Commit changes and return a success response.\n    - Handle errors gracefully and provide detailed logs for debugging.\n    """\n    logger.info("Entering reorder_subtasks route...")\n    logger.info(f"Received payload for reordering tasks: {request.json}")\n\n    try:\n        # Step 1: Parse input\n        parent_id = request.json.get("parent_id", None)  # Optional parent ID for the tasks being reordered\n        ordered_tasks = request.json.get("ordered_tasks", [])\n\n        logger.debug(f"Parsed parent_id: {parent_id}")\n        logger.debug(f"Parsed ordered_tasks: {ordered_tasks}")\n\n        # Step 2: Validate input\n        if not isinstance(ordered_tasks, list) or not all(\n            isinstance(task, dict) and "id" in task and "sort_order" in task and "parent_id" in task\n            for task in ordered_tasks\n        ):\n            logger.error(f"Invalid input received for ordered_tasks: {ordered_tasks}")\n            return jsonify({\n                "error": "Invalid input format for \'ordered_tasks\'. Each task must include \'id\', \'sort_order\', and \'parent_id\'."\n            }), 400\n\n        # Step 3: Validate parent task (if applicable)\n        if parent_id is not None:\n            parent_task = Task.query.get(parent_id)\n            if not parent_task:\n                logger.error(f"Parent task with ID {parent_id} not found.")\n                return jsonify({"error": f"Parent ID {parent_id} is invalid or does not exist."}), 400\n\n        logger.info("Input validation passed. Proceeding with task updates...")\n\n        # Step 4: Process updates for each subtask\n        updated_subtasks = []  # Keep track of updated subtasks for post-commit validation\n\n        for task_data in ordered_tasks:\n            subtask_id = task_data["id"]\n            sort_order = task_data["sort_order"]\n            new_parent_id = task_data["parent_id"]\n\n            # Fetch the subtask from the database\n            subtask = Task.query.get(subtask_id)\n            if not subtask:\n                logger.warning(f"Subtask ID {subtask_id} not found. Skipping...")\n                continue\n\n            # Log and update parent_id if it changes\n            if new_parent_id is not None and new_parent_id != subtask.parent_id:\n                logger.info(f"Reassigning subtask {subtask.id} to new parent {new_parent_id}")\n                subtask.parent_id = new_parent_id\n\n            # Update sort order\n            subtask.sort_order = sort_order\n            logger.debug(f"Updated subtask {subtask.id}: parent_id={subtask.parent_id}, sort_order={subtask.sort_order}")\n\n            # Add to the list of updated subtasks for validation\n            updated_subtasks.append(subtask)\n\n        # Step 5: Commit changes to the database\n        try:\n            db.session.commit()\n            logger.info(f"Subtasks reordered successfully: {[task[\'id\'] for task in ordered_tasks]}")\n        except Exception as e:\n            logger.error(f"Error committing changes to the database: {str(e)}")\n            db.session.rollback()\n            return jsonify({"error": "Failed to save changes to the database. Please try again."}), 500\n\n        # Step 6: Post-commit validation\n        for subtask in updated_subtasks:\n            logger.debug(f"Post-commit parent_id for task {subtask.id}: {subtask.parent_id}")\n            logger.debug(f"Post-commit sort_order for task {subtask.id}: {subtask.sort_order}")\n\n        # Step 7: Return success response\n        return jsonify({\n            "success": True,\n            "message": "Subtasks reordered successfully.",\n            "updated_subtasks": [subtask.id for subtask in updated_subtasks]\n        }), 200\n\n    except Exception as e:\n        # Step 8: Handle unexpected errors\n        logger.error(f"Error while reordering subtasks: {str(e)}", exc_info=True)\n        db.session.rollback()\n        return jsonify({"error": "An unexpected error occurred while reordering subtasks."}), 500\n```\nKey Changes and Descriptive Comments\n\t1.\tInput Parsing:\n\t•\tExtracts parent_id and ordered_tasks from the request payload.\n\t•\tLogs the parsed values for debugging.\n\t2.\tInput Validation:\n\t•\tEnsures ordered_tasks is a list of dictionaries with the required keys.\n\t•\tValidates parent_id if provided, ensuring the parent task exists in the database.\n\t3.\tUpdate Processing:\n\t•\tIterates through ordered_tasks, updating each task’s parent_id and sort_order.\n\t•\tLogs changes for each task.\n\t4.\tDatabase Commit:\n\t•\tCommits all updates in a single transaction.\n\t•\tLogs success or rolls back changes in case of an error.\n\t5.\tPost-Commit Validation:\n\t•\tVerifies that the parent_id and sort_order changes were successfully saved to the database.\n\t6.\tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:46:29.348853', 'updated_at': '2025-02-06T21:59:21.617065'}, {'id': 131, 'name': 'Step 5: Update utils.py', 'description': 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nChanges to Make:\n\t1.\tEnhance Task Filtering:\n\t•\tEnsure the filters handle parent-child relationships explicitly.\n\t•\tAdd options to include or exclude subtasks in queries.\n\t2.\tUtility Function for Debugging Parent-Child Relationships:\n\t•\tProvide a function to generate a map or list of parent-child relationships for debugging purposes.\n\t3.\tValidation Functions:\n\t•\tAdd a utility function to validate parent-child relationships and ensure no circular dependencies.\n\nUpdated utils.py Code:\n```\nimport logging\nfrom sqlalchemy import func\nfrom sqlalchemy.orm import joinedload\nfrom app.extensions.db import db\nfrom app.tasks.models import Task\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\n\nclass TaskService:\n    @staticmethod\n    def filter_tasks(filters=None, include_subtasks=True, page=None, per_page=None):\n        """\n        Dynamically filters tasks with an option to include or exclude subtasks.\n\n        Args:\n            filters (dict): Filtering criteria.\n            include_subtasks (bool): Whether to include subtasks in the query.\n            page (int, optional): Page number for pagination.\n            per_page (int, optional): Items per page for pagination.\n\n        Returns:\n            Query or Pagination: A SQLAlchemy query object or paginated results.\n        """\n        query = Task.query.options(\n            db.joinedload(Task.project).joinedload(Project.contributors),\n            db.joinedload(Task.contributor),\n            db.joinedload(Task.children),\n        ).order_by(Task.sort_order)\n\n        if filters:\n            logger.debug(f"Applying filters: {filters}")\n\n            # Apply standard filters\n            if "is_archived" in filters:\n                query = query.filter(Task.is_archived == filters["is_archived"])\n            if "project_id" in filters:\n                query = query.filter(Task.project_id == filters["project_id"])\n            if "task_type" in filters:\n                if isinstance(filters["task_type"], list):\n                    query = query.filter(Task.task_type.in_(filters["task_type"]))\n                else:\n                    query = query.filter(Task.task_type == filters["task_type"])\n            if "completion_status" in filters:\n                completion_map = {"completed": True, "in_progress": False}\n                if filters["completion_status"] in completion_map:\n                    query = query.filter(Task.completed == completion_map[filters["completion_status"]])\n\n            # Optionally exclude subtasks\n            if not include_subtasks:\n                query = query.filter(Task.task_type != "Subtask")\n\n        logger.debug(f"Generated query: {query}")\n\n        # Pagination\n        if page and per_page:\n            return query.paginate(page=page, per_page=per_page, error_out=False)\n        return query\n\n    @staticmethod\n    def debug_parent_child_relationships(project_id=None):\n        """\n        Generates a debug map of parent-child relationships for all tasks.\n\n        Args:\n            project_id (int, optional): Restrict to tasks from a specific project.\n\n        Returns:\n            dict: A dictionary mapping parent IDs to their child task IDs.\n        """\n        query = Task.query\n        if project_id:\n            query = query.filter(Task.project_id == project_id)\n\n        tasks = query.options(\n            db.load_only(Task.id, Task.parent_id)\n        ).all()\n\n        relationship_map = {}\n        for task in tasks:\n            if task.parent_id not in relationship_map:\n                relationship_map[task.parent_id] = []\n            relationship_map[task.parent_id].append(task.id)\n\n        logger.debug(f"Parent-Child Relationship Map: {relationship_map}")\n        return relationship_map\n\n    @staticmethod\n    def validate_parent_child_relationships():\n        """\n        Validates all parent-child relationships in the database to ensure they conform to hierarchy rules.\n\n        Raises:\n            ValueError: If invalid relationships are detected.\n        """\n        tasks = Task.query.options(db.joinedload(Task.parent)).all()\n\n        for task in tasks:\n            if task.parent_id:\n                parent_task = task.parent\n                if not parent_task:\n                    raise ValueError(f"Task {task.id} has an invalid parent ID {task.parent_id}.")\n\n                # Validate hierarchy rules\n                if task.task_type == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError(f"User Story {task.id} must have an Epic as its parent.")\n                if task.task_type == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError(f"Subtask {task.id} must have a User Story as its parent.")\n\n        logger.info("All parent-child relationships are valid.")\n\n    @staticmethod\n    def get_all_task_ids_with_parents():\n        """\n        Returns a flat list of tasks with their parent IDs for debugging.\n\n        Returns:\n            list: A list of tuples (task_id, parent_id).\n        """\n        tasks = Task.query.with_entities(Task.id, Task.parent_id).all()\n        logger.debug(f"Task IDs with Parent IDs: {tasks}")\n        return tasks\n```\n\n\nExplanation of Changes:\n\t1.\tfilter_tasks Enhancements:\n\t•\tAdded include_subtasks parameter to optionally exclude subtasks from the query.\n\t2.\tdebug_parent_child_relationships:\n\t•\tCreates a parent-child relationship map for debugging purposes.\n\t3.\tvalidate_parent_child_relationships:\n\t•\tIterates through all tasks to validate parent-child hierarchy and ensures no invalid relationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.091824', 'updated_at': '2025-01-16T19:22:36.236691'}, {'id': 135, 'name': 'Step 3: Update list.html', 'description': 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already includes everything needed. No required changes.\n\nHere´s the relevant section of list.html:\n\n```\n<tr id="task-{{ task.id }}"\n                class="task-row {% if task.task_type == \'Subtask\' %}subtask-row{% elif task.task_type == \'User Story\' %}user-story-row{% elif task.task_type == \'Epic\' %}epic-row{% endif %}"\n                style="background-color: \n                {% if task.task_type == \'Subtask\' %}\n                    rgba(200, 230, 255, 0.5); /* Light blue for Subtask */\n                {% elif task.task_type == \'User Story\' %}\n                    rgba(255, 255, 200, 0.5); /* Light yellow for User Story */\n                {% elif task.task_type == \'Epic\' %}\n                    rgba(255, 200, 200, 0.5); /* Light red for Epic */\n                {% else %}\n                    rgba(240, 240, 240, 1); /* Default light gray */\n                {% endif %};"\n                data-task-id="{{ task.id }}"\n                data-parent-id="{{ task.parent_id or \'\' }}"\n                data-level="{{ depth }}">\n                <td><input type="checkbox" name="batch_update" value="{{ task.id }}"></td>\n                <td>\n                    {% if tasks|selectattr("parent_id", "equalto", task.id)|list %}\n                    <button class="btn btn-sm toggle-details" data-task-id="{{ task.id }}" aria-label="Toggle details for task {{ task.name }}">\n                        <i class="bi bi-chevron-right"></i>\n                    </button>\n                    {% endif %}\n                </td>\n                <td class="fw-medium fs-6 \n                {% if task.task_type == \'Epic\' %}\n                    epic-cell\n                {% elif task.task_type == \'User Story\' %}\n                    user-story-cell\n                {% elif task.task_type == \'Subtask\' %}\n                    subtask-cell\n                {% endif %}" \n                style="padding-left: {{ depth|default(0) * 20 }}px; position: relative;">\n                <span class="bi fs-6\n                {% if task.task_type == \'Epic\' %}\n                    bi-circle-fill\n                {% elif task.task_type == \'User Story\' %}\n                    bi-circle-half\n                {% elif task.task_type == \'Subtask\' %}\n                    bi-circle\n                {% endif %}">\n                </span>\n                {{ task.name }}\n                <small class="text-muted fw-light">\n                    (Parent-ID: {{ task.parent_id or \'None\' }})\n                </small>\n                <!-- Open Link -->\n                <a href="#" class="task-open-link" data-task-id="{{ task.id }}">\n                    <i class="bi bi-arrows-angle-expand" style="font-size: 0.8rem; color: white;"></i>\n                    Open\n                </a>\n            </td>\n                <td class="fw-light fs-6">\n                    <small class>\n                    LAC-{{ task.id }}\n                    </small>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light text-bg-secondary">\n                        {{ task.project if task.project else "Unknown Project" }}\n                    </span>\n                </td>\n                <td class="fs-6" data-contributor-column>{{ task.assigned_to if task.assigned_to else "Unassigned" }}</td>\n                <td class="fs-6">{{ task.story_points }}</td>\n                <td class="fs-6">\n                    <span class="badge rounded-pill fw-light text-bg-light">\n                        {{ task.task_type }}\n                    </span>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light {% if task.completed %}text-bg-success{% else %}text-bg-warning{% endif %}">\n                        {{ "Completed" if task.completed else "In Progress" }}\n                    </span>\n                </td>\n                <td>\n                    <!-- Delete Icon -->\n                    <button class="btn btn-dark btn-sm delete-task-btn" style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .2rem; --bs-btn-font-size: .75rem;" data-task-id="{{ task.id }}" aria-label="Deletes task {{ task.id }}">\n                        <i class="bi bi-trash"></i>\n                    </button>\n                </td>\n            </tr>\n            {% for child in tasks if child.parent_id == task.id %}\n                {{ render_task(child, tasks, depth + 1) }}\n            {% endfor %}\n            {% endmacro %}\n            \n            <!-- Render top-level tasks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:46:29.349784', 'updated_at': '2025-01-16T19:22:36.238473'}, {'id': 82, 'name': 'Implement Third-Party Authentication', 'description': 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitHub Login involves integrating OAuth 2.0, which both services support. The complexity depends on your app’s existing setup, frameworks, and experience with third-party authentication. Below is a breakdown:\n\nKey Steps for Implementing Google or GitHub Login\n\t1.\tSet Up OAuth Credentials:\n\t•\tRegister your application in the Google Cloud Console or GitHub Developer Settings.\n\t•\tObtain the client ID and client secret.\n\t2.\tInstall Required Libraries:\n\t•\tUse a library for OAuth (e.g., flask-oauthlib, python-social-auth, or authlib).\n\t•\tPopular frameworks like Flask and Django already have robust integrations for OAuth providers.\n\t3.\tBackend Configuration:\n\t•\tImplement an endpoint to handle the OAuth flow (/auth/login/google or /auth/login/github).\n\t•\tConfigure your app to send users to Google or GitHub’s authentication page.\n\t•\tHandle the OAuth callback to exchange the authorization code for an access token.\n\t•\tVerify the token and fetch user information (e.g., email, name).\n\t4.\tLink OAuth to User Registration:\n\t•\tOn successful login, create or retrieve a user in your database.\n\t•\tStore the user’s details like email, OAuth provider ID, and access token.\n\t5.\tFrontend Integration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T12:15:54.291625', 'updated_at': '2025-01-16T19:22:36.239866'}, {'id': 62, 'name': 'Add OAuth integration for Google Login', 'description': 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.241200'}, {'id': 64, 'name': 'Setup project credentials for Google API', 'description': 'Generate client ID and secret from Google API Console for your application.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.242497'}, {'id': 67, 'name': 'Test Google OAuth flow', 'description': 'Verify the OAuth flow using test accounts and check the token exchange.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.243780'}, {'id': 65, 'name': 'Implement backend endpoints for Google OAuth', 'description': 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.244932'}, {'id': 63, 'name': 'Add OAuth integration for GitHub Login', 'description': 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.246358'}, {'id': 68, 'name': 'Register application in GitHub Developer Console', 'description': 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.247746'}, {'id': 69, 'name': 'Handle callback from GitHub', 'description': 'Implement the callback endpoint to process the authorization code from GitHub.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.248912'}, {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}, {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}, {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-02-11T11:36:20.238219'}, {'id': 108, 'name': '1.1.2 Backend API for Registration', 'description': '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:33.067643'}, {'id': 112, 'name': '1.2.2 Frontend Login Page', 'description': 'Develop a frontend form for user login with email and password inputs.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.683644'}, {'id': 109, 'name': '1.1.3 Create Frontend Registration Page', 'description': 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.684988'}, {'id': 110, 'name': '1.1.4 Unit Tests for Registration', 'description': 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.686902'}, {'id': 101, 'name': '1.2 User Login', 'description': 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:25:53.687936'}, {'id': 111, 'name': '1.2.1 Backend API for Login', 'description': 'Create POST /api/login endpoint to handle user login.\njjsjj', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.689096'}, {'id': 113, 'name': '1.2.3 Session Management', 'description': 'Implement secure session handling using cookies or JWT.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:20.968680'}, {'id': 114, 'name': '1.2.4 Unit Tests for Login', 'description': 'Write tests for successful and failed login attempts.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:22:36.265866'}, {'id': 106, 'name': 'Password Reset', 'description': 'As a user, I want to reset my password securely using email.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.267247'}, {'id': 128, 'name': 'Frontend Password Reset Page', 'description': 'Develop a page for users to enter a new password using a valid token.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.269158'}, {'id': 129, 'name': 'Testing Password Reset', 'description': 'Write tests for email delivery, token validation, and password updates.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.270849'}, {'id': 102, 'name': 'Logout', 'description': 'As a user, I want to log out so that I can end my session securely.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.272605'}, {'id': 117, 'name': 'Tests for Logout', 'description': 'Verify session invalidation and redirection to the login page.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.274575'}, {'id': 116, 'name': 'Frontend Logout Button', 'description': 'Add a logout button to the UI and handle session clearing.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-02-09T12:31:17.939784'}, {'id': 115, 'name': 'Backend API for Logout', 'description': 'Create POST /api/logout endpoint to invalidate user sessions.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.277547'}, {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}, {'id': 45, 'name': 'Display Default Value in Dropdown', 'description': 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.280493'}, {'id': 50, 'name': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'In Progress', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:22.274304'}, {'id': 51, 'name': 'Set Default Value', 'description': 'Set the default value in the dropdown based on the retrieved data.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 45, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 1, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.283309'}, {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882'}, {'id': 54, 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 46, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:29.251047'}, {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:26:23.067490'}, {'id': 56, 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:16.233517'}, {'id': 55, 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:08.099271'}, {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:59.651639'}, {'id': 57, 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:51.310240'}, {'id': 58, 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:43.569501'}, {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:36.133259'}, {'id': 59, 'name': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:15.491910'}, {'id': 60, 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 49, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:28.367797'}, {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-11T08:25:07.992524'}, {'id': 52, 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 41, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:01.469601'}, {'id': 53, 'name': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:24:54.245010'}, {'id': 42, 'name': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:47.274896'}, {'id': 43, 'name': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:33.908549'}, {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-02-11T08:24:26.494016'}, {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-02-11T08:24:21.069473'}, {'id': 90, 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:13.204884'}, {'id': 88, 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:05.873554'}, {'id': 89, 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:23:58.436495'}, {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-02-11T08:23:51.269557'}, {'id': 93, 'name': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:42.771565'}, {'id': 91, 'name': 'Update database schema for task ownership', 'description': 'Add a column or relationship to assign a single owner per task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:33.670381'}, {'id': 92, 'name': 'Develop backend API for assigning task owner', 'description': 'Create endpoints to assign or update the owner of a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T09:19:44.027744'}, {'id': 87, 'name': 'Create and customize contributor roles', 'description': 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:43.600461', 'updated_at': '2025-02-11T08:23:23.402442'}, {'id': 96, 'name': 'Allow admin users to create and customize contributor roles via frontend', 'description': 'Provide UI functionality for admins to manage contributor roles dynamically.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:23:13.139282'}, {'id': 94, 'name': 'Add database support for contributor roles', 'description': 'Introduce a roles table and link contributors to specific roles for tasks.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:56.181530'}, {'id': 95, 'name': 'Develop backend API for managing contributor roles', 'description': 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:02.276492'}, {'id': 127, 'name': 'Backend API for Password Reset', 'description': 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-02-10T23:59:50.734037'}, {'id': 126, 'name': 'Email Configuration for Password Reset', 'description': 'Configure email service to send password reset links.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.334340'}, {'id': 104, 'name': 'Middleware for Role Enforcement', 'description': 'As a system, I want to enforce role-based access to specific routes.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:23:40.346816'}, {'id': 122, 'name': 'Testing Role Enforcement', 'description': 'Write tests to ensure proper access control based on roles.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.185693'}, {'id': 121, 'name': 'Develop Role Enforcement Middleware', 'description': 'Implement middleware to check user roles for access control.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.187439'}, {'id': 105, 'name': 'Profile Management', 'description': 'As a user, I want to update my profile (username, email, password).', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.339830'}, {'id': 123, 'name': 'Backend API for Profile Management', 'description': 'Create PATCH /api/profile endpoint to update user details.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.678781'}, {'id': 125, 'name': 'Testing Profile Updates', 'description': 'Write tests for profile update functionality.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.680382'}]
2025-02-11 12:37:15,350 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 12:37:15,350 INFO: [cached since 2703s ago] {'param_1': 2}
2025-02-11 12:37:15,351 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:37:15,351 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 12:37:15,351 INFO: [cached since 2703s ago] {'param_1': 3}
2025-02-11 12:37:15,352 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:37:15,352 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 12:37:15,352 INFO: [cached since 2703s ago] {'param_1': 4}
2025-02-11 12:37:15,352 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:37:15,352 DEBUG: Row (4, 'Fredrik')
2025-02-11 12:37:15,353 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 12:37:15,353 INFO: [cached since 2703s ago] {'param_1': 5}
2025-02-11 12:37:15,353 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:37:15,354 INFO: ROLLBACK
2025-02-11 12:37:15,355 INFO: 127.0.0.1 - - [11/Feb/2025 12:37:15] "GET /tasks/ HTTP/1.1" 200 -
2025-02-11 12:37:15,373 INFO: 127.0.0.1 - - [11/Feb/2025 12:37:15] "[36mGET /static/custom.css HTTP/1.1[0m" 304 -
2025-02-11 12:37:15,373 INFO: 127.0.0.1 - - [11/Feb/2025 12:37:15] "[36mGET /static/js/filters.js HTTP/1.1[0m" 304 -
2025-02-11 12:37:15,376 INFO: 127.0.0.1 - - [11/Feb/2025 12:37:15] "[36mGET /static/js/tasks_table_interactions.js HTTP/1.1[0m" 304 -
2025-02-11 12:37:15,377 INFO: 127.0.0.1 - - [11/Feb/2025 12:37:15] "[36mGET /static/js/modals.js HTTP/1.1[0m" 304 -
2025-02-11 12:37:32,604 INFO: Fetching task details for Task ID 274.
2025-02-11 12:37:32,605 INFO: Fetching task with ID 274.
2025-02-11 12:37:32,607 INFO: BEGIN (implicit)
2025-02-11 12:37:32,607 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:37:32,607 INFO: [cached since 2713s ago] {'pk_1': 274}
2025-02-11 12:37:32,608 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:37:32,609 DEBUG: Row (274, 'add support for goals, initiatives, okr´s', 0, 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 46, 27, 204912), datetime.datetime(2025, 2, 10, 8, 28, 17, 663922), None)
2025-02-11 12:37:32,609 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12c171a90>, 'sort_order': 0, 'task_type': 'Epic', 'contributor_id': None, 'id': 274, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 2, 10, 0, 46, 27, 204912), 'status': 'Not Started', 'project_id': 7, 'updated_at': datetime.datetime(2025, 2, 10, 8, 28, 17, 663922), 'name': 'add support for goals, initiatives, okr´s', 'description': 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'parent_id': None, 'story_points': 0, 'completed_date': None}
2025-02-11 12:37:32,610 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 12:37:32,610 INFO: [cached since 2713s ago] {'pk_1': 7}
2025-02-11 12:37:32,611 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:37:32,612 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259))
2025-02-11 12:37:32,612 INFO: Task ID 274 fetched with parent ID: None
2025-02-11 12:37:32,612 INFO: Task with ID 274 fetched successfully.
2025-02-11 12:37:32,612 DEBUG: Fetched Task Data: {'id': 274, 'name': 'add support for goals, initiatives, okr´s', 'description': 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:46:27.204912', 'updated_at': '2025-02-10T08:28:17.663922', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 12:37:32,612 INFO: Task details fetched successfully for Task ID 274.
2025-02-11 12:37:32,613 INFO: ROLLBACK
2025-02-11 12:37:32,614 INFO: 127.0.0.1 - - [11/Feb/2025 12:37:32] "GET /api/tasks/274 HTTP/1.1" 200 -
2025-02-11 12:38:57,035 INFO: Fetching task details for Task ID 130.
2025-02-11 12:38:57,035 INFO: Fetching task with ID 130.
2025-02-11 12:38:57,036 INFO: BEGIN (implicit)
2025-02-11 12:38:57,037 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:38:57,037 INFO: [cached since 2797s ago] {'pk_1': 130}
2025-02-11 12:38:57,038 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:38:57,039 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None)
2025-02-11 12:38:57,039 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12c171af0>, 'sort_order': 3, 'task_type': 'User Story', 'contributor_id': None, 'id': 130, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), 'name': 'Implement the Map of Task Relationships solution for drag-and-drop', 'description': 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'parent_id': None, 'story_points': 0, 'completed_date': None}
2025-02-11 12:38:57,039 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 12:38:57,040 INFO: [cached since 2797s ago] {'pk_1': 6}
2025-02-11 12:38:57,041 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:38:57,042 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:38:57,042 INFO: Task ID 130 fetched with parent ID: None
2025-02-11 12:38:57,042 INFO: Task with ID 130 fetched successfully.
2025-02-11 12:38:57,042 DEBUG: Fetched Task Data: {'id': 130, 'name': 'Implement the Map of Task Relationships solution for drag-and-drop', 'description': 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.093022', 'updated_at': '2025-01-16T19:22:36.216705', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 12:38:57,043 INFO: Task details fetched successfully for Task ID 130.
2025-02-11 12:38:57,043 INFO: ROLLBACK
2025-02-11 12:38:57,044 INFO: 127.0.0.1 - - [11/Feb/2025 12:38:57] "GET /api/tasks/130 HTTP/1.1" 200 -
2025-02-11 16:36:26,697 INFO: update_task_status_route triggered for Task ID 289
2025-02-11 16:36:26,702 INFO: BEGIN (implicit)
2025-02-11 16:36:26,703 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:36:26,704 INFO: [cached since 5931s ago] {'pk_1': 289}
2025-02-11 16:36:26,716 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:36:26,717 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 10, 9, 12, 47, 626993), None)
2025-02-11 16:36:26,717 DEBUG: Received update payload for Task ID 289: {'id': 289, 'status': 'Completed'}
2025-02-11 16:36:26,718 DEBUG: Updated status for Task ID 289 to: Completed
2025-02-11 16:36:26,718 DEBUG: Validating parent_id change for Task 289: None
2025-02-11 16:36:26,718 INFO: Hierarchy validation passed for Task 289.
2025-02-11 16:36:26,718 INFO: Validation passed for parent_id: None
2025-02-11 16:36:26,718 DEBUG: Validating task_type change for Task 289: Subtask
2025-02-11 16:36:26,718 INFO: Hierarchy validation passed for Task 289.
2025-02-11 16:36:26,718 INFO: Validation passed for task_type: Subtask
2025-02-11 16:36:26,720 INFO: UPDATE task SET status=%(status)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 16:36:26,720 INFO: [generated in 0.00018s] {'status': 'Completed', 'updated_at': datetime.datetime(2025, 2, 11, 15, 36, 26, 718508), 'task_id': 289}
2025-02-11 16:36:26,723 INFO: COMMIT
2025-02-11 16:36:26,727 INFO: Task ID 289 updated successfully.
2025-02-11 16:36:26,727 INFO: BEGIN (implicit)
2025-02-11 16:36:26,728 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:36:26,728 INFO: [cached since 5480s ago] {'pk_1': 289}
2025-02-11 16:36:26,729 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:36:26,729 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 11, 15, 36, 26, 718508), None)
2025-02-11 16:36:26,730 INFO: ROLLBACK
2025-02-11 16:36:26,730 INFO: 127.0.0.1 - - [11/Feb/2025 16:36:26] "PATCH /api/tasks/289/status HTTP/1.1" 200 -
2025-02-11 16:36:26,733 INFO: Fetching task details for Task ID 289.
2025-02-11 16:36:26,734 INFO: Fetching task with ID 289.
2025-02-11 16:36:26,734 INFO: BEGIN (implicit)
2025-02-11 16:36:26,735 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:36:26,735 INFO: [cached since 5932s ago] {'pk_1': 289}
2025-02-11 16:36:26,735 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:36:26,736 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 11, 15, 36, 26, 718508), None)
2025-02-11 16:36:26,736 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12c1722d0>, 'sort_order': 0, 'task_type': 'Subtask', 'contributor_id': None, 'id': 289, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), 'status': 'Completed', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 11, 15, 36, 26, 718508), 'name': 'issue: parent task is lost when updating task', 'description': '', 'parent_id': None, 'story_points': 0, 'completed_date': None}
2025-02-11 16:36:26,736 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 16:36:26,736 INFO: [cached since 5932s ago] {'pk_1': 6}
2025-02-11 16:36:26,737 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 16:36:26,737 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 16:36:26,737 INFO: Task ID 289 fetched with parent ID: None
2025-02-11 16:36:26,737 INFO: Task with ID 289 fetched successfully.
2025-02-11 16:36:26,737 DEBUG: Fetched Task Data: {'id': 289, 'name': 'issue: parent task is lost when updating task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T08:56:25.273984', 'updated_at': '2025-02-11T15:36:26.718508', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 16:36:26,737 INFO: Task details fetched successfully for Task ID 289.
2025-02-11 16:36:26,737 INFO: ROLLBACK
2025-02-11 16:36:26,738 INFO: 127.0.0.1 - - [11/Feb/2025 16:36:26] "GET /api/tasks/289 HTTP/1.1" 200 -
2025-02-11 16:37:30,999 INFO: update_task_status_route triggered for Task ID 296
2025-02-11 16:37:31,003 INFO: BEGIN (implicit)
2025-02-11 16:37:31,004 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:37:31,006 INFO: [cached since 5996s ago] {'pk_1': 296}
2025-02-11 16:37:31,009 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:37:31,010 DEBUG: Row (296, 'issue: contributor is lost after updating task', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 26, 43, 881947), datetime.datetime(2025, 2, 10, 10, 26, 43, 884004), None)
2025-02-11 16:37:31,010 DEBUG: Received update payload for Task ID 296: {'id': 296, 'status': 'Completed'}
2025-02-11 16:37:31,010 DEBUG: Updated status for Task ID 296 to: Completed
2025-02-11 16:37:31,010 DEBUG: Validating parent_id change for Task 296: None
2025-02-11 16:37:31,010 INFO: Hierarchy validation passed for Task 296.
2025-02-11 16:37:31,010 INFO: Validation passed for parent_id: None
2025-02-11 16:37:31,010 DEBUG: Validating task_type change for Task 296: User Story
2025-02-11 16:37:31,010 INFO: Hierarchy validation passed for Task 296.
2025-02-11 16:37:31,011 INFO: Validation passed for task_type: User Story
2025-02-11 16:37:31,012 INFO: UPDATE task SET status=%(status)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 16:37:31,012 INFO: [cached since 64.29s ago] {'status': 'Completed', 'updated_at': datetime.datetime(2025, 2, 11, 15, 37, 31, 11120), 'task_id': 296}
2025-02-11 16:37:31,013 INFO: COMMIT
2025-02-11 16:37:31,014 INFO: Task ID 296 updated successfully.
2025-02-11 16:37:31,014 INFO: BEGIN (implicit)
2025-02-11 16:37:31,015 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:37:31,015 INFO: [cached since 5545s ago] {'pk_1': 296}
2025-02-11 16:37:31,016 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:37:31,017 DEBUG: Row (296, 'issue: contributor is lost after updating task', 0, '', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 26, 43, 881947), datetime.datetime(2025, 2, 11, 15, 37, 31, 11120), None)
2025-02-11 16:37:31,018 INFO: ROLLBACK
2025-02-11 16:37:31,018 INFO: 127.0.0.1 - - [11/Feb/2025 16:37:31] "PATCH /api/tasks/296/status HTTP/1.1" 200 -
2025-02-11 16:37:31,022 INFO: Fetching task details for Task ID 296.
2025-02-11 16:37:31,022 INFO: Fetching task with ID 296.
2025-02-11 16:37:31,023 INFO: BEGIN (implicit)
2025-02-11 16:37:31,024 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:37:31,024 INFO: [cached since 5996s ago] {'pk_1': 296}
2025-02-11 16:37:31,025 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:37:31,025 DEBUG: Row (296, 'issue: contributor is lost after updating task', 0, '', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 26, 43, 881947), datetime.datetime(2025, 2, 11, 15, 37, 31, 11120), None)
2025-02-11 16:37:31,025 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12c171f10>, 'sort_order': 0, 'task_type': 'User Story', 'contributor_id': None, 'id': 296, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 2, 10, 9, 26, 43, 881947), 'status': 'Completed', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 11, 15, 37, 31, 11120), 'name': 'issue: contributor is lost after updating task', 'description': '', 'parent_id': None, 'story_points': 0, 'completed_date': None}
2025-02-11 16:37:31,026 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 16:37:31,026 INFO: [cached since 5996s ago] {'pk_1': 6}
2025-02-11 16:37:31,027 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 16:37:31,027 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 16:37:31,028 INFO: Task ID 296 fetched with parent ID: None
2025-02-11 16:37:31,028 INFO: Task with ID 296 fetched successfully.
2025-02-11 16:37:31,028 DEBUG: Fetched Task Data: {'id': 296, 'name': 'issue: contributor is lost after updating task', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T09:26:43.881947', 'updated_at': '2025-02-11T15:37:31.011120', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 16:37:31,028 INFO: Task details fetched successfully for Task ID 296.
2025-02-11 16:37:31,029 INFO: ROLLBACK
2025-02-11 16:37:31,029 INFO: 127.0.0.1 - - [11/Feb/2025 16:37:31] "GET /api/tasks/296 HTTP/1.1" 200 -
2025-02-11 16:38:00,372 INFO: update_task_status_route triggered for Task ID 292
2025-02-11 16:38:00,375 INFO: BEGIN (implicit)
2025-02-11 16:38:00,375 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:38:00,375 INFO: [cached since 6025s ago] {'pk_1': 292}
2025-02-11 16:38:00,377 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:38:00,377 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 10, 10, 11, 12, 274809), None)
2025-02-11 16:38:00,377 DEBUG: Received update payload for Task ID 292: {'id': 292, 'status': 'Completed'}
2025-02-11 16:38:00,377 DEBUG: Updated status for Task ID 292 to: Completed
2025-02-11 16:38:00,378 DEBUG: Validating parent_id change for Task 292: None
2025-02-11 16:38:00,378 INFO: Hierarchy validation passed for Task 292.
2025-02-11 16:38:00,378 INFO: Validation passed for parent_id: None
2025-02-11 16:38:00,378 DEBUG: Validating task_type change for Task 292: User Story
2025-02-11 16:38:00,378 INFO: Hierarchy validation passed for Task 292.
2025-02-11 16:38:00,378 INFO: Validation passed for task_type: User Story
2025-02-11 16:38:00,379 INFO: UPDATE task SET status=%(status)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 16:38:00,379 INFO: [cached since 93.66s ago] {'status': 'Completed', 'updated_at': datetime.datetime(2025, 2, 11, 15, 38, 0, 378925), 'task_id': 292}
2025-02-11 16:38:00,380 INFO: COMMIT
2025-02-11 16:38:00,382 INFO: Task ID 292 updated successfully.
2025-02-11 16:38:00,383 INFO: BEGIN (implicit)
2025-02-11 16:38:00,383 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:38:00,383 INFO: [cached since 5574s ago] {'pk_1': 292}
2025-02-11 16:38:00,384 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:38:00,384 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 11, 15, 38, 0, 378925), None)
2025-02-11 16:38:00,385 INFO: ROLLBACK
2025-02-11 16:38:00,385 INFO: 127.0.0.1 - - [11/Feb/2025 16:38:00] "PATCH /api/tasks/292/status HTTP/1.1" 200 -
2025-02-11 16:38:00,388 INFO: Fetching task details for Task ID 292.
2025-02-11 16:38:00,389 INFO: Fetching task with ID 292.
2025-02-11 16:38:00,390 INFO: BEGIN (implicit)
2025-02-11 16:38:00,390 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:38:00,390 INFO: [cached since 6025s ago] {'pk_1': 292}
2025-02-11 16:38:00,391 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:38:00,391 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 11, 15, 38, 0, 378925), None)
2025-02-11 16:38:00,392 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12c171970>, 'sort_order': 0, 'task_type': 'User Story', 'contributor_id': None, 'id': 292, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), 'status': 'Completed', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 11, 15, 38, 0, 378925), 'name': 'issue: assigning contributor does not work', 'description': '', 'parent_id': None, 'story_points': 0, 'completed_date': None}
2025-02-11 16:38:00,392 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 16:38:00,392 INFO: [cached since 6025s ago] {'pk_1': 6}
2025-02-11 16:38:00,393 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 16:38:00,393 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 16:38:00,393 INFO: Task ID 292 fetched with parent ID: None
2025-02-11 16:38:00,393 INFO: Task with ID 292 fetched successfully.
2025-02-11 16:38:00,394 DEBUG: Fetched Task Data: {'id': 292, 'name': 'issue: assigning contributor does not work', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T09:11:12.273779', 'updated_at': '2025-02-11T15:38:00.378925', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 16:38:00,394 INFO: Task details fetched successfully for Task ID 292.
2025-02-11 16:38:00,394 INFO: ROLLBACK
2025-02-11 16:38:00,394 INFO: 127.0.0.1 - - [11/Feb/2025 16:38:00] "GET /api/tasks/292 HTTP/1.1" 200 -
2025-02-11 16:38:02,412 INFO: Fetching task details for Task ID 292.
2025-02-11 16:38:02,413 INFO: Fetching task with ID 292.
2025-02-11 16:38:02,413 INFO: BEGIN (implicit)
2025-02-11 16:38:02,414 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:38:02,414 INFO: [cached since 6027s ago] {'pk_1': 292}
2025-02-11 16:38:02,415 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:38:02,416 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 11, 15, 38, 0, 378925), None)
2025-02-11 16:38:02,416 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12c172030>, 'sort_order': 0, 'task_type': 'User Story', 'contributor_id': None, 'id': 292, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), 'status': 'Completed', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 11, 15, 38, 0, 378925), 'name': 'issue: assigning contributor does not work', 'description': '', 'parent_id': None, 'story_points': 0, 'completed_date': None}
2025-02-11 16:38:02,417 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 16:38:02,417 INFO: [cached since 6027s ago] {'pk_1': 6}
2025-02-11 16:38:02,417 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 16:38:02,418 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 16:38:02,418 INFO: Task ID 292 fetched with parent ID: None
2025-02-11 16:38:02,418 INFO: Task with ID 292 fetched successfully.
2025-02-11 16:38:02,418 DEBUG: Fetched Task Data: {'id': 292, 'name': 'issue: assigning contributor does not work', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T09:11:12.273779', 'updated_at': '2025-02-11T15:38:00.378925', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 16:38:02,418 INFO: Task details fetched successfully for Task ID 292.
2025-02-11 16:38:02,419 INFO: ROLLBACK
2025-02-11 16:38:02,419 INFO: 127.0.0.1 - - [11/Feb/2025 16:38:02] "GET /api/tasks/292 HTTP/1.1" 200 -
2025-02-11 16:38:31,358 INFO: save_task triggered
2025-02-11 16:38:31,360 INFO: Payload received: {'title': 'issue: assigning contributor does not work', 'description': '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API endpoint resulted in a **400 Bad Request** error. Upon investigation, the following problems were identified:\n    \n    1. **Missing CSRF Token:**\n    - The request failed due to a missing CSRF token, as shown in the error message: *“Bad Request: The CSRF token is missing.”*\n    - The frontend was not correctly including the CSRF token in the request headers.\n    1. **JavaScript Error (Undefined CSRF Token Variable):**\n    - The error *“ReferenceError: csrfToken is not defined”* indicated that the CSRF token was not being retrieved properly in the JavaScript code.\n    1. **Incorrect Fetch Request Headers:**\n    - The fetch request did not include the CSRF token under the correct key (X-CSRFToken).\n    - The script attempted to send the request without properly extracting the CSRF token from the meta tag.\n    \n    **Solution**\n    \n    1. **Include the CSRF Token in the JavaScript Code**\n    \n    The CSRF token was retrieved from the meta tag and used in the request headers:\n    \n    ```jsx\n    // Retrieve CSRF token from meta tag\n    const csrfToken = document.querySelector(\'meta[name="csrf-token"]\').getAttribute(\'content\');\n    ```\n    \n    This ensures that the CSRF token is correctly fetched and available in the JavaScript scope.\n    \n    1. **Modify the Fetch Request to Include CSRF Token**\n    \n    The request to assign a contributor was updated to include the token:\n    \n    ```jsx\n    const response = await fetch(`/tasks/${taskId}/assign_contributor`, {\n        method: "POST",\n        headers: { \n            "Content-Type": "application/json",\n            "X-CSRFToken": csrfToken  // Include CSRF token\n        },\n        body: JSON.stringify({ contributor_id: parseInt(contributorId, 10) }),\n    });\n    ```\n    \n    - **Ensures the CSRF token is sent in the request headers** so that Flask-WTF does not reject the request.\n    1. **Verify and Debug Network Requests**\n    - The updated request headers were verified using **Chrome DevTools > Network tab** to ensure the X-CSRFToken was included.\n    - The error messages disappeared, and the contributor assignment request **succeeded with a 200 OK response**.\n    \n    ---\n    \n    **Final Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'task_id': '292', 'project_id': '6', 'task_type': 'User Story', 'story_points': 0, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 16:38:31,361 INFO: Update request for Task ID: 292
2025-02-11 16:38:31,361 INFO: BEGIN (implicit)
2025-02-11 16:38:31,362 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:38:31,362 INFO: [cached since 6056s ago] {'pk_1': '292'}
2025-02-11 16:38:31,363 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:38:31,364 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 11, 15, 38, 0, 378925), None)
2025-02-11 16:38:31,365 DEBUG: Received update payload for Task ID 292: {'title': 'issue: assigning contributor does not work', 'description': '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API endpoint resulted in a **400 Bad Request** error. Upon investigation, the following problems were identified:\n    \n    1. **Missing CSRF Token:**\n    - The request failed due to a missing CSRF token, as shown in the error message: *“Bad Request: The CSRF token is missing.”*\n    - The frontend was not correctly including the CSRF token in the request headers.\n    1. **JavaScript Error (Undefined CSRF Token Variable):**\n    - The error *“ReferenceError: csrfToken is not defined”* indicated that the CSRF token was not being retrieved properly in the JavaScript code.\n    1. **Incorrect Fetch Request Headers:**\n    - The fetch request did not include the CSRF token under the correct key (X-CSRFToken).\n    - The script attempted to send the request without properly extracting the CSRF token from the meta tag.\n    \n    **Solution**\n    \n    1. **Include the CSRF Token in the JavaScript Code**\n    \n    The CSRF token was retrieved from the meta tag and used in the request headers:\n    \n    ```jsx\n    // Retrieve CSRF token from meta tag\n    const csrfToken = document.querySelector(\'meta[name="csrf-token"]\').getAttribute(\'content\');\n    ```\n    \n    This ensures that the CSRF token is correctly fetched and available in the JavaScript scope.\n    \n    1. **Modify the Fetch Request to Include CSRF Token**\n    \n    The request to assign a contributor was updated to include the token:\n    \n    ```jsx\n    const response = await fetch(`/tasks/${taskId}/assign_contributor`, {\n        method: "POST",\n        headers: { \n            "Content-Type": "application/json",\n            "X-CSRFToken": csrfToken  // Include CSRF token\n        },\n        body: JSON.stringify({ contributor_id: parseInt(contributorId, 10) }),\n    });\n    ```\n    \n    - **Ensures the CSRF token is sent in the request headers** so that Flask-WTF does not reject the request.\n    1. **Verify and Debug Network Requests**\n    - The updated request headers were verified using **Chrome DevTools > Network tab** to ensure the X-CSRFToken was included.\n    - The error messages disappeared, and the contributor assignment request **succeeded with a 200 OK response**.\n    \n    ---\n    \n    **Final Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'task_id': '292', 'project_id': '6', 'task_type': 'User Story', 'story_points': 0, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 16:38:31,370 DEBUG: Validating parent_id change for Task 292: None
2025-02-11 16:38:31,372 INFO: Hierarchy validation passed for Task 292.
2025-02-11 16:38:31,373 INFO: Validation passed for parent_id: None
2025-02-11 16:38:31,373 DEBUG: Validating task_type change for Task 292: User Story
2025-02-11 16:38:31,373 INFO: Hierarchy validation passed for Task 292.
2025-02-11 16:38:31,373 INFO: Validation passed for task_type: User Story
2025-02-11 16:38:31,375 INFO: UPDATE task SET description=%(description)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 16:38:31,376 INFO: [generated in 0.00044s] {'description': '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API ... (2227 characters truncated) ... Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'updated_at': datetime.datetime(2025, 2, 11, 15, 38, 31, 373963), 'task_id': 292}
2025-02-11 16:38:31,381 INFO: COMMIT
2025-02-11 16:38:31,382 INFO: Task ID 292 updated successfully.
2025-02-11 16:38:31,382 INFO: BEGIN (implicit)
2025-02-11 16:38:31,383 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:38:31,383 INFO: [cached since 5605s ago] {'pk_1': 292}
2025-02-11 16:38:31,384 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:38:31,384 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API ... (2227 characters truncated) ... Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 11, 15, 38, 31, 373963), None)
2025-02-11 16:38:31,385 INFO: ROLLBACK
2025-02-11 16:38:31,385 INFO: 127.0.0.1 - - [11/Feb/2025 16:38:31] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 16:38:40,368 INFO: Entering list_tasks route...
2025-02-11 16:38:40,368 DEBUG: Filters used: {'is_archived': False}
2025-02-11 16:38:40,369 DEBUG: Applying filters: {'is_archived': False}
2025-02-11 16:38:40,377 DEBUG: Generated query: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name, project_1.id AS project_1_id, project_1.name AS project_1_name, project_1.start_date AS project_1_start_date, project_1.end_date AS project_1_end_date, project_1.scope AS project_1_scope, project_1.completed_story_points AS project_1_completed_story_points, project_1.created_at AS project_1_created_at, project_1.updated_at AS project_1_updated_at, contributor_2.id AS contributor_2_id, contributor_2.name AS contributor_2_name 
FROM task LEFT OUTER JOIN task AS task_1 ON task.id = task_1.parent_id LEFT OUTER JOIN project AS project_1 ON project_1.id = task.project_id LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project_1.id = project_contributor_1.project_id LEFT OUTER JOIN contributor AS contributor_2 ON contributor_2.id = task.contributor_id 
WHERE task.is_archived = false ORDER BY task.sort_order
2025-02-11 16:38:40,378 INFO: BEGIN (implicit)
2025-02-11 16:38:40,379 INFO: SELECT anon_1.task_id AS anon_1_task_id, anon_1.task_name AS anon_1_task_name, anon_1.task_sort_order AS anon_1_task_sort_order, anon_1.task_description AS anon_1_task_description, anon_1.task_task_type AS anon_1_task_task_type, anon_1.task_is_archived AS anon_1_task_is_archived, anon_1.task_completed AS anon_1_task_completed, anon_1.task_status AS anon_1_task_status, anon_1.task_parent_id AS anon_1_task_parent_id, anon_1.task_project_id AS anon_1_task_project_id, anon_1.task_contributor_id AS anon_1_task_contributor_id, anon_1.task_story_points AS anon_1_task_story_points, anon_1.task_created_at AS anon_1_task_created_at, anon_1.task_updated_at AS anon_1_task_updated_at, anon_1.task_completed_date AS anon_1_task_completed_date, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name, project_1.id AS project_1_id, project_1.name AS project_1_name, project_1.start_date AS project_1_start_date, project_1.end_date AS project_1_end_date, project_1.scope AS project_1_scope, project_1.completed_story_points AS project_1_completed_story_points, project_1.created_at AS project_1_created_at, project_1.updated_at AS project_1_updated_at, contributor_2.id AS contributor_2_id, contributor_2.name AS contributor_2_name 
FROM (SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.is_archived = false ORDER BY task.sort_order 
 LIMIT %(param_1)s OFFSET %(param_2)s) AS anon_1 LEFT OUTER JOIN task AS task_1 ON anon_1.task_id = task_1.parent_id LEFT OUTER JOIN project AS project_1 ON project_1.id = anon_1.task_project_id LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project_1.id = project_contributor_1.project_id LEFT OUTER JOIN contributor AS contributor_2 ON contributor_2.id = anon_1.task_contributor_id ORDER BY anon_1.task_sort_order
2025-02-11 16:38:40,379 INFO: [cached since 6073s ago] {'param_1': 110, 'param_2': 0}
2025-02-11 16:38:40,385 DEBUG: Col ('anon_1_task_id', 'anon_1_task_name', 'anon_1_task_sort_order', 'anon_1_task_description', 'anon_1_task_task_type', 'anon_1_task_is_archived', 'anon_1_task_completed', 'anon_1_task_status', 'anon_1_task_parent_id', 'anon_1_task_project_id', 'anon_1_task_contributor_id', 'anon_1_task_story_points', 'anon_1_task_created_at', 'anon_1_task_updated_at', 'anon_1_task_completed_date', 'task_1_id', 'task_1_name', 'task_1_sort_order', 'task_1_description', 'task_1_task_type', 'task_1_is_archived', 'task_1_completed', 'task_1_status', 'task_1_parent_id', 'task_1_project_id', 'task_1_contributor_id', 'task_1_story_points', 'task_1_created_at', 'task_1_updated_at', 'task_1_completed_date', 'contributor_1_id', 'contributor_1_name', 'project_1_id', 'project_1_name', 'project_1_start_date', 'project_1_end_date', 'project_1_scope', 'project_1_completed_story_points', 'project_1_created_at', 'project_1_updated_at', 'contributor_2_id', 'contributor_2_name')
2025-02-11 16:38:40,389 DEBUG: Row (290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,390 DEBUG: Row (298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None, 299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 16:38:40,390 DEBUG: Row (275, 'add sprints, cycles', 0, 'Make naming customizable', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 48, 52, 680022), datetime.datetime(2025, 2, 10, 8, 38, 37, 622196), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,390 DEBUG: Row (276, 'add support for priority', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 49, 26, 189497), datetime.datetime(2025, 2, 10, 8, 28, 47, 447612), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,390 DEBUG: Row (264, 'close all / open all childtasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 25, 20, 101418), datetime.datetime(2025, 2, 10, 8, 47, 14, 915970), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,391 DEBUG: Row (285, 'add text truncation to project names in task list', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 45, 47, 27805), datetime.datetime(2025, 2, 10, 9, 45, 47, 29729), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,391 DEBUG: Row (257, 'Update Task API Integration', 0, "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'Subtask', False, False, 'Not Started', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 22, 55, 49, 566819), datetime.datetime(2025, 2, 5, 22, 18, 17, 807154), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,391 DEBUG: Row (294, 'issue: task table filters not working', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 19, 21, 22598), datetime.datetime(2025, 2, 10, 10, 19, 21, 24676), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,391 DEBUG: Row (267, 'improvements to toggles and nested tasks', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 29, 12, 464594), datetime.datetime(2025, 2, 10, 8, 47, 24, 581680), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,392 DEBUG: Row (283, 'fix update title', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 58, 769700), datetime.datetime(2025, 2, 10, 8, 46, 47, 282087), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,392 DEBUG: Row (271, 'make sure dynamically added rows has the exact same styling and includes every element', 0, 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 21, 7, 108431), datetime.datetime(2025, 2, 10, 8, 38, 47, 340105), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,392 DEBUG: Row (273, 'disable parent task selector in epics', 0, 'and add text, Epic can´t have parent tasks', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 0, 45, 20, 740910), datetime.datetime(2025, 2, 10, 8, 39, 17, 639890), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,392 DEBUG: Row (269, 'fix styling for sweetalert', 0, '', 'User Story', False, False, 'In Progress', None, 6, None, 0, datetime.datetime(2025, 2, 8, 15, 54, 56, 717846), datetime.datetime(2025, 2, 10, 8, 39, 32, 172437), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,392 DEBUG: Row (286, 'add support for labels/tags', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 46, 23, 985620), datetime.datetime(2025, 2, 10, 9, 46, 23, 987564), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,393 DEBUG: Row (299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 16:38:40,393 DEBUG: Row (266, 'highlight the nested tasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 28, 30, 382949), datetime.datetime(2025, 2, 10, 8, 47, 4, 382929), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,393 DEBUG: Row (279, 'github integration', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 38, 238202), datetime.datetime(2025, 2, 10, 8, 39, 24, 168451), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,393 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 11, 15, 36, 26, 718508), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,393 DEBUG: Row (278, 'search feature for tasks list', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 3, 369833), datetime.datetime(2025, 2, 10, 8, 39, 4, 5957), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,393 DEBUG: Row (281, 'add high level plan', 0, 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 27, 1, 218606), datetime.datetime(2025, 2, 10, 8, 38, 54, 754760), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,393 DEBUG: Row (287, 'when moving a parent item to another project make sure the subtasks are moved as well', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 48, 31, 986870), datetime.datetime(2025, 2, 10, 9, 48, 31, 988859), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,394 DEBUG: Row (272, 'implement a markdown text editor like notion', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 28, 18, 300231), datetime.datetime(2025, 2, 10, 8, 28, 39, 669255), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,394 DEBUG: Row (293, 'click on title should copy the task title and id to clipboard', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 16, 33, 508209), datetime.datetime(2025, 2, 10, 10, 16, 33, 510414), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,394 DEBUG: Row (277, 'custom task workflow statuses', 0, 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- ... (780 characters truncated) ...  tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 16, 3, 352588), datetime.datetime(2025, 2, 10, 8, 38, 28, 123328), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,394 DEBUG: Row (274, 'add support for goals, initiatives, okr´s', 0, 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 46, 27, 204912), datetime.datetime(2025, 2, 10, 8, 28, 17, 663922), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,394 DEBUG: Row (280, 'logging (task and project history)', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 37, 44, 435112), datetime.datetime(2025, 2, 10, 8, 28, 28, 947805), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,394 DEBUG: Row (282, 'implement same task list in projects but filtered on project', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 17, 786154), datetime.datetime(2025, 2, 10, 9, 41, 17, 787861), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,394 DEBUG: Row (296, 'issue: contributor is lost after updating task', 0, '', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 26, 43, 881947), datetime.datetime(2025, 2, 11, 15, 37, 31, 11120), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,395 DEBUG: Row (288, 'when trying to move subtask to another project, make sure a warning is displayed', 0, 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be l ... (312 characters truncated) ... , Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 54, 36, 297869), datetime.datetime(2025, 2, 10, 8, 54, 51, 840686), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,395 DEBUG: Row (284, 'add type "issue/bug"', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 42, 27, 719439), datetime.datetime(2025, 2, 10, 9, 42, 27, 720908), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,395 DEBUG: Row (295, 'issue: drag and drop errors', 0, '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 22, 54, 461413), datetime.datetime(2025, 2, 10, 10, 22, 54, 462542), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,395 DEBUG: Row (297, 'example parent epic', 0, '', 'Epic', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 39, 51, 620509), datetime.datetime(2025, 2, 10, 10, 39, 51, 622712), None, 298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 16:38:40,395 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API ... (2227 characters truncated) ... Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 11, 15, 38, 31, 373963), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,396 DEBUG: Row (265, 'smooth transition for toggles', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 27, 23, 422612), datetime.datetime(2025, 2, 10, 8, 46, 55, 831743), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,396 DEBUG: Row (270, 'the newest task', 0, '', 'Subtask', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 0, 7, 34, 368035), datetime.datetime(2025, 2, 10, 1, 7, 34, 372478), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 16:38:40,396 DEBUG: Row (291, 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 9, 52, 988609), datetime.datetime(2025, 2, 10, 10, 9, 52, 997455), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:38:40,397 DEBUG: Row (136, 'Page scroll should stay in position when reloading', 2, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 16, 18, 21, 50, 187247), datetime.datetime(2025, 1, 16, 19, 22, 36, 214901), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,397 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,398 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,399 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,399 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,399 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,400 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,400 DEBUG: Row (133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,401 DEBUG: Row (132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,401 DEBUG: Row (134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,401 DEBUG: Row (131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,402 DEBUG: Row (135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,402 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None, 63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,402 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None, 62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,403 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,403 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,403 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,403 DEBUG: Row (64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,403 DEBUG: Row (67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,403 DEBUG: Row (65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,404 DEBUG: Row (63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,404 DEBUG: Row (63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,404 DEBUG: Row (68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,405 DEBUG: Row (69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,405 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,406 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,406 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,407 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,407 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,407 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,408 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 2, 11, 11, 36, 20, 238219), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,408 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,408 DEBUG: Row (107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 2, 11, 11, 36, 20, 238219), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,408 DEBUG: Row (108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,408 DEBUG: Row (112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,409 DEBUG: Row (109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,409 DEBUG: Row (110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,409 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,411 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,417 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,418 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,428 DEBUG: Row (111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,433 DEBUG: Row (113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,434 DEBUG: Row (114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,434 DEBUG: Row (106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,434 DEBUG: Row (106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,434 DEBUG: Row (128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,434 DEBUG: Row (129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,441 DEBUG: Row (102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,441 DEBUG: Row (102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,442 DEBUG: Row (117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,442 DEBUG: Row (116, 'Frontend Logout Button', 33, 'Add a logout button to the UI and handle session clearing.', 'Subtask', False, False, 'Not Started', None, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 2, 9, 12, 31, 17, 939784), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,442 DEBUG: Row (115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,443 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,443 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,443 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,443 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,443 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,443 DEBUG: Row (45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None, 51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,444 DEBUG: Row (50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 22, 274304), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,444 DEBUG: Row (51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,444 DEBUG: Row (46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None, 54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:38:40,444 DEBUG: Row (54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,444 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None, 56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,444 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None, 55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,444 DEBUG: Row (56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,444 DEBUG: Row (55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,445 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None, 58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,445 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None, 57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,445 DEBUG: Row (57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,445 DEBUG: Row (58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,445 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None, 60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,445 DEBUG: Row (59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 15, 491910), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,445 DEBUG: Row (60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,445 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, 5, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 11, 8, 25, 7, 992524), None, 52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,446 DEBUG: Row (52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,446 DEBUG: Row (53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 24, 54, 245010), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,446 DEBUG: Row (42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, 5, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 47, 274896), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,446 DEBUG: Row (43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 33, 908549), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,446 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,446 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,447 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,447 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,447 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,447 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,449 DEBUG: Row (90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,449 DEBUG: Row (88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,450 DEBUG: Row (89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,450 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,453 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,459 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,460 DEBUG: Row (93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,460 DEBUG: Row (91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,461 DEBUG: Row (92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,461 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,464 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,469 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,470 DEBUG: Row (96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,470 DEBUG: Row (94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,470 DEBUG: Row (95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,479 DEBUG: Row (127, 'Backend API for Password Reset', 68, 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'Subtask', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 2, 10, 23, 59, 50, 734037), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,479 DEBUG: Row (126, 'Email Configuration for Password Reset', 69, 'Configure email service to send password reset links.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 334340), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,479 DEBUG: Row (104, 'Middleware for Role Enforcement', 70, 'As a system, I want to enforce role-based access to specific routes.', 'User Story', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 23, 40, 346816), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,490 DEBUG: Row (122, 'Testing Role Enforcement', 71, 'Write tests to ensure proper access control based on roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 185693), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,494 DEBUG: Row (121, 'Develop Role Enforcement Middleware', 72, 'Implement middleware to check user roles for access control.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 187439), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,494 DEBUG: Row (105, 'Profile Management', 73, 'As a user, I want to update my profile (username, email, password).', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 339830), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,494 DEBUG: Row (123, 'Backend API for Profile Management', 74, 'Create PATCH /api/profile endpoint to update user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 678781), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,511 DEBUG: Row (125, 'Testing Profile Updates', 75, 'Write tests for profile update functionality.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 680382), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:38:40,553 INFO: SELECT count(*) AS count_1 
FROM (SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.is_archived = false) AS anon_1
2025-02-11 16:38:40,554 INFO: [cached since 6073s ago] {}
2025-02-11 16:38:40,555 DEBUG: Col ('count_1',)
2025-02-11 16:38:40,555 DEBUG: Row (131,)
2025-02-11 16:38:40,557 INFO: SELECT DISTINCT task.task_type AS task_task_type 
FROM task
2025-02-11 16:38:40,557 INFO: [cached since 6073s ago] {}
2025-02-11 16:38:40,557 DEBUG: Col ('task_task_type',)
2025-02-11 16:38:40,557 DEBUG: Row ('Epic',)
2025-02-11 16:38:40,557 DEBUG: Row ('Subtask',)
2025-02-11 16:38:40,557 DEBUG: Row ('User Story',)
2025-02-11 16:38:40,558 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project
2025-02-11 16:38:40,558 INFO: [cached since 6073s ago] {}
2025-02-11 16:38:40,558 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 16:38:40,558 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 16:38:40,558 DEBUG: Row (2, 'Project Beta', datetime.date(2024, 2, 1), datetime.date(2024, 11, 30), None, 10, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 16:38:40,559 DEBUG: Row (3, 'Project Gamma', datetime.date(2024, 3, 1), datetime.date(2024, 10, 31), None, 20, datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), datetime.datetime(2024, 12, 11, 1, 37, 19, 511738))
2025-02-11 16:38:40,559 DEBUG: Row (4, 'Project Theta', datetime.date(2024, 12, 11), datetime.date(2024, 12, 27), None, 0, datetime.datetime(2024, 12, 12, 19, 26, 42, 642098), datetime.datetime(2024, 12, 12, 19, 26, 42, 642102))
2025-02-11 16:38:40,559 DEBUG: Row (5, 'Project Delta', datetime.date(2025, 1, 4), datetime.date(2025, 3, 8), None, 0, datetime.datetime(2025, 1, 3, 8, 16, 18, 658051), datetime.datetime(2025, 1, 3, 8, 16, 18, 658058))
2025-02-11 16:38:40,559 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259))
2025-02-11 16:38:40,559 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 16:38:40,560 DEBUG: Tasks passed to template: [{'id': 290, 'name': 'issue: error when changing task type and', 'description': 'issue: error when changing task type and parent task before saving', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:00:03.417734', 'updated_at': '2025-02-10T09:15:09.284969'}, {'id': 298, 'name': 'example user story with parent epic 297', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 297, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:41:01.907455', 'updated_at': '2025-02-10T14:59:04.142570'}, {'id': 275, 'name': 'add sprints, cycles', 'description': 'Make naming customizable', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:48:52.680022', 'updated_at': '2025-02-10T08:38:37.622196'}, {'id': 276, 'name': 'add support for priority', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:49:26.189497', 'updated_at': '2025-02-10T08:28:47.447612'}, {'id': 264, 'name': 'close all / open all childtasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:25:20.101418', 'updated_at': '2025-02-10T08:47:14.915970'}, {'id': 285, 'name': 'add text truncation to project names in task list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:45:47.027805', 'updated_at': '2025-02-10T09:45:47.029729'}, {'id': 257, 'name': 'Update Task API Integration', 'description': "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 240, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-02-05T22:55:49.566819', 'updated_at': '2025-02-05T22:18:17.807154'}, {'id': 294, 'name': 'issue: task table filters not working', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:19:21.022598', 'updated_at': '2025-02-10T10:19:21.024676'}, {'id': 267, 'name': 'improvements to toggles and nested tasks', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:29:12.464594', 'updated_at': '2025-02-10T08:47:24.581680'}, {'id': 283, 'name': 'fix update title', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:58.769700', 'updated_at': '2025-02-10T08:46:47.282087'}, {'id': 271, 'name': 'make sure dynamically added rows has the exact same styling and includes every element', 'description': 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:21:07.108431', 'updated_at': '2025-02-10T08:38:47.340105'}, {'id': 273, 'name': 'disable parent task selector in epics', 'description': 'and add text, Epic can´t have parent tasks', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:45:20.740910', 'updated_at': '2025-02-10T08:39:17.639890'}, {'id': 269, 'name': 'fix styling for sweetalert', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'In Progress', 'created_at': '2025-02-08T15:54:56.717846', 'updated_at': '2025-02-10T08:39:32.172437'}, {'id': 286, 'name': 'add support for labels/tags', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:46:23.985620', 'updated_at': '2025-02-10T09:46:23.987564'}, {'id': 299, 'name': 'example sub task with parent user story 298', 'description': 'Test update 1\nTest update 2\nTest update 3', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 298, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:42:38.905700', 'updated_at': '2025-02-10T23:23:08.671464'}, {'id': 266, 'name': 'highlight the nested tasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:28:30.382949', 'updated_at': '2025-02-10T08:47:04.382929'}, {'id': 279, 'name': 'github integration', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:38.238202', 'updated_at': '2025-02-10T08:39:24.168451'}, {'id': 289, 'name': 'issue: parent task is lost when updating task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T08:56:25.273984', 'updated_at': '2025-02-11T15:36:26.718508'}, {'id': 278, 'name': 'search feature for tasks list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:03.369833', 'updated_at': '2025-02-10T08:39:04.005957'}, {'id': 281, 'name': 'add high level plan', 'description': 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:27:01.218606', 'updated_at': '2025-02-10T08:38:54.754760'}, {'id': 287, 'name': 'when moving a parent item to another project make sure the subtasks are moved as well', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:48:31.986870', 'updated_at': '2025-02-10T09:48:31.988859'}, {'id': 272, 'name': 'implement a markdown text editor like notion', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:28:18.300231', 'updated_at': '2025-02-10T08:28:39.669255'}, {'id': 293, 'name': 'click on title should copy the task title and id to clipboard', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:16:33.508209', 'updated_at': '2025-02-10T10:16:33.510414'}, {'id': 277, 'name': 'custom task workflow statuses', 'description': 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- Custom status\n-- Custom status\n- In Progress\n-- Custom status\n-- Custom status\n-- Custom status\n- Completed\n-- Custom status\n-- Custom status\n\n2. How can we track a task through different stages and save the sequence of events or stages the task has gone through?\nI´m thinking it could be good for mapping out processes, identifying bottlenecks and provide valuable insights while improving and streamlining workflows.\n- Stages\n- Contacts taken\n- Respons time \n- Time to action after responses\n- Dependencies\n\nNeed to be able to record every action related to this action.\nCommunication integrations\n- Slack\n- Email\n- Text messages\n- Phonecalls\n- Calendar events, meetings\n- Zoom, Google meet, Teams etc..\n\n\n2. Set custom statuses per project (can use tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:16:03.352588', 'updated_at': '2025-02-10T08:38:28.123328'}, {'id': 274, 'name': 'add support for goals, initiatives, okr´s', 'description': 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:46:27.204912', 'updated_at': '2025-02-10T08:28:17.663922'}, {'id': 280, 'name': 'logging (task and project history)', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:37:44.435112', 'updated_at': '2025-02-10T08:28:28.947805'}, {'id': 282, 'name': 'implement same task list in projects but filtered on project', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:17.786154', 'updated_at': '2025-02-10T09:41:17.787861'}, {'id': 296, 'name': 'issue: contributor is lost after updating task', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T09:26:43.881947', 'updated_at': '2025-02-11T15:37:31.011120'}, {'id': 288, 'name': 'when trying to move subtask to another project, make sure a warning is displayed', 'description': 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be lost"\nOR\n\nIs it possible, and is it desireable to keep parent child relationships across projects?\nSo that a parent can be in one project but the child tasks can be in different projects?\n\nLets say \nParent epic is \n"Internationalisation"\nChild user stories are\n- Timezones\n- Language\n- Currency\n- Day, Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:54:36.297869', 'updated_at': '2025-02-10T08:54:51.840686'}, {'id': 284, 'name': 'add type "issue/bug"', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:42:27.719439', 'updated_at': '2025-02-10T09:42:27.720908'}, {'id': 295, 'name': 'issue: drag and drop errors', 'description': '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:22:54.461413', 'updated_at': '2025-02-10T10:22:54.462542'}, {'id': 297, 'name': 'example parent epic', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:39:51.620509', 'updated_at': '2025-02-10T10:39:51.622712'}, {'id': 292, 'name': 'issue: assigning contributor does not work', 'description': '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API endpoint resulted in a **400 Bad Request** error. Upon investigation, the following problems were identified:\n    \n    1. **Missing CSRF Token:**\n    - The request failed due to a missing CSRF token, as shown in the error message: *“Bad Request: The CSRF token is missing.”*\n    - The frontend was not correctly including the CSRF token in the request headers.\n    1. **JavaScript Error (Undefined CSRF Token Variable):**\n    - The error *“ReferenceError: csrfToken is not defined”* indicated that the CSRF token was not being retrieved properly in the JavaScript code.\n    1. **Incorrect Fetch Request Headers:**\n    - The fetch request did not include the CSRF token under the correct key (X-CSRFToken).\n    - The script attempted to send the request without properly extracting the CSRF token from the meta tag.\n    \n    **Solution**\n    \n    1. **Include the CSRF Token in the JavaScript Code**\n    \n    The CSRF token was retrieved from the meta tag and used in the request headers:\n    \n    ```jsx\n    // Retrieve CSRF token from meta tag\n    const csrfToken = document.querySelector(\'meta[name="csrf-token"]\').getAttribute(\'content\');\n    ```\n    \n    This ensures that the CSRF token is correctly fetched and available in the JavaScript scope.\n    \n    1. **Modify the Fetch Request to Include CSRF Token**\n    \n    The request to assign a contributor was updated to include the token:\n    \n    ```jsx\n    const response = await fetch(`/tasks/${taskId}/assign_contributor`, {\n        method: "POST",\n        headers: { \n            "Content-Type": "application/json",\n            "X-CSRFToken": csrfToken  // Include CSRF token\n        },\n        body: JSON.stringify({ contributor_id: parseInt(contributorId, 10) }),\n    });\n    ```\n    \n    - **Ensures the CSRF token is sent in the request headers** so that Flask-WTF does not reject the request.\n    1. **Verify and Debug Network Requests**\n    - The updated request headers were verified using **Chrome DevTools > Network tab** to ensure the X-CSRFToken was included.\n    - The error messages disappeared, and the contributor assignment request **succeeded with a 200 OK response**.\n    \n    ---\n    \n    **Final Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T09:11:12.273779', 'updated_at': '2025-02-11T15:38:31.373963'}, {'id': 265, 'name': 'smooth transition for toggles', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:27:23.422612', 'updated_at': '2025-02-10T08:46:55.831743'}, {'id': 270, 'name': 'the newest task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:07:34.368035', 'updated_at': '2025-02-10T01:07:34.372478'}, {'id': 291, 'name': 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:09:52.988609', 'updated_at': '2025-02-10T10:09:52.997455'}, {'id': 136, 'name': 'Page scroll should stay in position when reloading', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-16T18:21:50.187247', 'updated_at': '2025-01-16T19:22:36.214901'}, {'id': 130, 'name': 'Implement the Map of Task Relationships solution for drag-and-drop', 'description': 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.093022', 'updated_at': '2025-01-16T19:22:36.216705'}, {'id': 133, 'name': 'Step 4: Enhance Logging in models.py', 'description': 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nupdating the Task model in the following ways:\n\n1.\tLog Changes to parent_id:\n\t•\tLog changes to parent_id during updates, including old and new values.\n\t2.\tValidate Hierarchy with Logging:\n\t•\tLog detailed messages when validating hierarchy changes, especially for circular dependency checks.\n\nHere’s how the models.py can be updated:\n```\nfrom datetime import datetime, timezone\nfrom sqlalchemy import func, cast, CheckConstraint\nfrom sqlalchemy.orm import validates\nfrom app.extensions.db import db\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\nclass Task(db.Model):\n    __tablename__ = "task"\n    \n    # Other columns...\n\n    parent_id = db.Column(\n        db.Integer, db.ForeignKey("task.id"), index=True, nullable=True\n    )\n\n    # Relationships\n    parent = db.relationship(\n        "Task", remote_side=[id], back_populates="children", lazy="select"\n    )\n    children = db.relationship(\n        "Task", back_populates="parent", lazy="select"\n    )\n\n    \n\n\n    @staticmethod\n    def _validate_no_circular_references(new_parent_id):\n        """\n        Validates that there are no circular references in the task hierarchy.\n\n        Args:\n            new_parent_id (int): The new parent ID to validate.\n\n        Raises:\n            ValueError: If a circular reference is detected.\n        """\n        visited = set()\n        current_parent_id = new_parent_id\n\n        logger.info(f"Validating circular references for parent ID: {new_parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error(\n                    f"Circular reference detected: Parent ID {current_parent_id} already visited."\n                )\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            # Fetch the next parent_id in the hierarchy\n            parent = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not parent:\n                break  # Exit if no parent is found\n            current_parent_id = parent.parent_id\n\n        logger.info("No circular reference detected.")\n\n    @validates(\'parent_id\', \'task_type\')\n    def validate_task_changes(self, key, value):\n        """\n        Validates changes to \'parent_id\' and \'task_type\'.\n        Ensures hierarchy validity and checks for circular references.\n        """\n        logger.debug(f"Validating {key} change for Task {self.id}: {value}")\n\n        if key == \'parent_id\':\n            # Log changes to parent_id\n            if self.id and value != self.parent_id:\n                logger.info(f"Task {self.id}: Updating \'parent_id\' from {self.parent_id} to {value}")\n\n            # Prevent a task from being its own parent\n            if value and value == self.id:\n                logger.error("A task cannot be its own parent.")\n                raise ValueError("A task cannot be its own parent.")\n\n            # Check for circular references\n            if value:\n                Task.check_circular_reference(self.id, value)\n\n        elif key == \'task_type\':\n            # Log changes to task_type\n            if self.id and value != self.task_type:\n                logger.info(f"Task {self.id}: Updating \'task_type\' from {self.task_type} to {value}")\n\n        # Check hierarchy rules without triggering further validation\n        if key in [\'parent_id\', \'task_type\']:\n            self._validate_hierarchy_change(key, value)\n\n        logger.info(f"Validation passed for {key}: {value}")\n        return value\n\n    def _validate_hierarchy_change(self, key, value):\n        """\n        Validates hierarchy rules for the task based on `task_type` and `parent_id`.\n        """\n        if key == \'parent_id\' and value:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=value).first()\n            if not parent_task:\n                raise ValueError("Parent task does not exist.")\n\n            logger.debug(f"Validating hierarchy: Task {self.id}, Parent Type: {parent_task.task_type}")\n            if self.task_type == "User Story" and parent_task.task_type != "Epic":\n                raise ValueError("User Stories must have an Epic as a parent.")\n            if self.task_type == "Subtask" and parent_task.task_type != "User Story":\n                raise ValueError("Subtasks must have a User Story as a parent.")\n\n        elif key == \'task_type\' and self.parent_id:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=self.parent_id).first()\n            if parent_task:\n                logger.debug(f"Validating hierarchy: Task Type: {value}, Parent Type: {parent_task.task_type}")\n                if value == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError("User Stories must have an Epic as a parent.")\n                if value == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError("Subtasks must have a User Story as a parent.")\n\n        logger.info(f"Hierarchy validation passed for Task {self.id if self.id else \'New Task\'}.")\n\n    @staticmethod\n    def check_circular_reference(task_id, parent_id):\n        """\n        Iteratively checks for circular references in the task hierarchy.\n        Prevents stack overflow on deep hierarchies.\n        """\n        visited = set()\n        current_parent_id = parent_id\n\n        logger.info(f"Checking circular reference for Task {task_id} with Parent ID: {parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error("Circular reference detected!")\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            if current_parent_id == task_id:\n                logger.error("A task cannot be its own ancestor.")\n                raise ValueError("A task cannot be its own ancestor.")\n\n            # Fetch the next parent_id in the hierarchy\n            task = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not task:\n                break\n            current_parent_id = task.parent_id\n\n        logger.info("Circular reference check passed.")\n```\nKey Enhancements:\n\t1.\tlog_and_validate_parent_id_change:\n\t•\tLogs the old and new parent_id whenever it changes.\n\t•\tEnsures no circular references are introduced.\n\t2.\t_validate_no_circular_references:\n\t•\tValidates the parent_id field to prevent circular dependencies.\n\t•\tLogs progress and raises detailed errors if violations occur.\n\t3.\tlog_and_validate_task_type_change:\n\t•\tLogs changes to task_type with the old and new values.\n\t•\tRevalidates hierarchy rules when task_type changes.\n\t4.\tDetailed Logging for Circular Reference Validation:\n\t•\t_validate_no_circular_references and check_circular_reference methods log every step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:44:08.340041', 'updated_at': '2025-01-16T19:22:36.219710'}, {'id': 132, 'name': 'Step 1: Update tasks_table_interactions.js', 'description': '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the map for efficient parent-child relationship lookups instead of DOM traversal.\n\n```\nexport const TaskManager = {\n    init: function (csrfToken) {\n        this.csrfToken = csrfToken;\n        this.initTaskParentMap(); // Initialize the map\n        this.initDragAndDrop(); // Initialize drag-and-drop functionality\n    },\n\n    // Initialize a global map for task relationships\n    taskParentMap: new Map(),\n\n    // Build the taskParentMap from the DOM\n    initTaskParentMap: function () {\n        console.log("Initializing Task Parent Map...");\n        const rows = document.querySelectorAll("tr[data-task-id]");\n\n        rows.forEach((row) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = parseInt(row.dataset.parentId, 10) || null;\n            this.taskParentMap.set(taskId, parentId);\n        });\n\n        console.log("Task Parent Map initialized:", Array.from(this.taskParentMap.entries()));\n    },\n\n    // Update the map dynamically after drag-and-drop\n    updateTaskParentMap: function (taskId, parentId) {\n        console.log(`Updating Task Parent Map: Task ${taskId} -> Parent ${parentId}`);\n        this.taskParentMap.set(taskId, parentId);\n    },\n\n    initDragAndDrop: function () {\n        if (window.isDragAndDropInitialized) {\n            console.log("Drag-and-drop is already initialized.");\n            return;\n        }\n\n        console.log("Initializing drag-and-drop within TaskManager...");\n\n        const tableBody = document.querySelector("tbody");\n        if (!tableBody) {\n            console.warn("Task table body not found for drag-and-drop initialization");\n            return;\n        }\n\n        // Initialize Sortable.js for drag-and-drop functionality\n        Sortable.create(tableBody, {\n            handle: ".task-row", // Only draggable via `.task-row` elements\n            animation: 150, // Smooth animation\n            filter: ".task-open-link", // Prevent dragging on task links\n            preventOnFilter: true, // Prevent drag if filtered element is clicked\n            onEnd: async (event) => {\n                try {\n                    console.log("Drag-and-drop operation started...");\n                    const rows = Array.from(event.from.querySelectorAll(".task-row"));\n                    const reorderedTasks = [];\n\n                    rows.forEach((row, index) => {\n                        const taskId = parseInt(row.dataset.taskId, 10);\n                        let parentId = null;\n\n                        // Get the parent ID from the map or fallback to the dataset\n                        if (row.classList.contains("subtask-row")) {\n                            const parentRow = row.previousElementSibling;\n                            parentId = parentRow\n                                ? parseInt(parentRow.dataset.taskId, 10)\n                                : this.taskParentMap.get(taskId) || null;\n                        }\n\n                        // Update the taskParentMap dynamically\n                        this.updateTaskParentMap(taskId, parentId);\n\n                        reorderedTasks.push({\n                            id: taskId,\n                            sort_order: index + 1,\n                            parent_id: parentId,\n                        });\n                    });\n\n                    console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n                    console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n                    // Send the payload to the backend\n                    const response = await fetch("/tasks/reorder_subtasks", {\n                        method: "POST",\n                        headers: {\n                            "Content-Type": "application/json",\n                            "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n                        },\n                        body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n                    });\n\n                    if (!response.ok) {\n                        const errorData = await response.json();\n                        console.error("Error reordering tasks:", errorData);\n                        alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n                        return;\n                    }\n\n                    const data = await response.json();\n                    console.log("Task reordering successful:", data);\n\n                } catch (error) {\n                    console.error("Error during drag-and-drop operation:", error);\n                    alert("An unexpected error occurred while reordering tasks.");\n                }\n            },\n        });\n\n        window.isDragAndDropInitialized = true;\n        console.log("Drag-and-drop initialized successfully.");\n    },\n};\n```\n\nKey Updates:\n\t1.\tPrecomputed Map (taskParentMap):\n\t•\tThe initTaskParentMap function initializes the map by iterating over DOM elements and mapping each task’s ID to its parent ID.\n\t•\tThe updateTaskParentMap dynamically updates the map when tasks are reordered.\n\t2.\tEfficient Parent Lookup:\n\t•\tThe parentId is derived from the precomputed map rather than DOM traversal.\n\t3.\tBackend Payload:\n\t•\tA structured payload (reorderedTasks) is sent to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:44:08.338301', 'updated_at': '2025-02-06T21:59:17.417466'}, {'id': 134, 'name': 'Step 2: Update the Backend in routes.py', 'description': 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\nPlan for step 2:\n\t1.\tVerify the payload structure:\n\t•\tEnsure that the payload includes all necessary fields (id, sort_order, parent_id) for each task.\n\t•\tValidate that the parent-child relationships in the precomputed map (taskParentMap) are reflected correctly in the payload.\n\t2.\tSubmit the payload to the backend:\n\t•\tEnhance the fetch request in the onEnd function of initDragAndDrop to log detailed submission data.\n\t•\tConfirm the payload integrity in the browser console before submission.\n\t3.\tUpdate backend logging:\n\t•\tAdd logging to /reorder_subtasks in routes.py to confirm receipt of the correct payload and process parent-child updates.\n\t•\tLog before and after database updates for better debugging.\n\n-----\nUpdated tasks_table_interactions.js\n\nReplace this section:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    let parentId = null;\n```\nWith:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    const parentId = this.taskParentMap.get(taskId) || null;\n```\nThe this.taskParentMap provides a precomputed and dynamic mapping of taskId to parentId. By using this map, we avoid relying on DOM traversal logic (row.closest or row.previousElementSibling) during drag-and-drop operations, which can sometimes be unreliable or cumbersome.\n\nFull Revised onEnd section:\n```\nonEnd: async (event) => {\n    try {\n        console.log("Drag-and-drop operation started...");\n        const rows = Array.from(event.from.querySelectorAll(".task-row"));\n        const reorderedTasks = [];\n\n        rows.forEach((row, index) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = this.taskParentMap.get(taskId) || null;\n\n            // Update the taskParentMap dynamically\n            this.updateTaskParentMap(taskId, parentId);\n\n            reorderedTasks.push({\n                id: taskId,\n                sort_order: index + 1,\n                parent_id: parentId,\n            });\n        });\n\n        console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n        console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n        // Send the payload to the backend\n        const response = await fetch("/tasks/reorder_subtasks", {\n            method: "POST",\n            headers: {\n                "Content-Type": "application/json",\n                "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n            },\n            body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            console.error("Error reordering tasks:", errorData);\n            alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n            return;\n        }\n\n        const data = await response.json();\n        console.log("Task reordering successful:", data);\n\n    } catch (error) {\n        console.error("Error during drag-and-drop operation:", error);\n        alert("An unexpected error occurred while reordering tasks.");\n    }\n}\n```\n---------------------------------\nEnsure updates include:\n\t•\tBetter Logging: Adding logs for key events such as database changes and validation results.\n\t•\tInput Validation: Ensure all required fields (id, sort_order, parent_id) exist in the payload.\n\t•\tPost-Commit Validation: Confirm database updates after the commit.\n\t•\tImproved Error Handling: Include specific error messages and consistent rollback mechanisms.\n\nBelow is the revised reorder_subtasks route with descriptive comments for each section:\n```\n@bp.route("/reorder_subtasks", methods=["POST"])\ndef reorder_subtasks():\n    """\n    Reorder subtasks globally or reassign them to a different parent.\n\n    Steps:\n    - Parse and validate input from the frontend.\n    - Update parent-child relationships and sort order in the database.\n    - Commit changes and return a success response.\n    - Handle errors gracefully and provide detailed logs for debugging.\n    """\n    logger.info("Entering reorder_subtasks route...")\n    logger.info(f"Received payload for reordering tasks: {request.json}")\n\n    try:\n        # Step 1: Parse input\n        parent_id = request.json.get("parent_id", None)  # Optional parent ID for the tasks being reordered\n        ordered_tasks = request.json.get("ordered_tasks", [])\n\n        logger.debug(f"Parsed parent_id: {parent_id}")\n        logger.debug(f"Parsed ordered_tasks: {ordered_tasks}")\n\n        # Step 2: Validate input\n        if not isinstance(ordered_tasks, list) or not all(\n            isinstance(task, dict) and "id" in task and "sort_order" in task and "parent_id" in task\n            for task in ordered_tasks\n        ):\n            logger.error(f"Invalid input received for ordered_tasks: {ordered_tasks}")\n            return jsonify({\n                "error": "Invalid input format for \'ordered_tasks\'. Each task must include \'id\', \'sort_order\', and \'parent_id\'."\n            }), 400\n\n        # Step 3: Validate parent task (if applicable)\n        if parent_id is not None:\n            parent_task = Task.query.get(parent_id)\n            if not parent_task:\n                logger.error(f"Parent task with ID {parent_id} not found.")\n                return jsonify({"error": f"Parent ID {parent_id} is invalid or does not exist."}), 400\n\n        logger.info("Input validation passed. Proceeding with task updates...")\n\n        # Step 4: Process updates for each subtask\n        updated_subtasks = []  # Keep track of updated subtasks for post-commit validation\n\n        for task_data in ordered_tasks:\n            subtask_id = task_data["id"]\n            sort_order = task_data["sort_order"]\n            new_parent_id = task_data["parent_id"]\n\n            # Fetch the subtask from the database\n            subtask = Task.query.get(subtask_id)\n            if not subtask:\n                logger.warning(f"Subtask ID {subtask_id} not found. Skipping...")\n                continue\n\n            # Log and update parent_id if it changes\n            if new_parent_id is not None and new_parent_id != subtask.parent_id:\n                logger.info(f"Reassigning subtask {subtask.id} to new parent {new_parent_id}")\n                subtask.parent_id = new_parent_id\n\n            # Update sort order\n            subtask.sort_order = sort_order\n            logger.debug(f"Updated subtask {subtask.id}: parent_id={subtask.parent_id}, sort_order={subtask.sort_order}")\n\n            # Add to the list of updated subtasks for validation\n            updated_subtasks.append(subtask)\n\n        # Step 5: Commit changes to the database\n        try:\n            db.session.commit()\n            logger.info(f"Subtasks reordered successfully: {[task[\'id\'] for task in ordered_tasks]}")\n        except Exception as e:\n            logger.error(f"Error committing changes to the database: {str(e)}")\n            db.session.rollback()\n            return jsonify({"error": "Failed to save changes to the database. Please try again."}), 500\n\n        # Step 6: Post-commit validation\n        for subtask in updated_subtasks:\n            logger.debug(f"Post-commit parent_id for task {subtask.id}: {subtask.parent_id}")\n            logger.debug(f"Post-commit sort_order for task {subtask.id}: {subtask.sort_order}")\n\n        # Step 7: Return success response\n        return jsonify({\n            "success": True,\n            "message": "Subtasks reordered successfully.",\n            "updated_subtasks": [subtask.id for subtask in updated_subtasks]\n        }), 200\n\n    except Exception as e:\n        # Step 8: Handle unexpected errors\n        logger.error(f"Error while reordering subtasks: {str(e)}", exc_info=True)\n        db.session.rollback()\n        return jsonify({"error": "An unexpected error occurred while reordering subtasks."}), 500\n```\nKey Changes and Descriptive Comments\n\t1.\tInput Parsing:\n\t•\tExtracts parent_id and ordered_tasks from the request payload.\n\t•\tLogs the parsed values for debugging.\n\t2.\tInput Validation:\n\t•\tEnsures ordered_tasks is a list of dictionaries with the required keys.\n\t•\tValidates parent_id if provided, ensuring the parent task exists in the database.\n\t3.\tUpdate Processing:\n\t•\tIterates through ordered_tasks, updating each task’s parent_id and sort_order.\n\t•\tLogs changes for each task.\n\t4.\tDatabase Commit:\n\t•\tCommits all updates in a single transaction.\n\t•\tLogs success or rolls back changes in case of an error.\n\t5.\tPost-Commit Validation:\n\t•\tVerifies that the parent_id and sort_order changes were successfully saved to the database.\n\t6.\tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:46:29.348853', 'updated_at': '2025-02-06T21:59:21.617065'}, {'id': 131, 'name': 'Step 5: Update utils.py', 'description': 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nChanges to Make:\n\t1.\tEnhance Task Filtering:\n\t•\tEnsure the filters handle parent-child relationships explicitly.\n\t•\tAdd options to include or exclude subtasks in queries.\n\t2.\tUtility Function for Debugging Parent-Child Relationships:\n\t•\tProvide a function to generate a map or list of parent-child relationships for debugging purposes.\n\t3.\tValidation Functions:\n\t•\tAdd a utility function to validate parent-child relationships and ensure no circular dependencies.\n\nUpdated utils.py Code:\n```\nimport logging\nfrom sqlalchemy import func\nfrom sqlalchemy.orm import joinedload\nfrom app.extensions.db import db\nfrom app.tasks.models import Task\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\n\nclass TaskService:\n    @staticmethod\n    def filter_tasks(filters=None, include_subtasks=True, page=None, per_page=None):\n        """\n        Dynamically filters tasks with an option to include or exclude subtasks.\n\n        Args:\n            filters (dict): Filtering criteria.\n            include_subtasks (bool): Whether to include subtasks in the query.\n            page (int, optional): Page number for pagination.\n            per_page (int, optional): Items per page for pagination.\n\n        Returns:\n            Query or Pagination: A SQLAlchemy query object or paginated results.\n        """\n        query = Task.query.options(\n            db.joinedload(Task.project).joinedload(Project.contributors),\n            db.joinedload(Task.contributor),\n            db.joinedload(Task.children),\n        ).order_by(Task.sort_order)\n\n        if filters:\n            logger.debug(f"Applying filters: {filters}")\n\n            # Apply standard filters\n            if "is_archived" in filters:\n                query = query.filter(Task.is_archived == filters["is_archived"])\n            if "project_id" in filters:\n                query = query.filter(Task.project_id == filters["project_id"])\n            if "task_type" in filters:\n                if isinstance(filters["task_type"], list):\n                    query = query.filter(Task.task_type.in_(filters["task_type"]))\n                else:\n                    query = query.filter(Task.task_type == filters["task_type"])\n            if "completion_status" in filters:\n                completion_map = {"completed": True, "in_progress": False}\n                if filters["completion_status"] in completion_map:\n                    query = query.filter(Task.completed == completion_map[filters["completion_status"]])\n\n            # Optionally exclude subtasks\n            if not include_subtasks:\n                query = query.filter(Task.task_type != "Subtask")\n\n        logger.debug(f"Generated query: {query}")\n\n        # Pagination\n        if page and per_page:\n            return query.paginate(page=page, per_page=per_page, error_out=False)\n        return query\n\n    @staticmethod\n    def debug_parent_child_relationships(project_id=None):\n        """\n        Generates a debug map of parent-child relationships for all tasks.\n\n        Args:\n            project_id (int, optional): Restrict to tasks from a specific project.\n\n        Returns:\n            dict: A dictionary mapping parent IDs to their child task IDs.\n        """\n        query = Task.query\n        if project_id:\n            query = query.filter(Task.project_id == project_id)\n\n        tasks = query.options(\n            db.load_only(Task.id, Task.parent_id)\n        ).all()\n\n        relationship_map = {}\n        for task in tasks:\n            if task.parent_id not in relationship_map:\n                relationship_map[task.parent_id] = []\n            relationship_map[task.parent_id].append(task.id)\n\n        logger.debug(f"Parent-Child Relationship Map: {relationship_map}")\n        return relationship_map\n\n    @staticmethod\n    def validate_parent_child_relationships():\n        """\n        Validates all parent-child relationships in the database to ensure they conform to hierarchy rules.\n\n        Raises:\n            ValueError: If invalid relationships are detected.\n        """\n        tasks = Task.query.options(db.joinedload(Task.parent)).all()\n\n        for task in tasks:\n            if task.parent_id:\n                parent_task = task.parent\n                if not parent_task:\n                    raise ValueError(f"Task {task.id} has an invalid parent ID {task.parent_id}.")\n\n                # Validate hierarchy rules\n                if task.task_type == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError(f"User Story {task.id} must have an Epic as its parent.")\n                if task.task_type == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError(f"Subtask {task.id} must have a User Story as its parent.")\n\n        logger.info("All parent-child relationships are valid.")\n\n    @staticmethod\n    def get_all_task_ids_with_parents():\n        """\n        Returns a flat list of tasks with their parent IDs for debugging.\n\n        Returns:\n            list: A list of tuples (task_id, parent_id).\n        """\n        tasks = Task.query.with_entities(Task.id, Task.parent_id).all()\n        logger.debug(f"Task IDs with Parent IDs: {tasks}")\n        return tasks\n```\n\n\nExplanation of Changes:\n\t1.\tfilter_tasks Enhancements:\n\t•\tAdded include_subtasks parameter to optionally exclude subtasks from the query.\n\t2.\tdebug_parent_child_relationships:\n\t•\tCreates a parent-child relationship map for debugging purposes.\n\t3.\tvalidate_parent_child_relationships:\n\t•\tIterates through all tasks to validate parent-child hierarchy and ensures no invalid relationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.091824', 'updated_at': '2025-01-16T19:22:36.236691'}, {'id': 135, 'name': 'Step 3: Update list.html', 'description': 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already includes everything needed. No required changes.\n\nHere´s the relevant section of list.html:\n\n```\n<tr id="task-{{ task.id }}"\n                class="task-row {% if task.task_type == \'Subtask\' %}subtask-row{% elif task.task_type == \'User Story\' %}user-story-row{% elif task.task_type == \'Epic\' %}epic-row{% endif %}"\n                style="background-color: \n                {% if task.task_type == \'Subtask\' %}\n                    rgba(200, 230, 255, 0.5); /* Light blue for Subtask */\n                {% elif task.task_type == \'User Story\' %}\n                    rgba(255, 255, 200, 0.5); /* Light yellow for User Story */\n                {% elif task.task_type == \'Epic\' %}\n                    rgba(255, 200, 200, 0.5); /* Light red for Epic */\n                {% else %}\n                    rgba(240, 240, 240, 1); /* Default light gray */\n                {% endif %};"\n                data-task-id="{{ task.id }}"\n                data-parent-id="{{ task.parent_id or \'\' }}"\n                data-level="{{ depth }}">\n                <td><input type="checkbox" name="batch_update" value="{{ task.id }}"></td>\n                <td>\n                    {% if tasks|selectattr("parent_id", "equalto", task.id)|list %}\n                    <button class="btn btn-sm toggle-details" data-task-id="{{ task.id }}" aria-label="Toggle details for task {{ task.name }}">\n                        <i class="bi bi-chevron-right"></i>\n                    </button>\n                    {% endif %}\n                </td>\n                <td class="fw-medium fs-6 \n                {% if task.task_type == \'Epic\' %}\n                    epic-cell\n                {% elif task.task_type == \'User Story\' %}\n                    user-story-cell\n                {% elif task.task_type == \'Subtask\' %}\n                    subtask-cell\n                {% endif %}" \n                style="padding-left: {{ depth|default(0) * 20 }}px; position: relative;">\n                <span class="bi fs-6\n                {% if task.task_type == \'Epic\' %}\n                    bi-circle-fill\n                {% elif task.task_type == \'User Story\' %}\n                    bi-circle-half\n                {% elif task.task_type == \'Subtask\' %}\n                    bi-circle\n                {% endif %}">\n                </span>\n                {{ task.name }}\n                <small class="text-muted fw-light">\n                    (Parent-ID: {{ task.parent_id or \'None\' }})\n                </small>\n                <!-- Open Link -->\n                <a href="#" class="task-open-link" data-task-id="{{ task.id }}">\n                    <i class="bi bi-arrows-angle-expand" style="font-size: 0.8rem; color: white;"></i>\n                    Open\n                </a>\n            </td>\n                <td class="fw-light fs-6">\n                    <small class>\n                    LAC-{{ task.id }}\n                    </small>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light text-bg-secondary">\n                        {{ task.project if task.project else "Unknown Project" }}\n                    </span>\n                </td>\n                <td class="fs-6" data-contributor-column>{{ task.assigned_to if task.assigned_to else "Unassigned" }}</td>\n                <td class="fs-6">{{ task.story_points }}</td>\n                <td class="fs-6">\n                    <span class="badge rounded-pill fw-light text-bg-light">\n                        {{ task.task_type }}\n                    </span>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light {% if task.completed %}text-bg-success{% else %}text-bg-warning{% endif %}">\n                        {{ "Completed" if task.completed else "In Progress" }}\n                    </span>\n                </td>\n                <td>\n                    <!-- Delete Icon -->\n                    <button class="btn btn-dark btn-sm delete-task-btn" style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .2rem; --bs-btn-font-size: .75rem;" data-task-id="{{ task.id }}" aria-label="Deletes task {{ task.id }}">\n                        <i class="bi bi-trash"></i>\n                    </button>\n                </td>\n            </tr>\n            {% for child in tasks if child.parent_id == task.id %}\n                {{ render_task(child, tasks, depth + 1) }}\n            {% endfor %}\n            {% endmacro %}\n            \n            <!-- Render top-level tasks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:46:29.349784', 'updated_at': '2025-01-16T19:22:36.238473'}, {'id': 82, 'name': 'Implement Third-Party Authentication', 'description': 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitHub Login involves integrating OAuth 2.0, which both services support. The complexity depends on your app’s existing setup, frameworks, and experience with third-party authentication. Below is a breakdown:\n\nKey Steps for Implementing Google or GitHub Login\n\t1.\tSet Up OAuth Credentials:\n\t•\tRegister your application in the Google Cloud Console or GitHub Developer Settings.\n\t•\tObtain the client ID and client secret.\n\t2.\tInstall Required Libraries:\n\t•\tUse a library for OAuth (e.g., flask-oauthlib, python-social-auth, or authlib).\n\t•\tPopular frameworks like Flask and Django already have robust integrations for OAuth providers.\n\t3.\tBackend Configuration:\n\t•\tImplement an endpoint to handle the OAuth flow (/auth/login/google or /auth/login/github).\n\t•\tConfigure your app to send users to Google or GitHub’s authentication page.\n\t•\tHandle the OAuth callback to exchange the authorization code for an access token.\n\t•\tVerify the token and fetch user information (e.g., email, name).\n\t4.\tLink OAuth to User Registration:\n\t•\tOn successful login, create or retrieve a user in your database.\n\t•\tStore the user’s details like email, OAuth provider ID, and access token.\n\t5.\tFrontend Integration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T12:15:54.291625', 'updated_at': '2025-01-16T19:22:36.239866'}, {'id': 62, 'name': 'Add OAuth integration for Google Login', 'description': 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.241200'}, {'id': 64, 'name': 'Setup project credentials for Google API', 'description': 'Generate client ID and secret from Google API Console for your application.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.242497'}, {'id': 67, 'name': 'Test Google OAuth flow', 'description': 'Verify the OAuth flow using test accounts and check the token exchange.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.243780'}, {'id': 65, 'name': 'Implement backend endpoints for Google OAuth', 'description': 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.244932'}, {'id': 63, 'name': 'Add OAuth integration for GitHub Login', 'description': 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.246358'}, {'id': 68, 'name': 'Register application in GitHub Developer Console', 'description': 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.247746'}, {'id': 69, 'name': 'Handle callback from GitHub', 'description': 'Implement the callback endpoint to process the authorization code from GitHub.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.248912'}, {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}, {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}, {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-02-11T11:36:20.238219'}, {'id': 108, 'name': '1.1.2 Backend API for Registration', 'description': '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:33.067643'}, {'id': 112, 'name': '1.2.2 Frontend Login Page', 'description': 'Develop a frontend form for user login with email and password inputs.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.683644'}, {'id': 109, 'name': '1.1.3 Create Frontend Registration Page', 'description': 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.684988'}, {'id': 110, 'name': '1.1.4 Unit Tests for Registration', 'description': 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.686902'}, {'id': 101, 'name': '1.2 User Login', 'description': 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:25:53.687936'}, {'id': 111, 'name': '1.2.1 Backend API for Login', 'description': 'Create POST /api/login endpoint to handle user login.\njjsjj', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.689096'}, {'id': 113, 'name': '1.2.3 Session Management', 'description': 'Implement secure session handling using cookies or JWT.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:20.968680'}, {'id': 114, 'name': '1.2.4 Unit Tests for Login', 'description': 'Write tests for successful and failed login attempts.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:22:36.265866'}, {'id': 106, 'name': 'Password Reset', 'description': 'As a user, I want to reset my password securely using email.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.267247'}, {'id': 128, 'name': 'Frontend Password Reset Page', 'description': 'Develop a page for users to enter a new password using a valid token.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.269158'}, {'id': 129, 'name': 'Testing Password Reset', 'description': 'Write tests for email delivery, token validation, and password updates.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.270849'}, {'id': 102, 'name': 'Logout', 'description': 'As a user, I want to log out so that I can end my session securely.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.272605'}, {'id': 117, 'name': 'Tests for Logout', 'description': 'Verify session invalidation and redirection to the login page.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.274575'}, {'id': 116, 'name': 'Frontend Logout Button', 'description': 'Add a logout button to the UI and handle session clearing.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-02-09T12:31:17.939784'}, {'id': 115, 'name': 'Backend API for Logout', 'description': 'Create POST /api/logout endpoint to invalidate user sessions.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.277547'}, {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}, {'id': 45, 'name': 'Display Default Value in Dropdown', 'description': 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.280493'}, {'id': 50, 'name': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'In Progress', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:22.274304'}, {'id': 51, 'name': 'Set Default Value', 'description': 'Set the default value in the dropdown based on the retrieved data.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 45, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 1, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.283309'}, {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882'}, {'id': 54, 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 46, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:29.251047'}, {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:26:23.067490'}, {'id': 56, 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:16.233517'}, {'id': 55, 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:08.099271'}, {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:59.651639'}, {'id': 57, 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:51.310240'}, {'id': 58, 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:43.569501'}, {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:36.133259'}, {'id': 59, 'name': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:15.491910'}, {'id': 60, 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 49, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:28.367797'}, {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-11T08:25:07.992524'}, {'id': 52, 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 41, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:01.469601'}, {'id': 53, 'name': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:24:54.245010'}, {'id': 42, 'name': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:47.274896'}, {'id': 43, 'name': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:33.908549'}, {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-02-11T08:24:26.494016'}, {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-02-11T08:24:21.069473'}, {'id': 90, 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:13.204884'}, {'id': 88, 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:05.873554'}, {'id': 89, 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:23:58.436495'}, {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-02-11T08:23:51.269557'}, {'id': 93, 'name': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:42.771565'}, {'id': 91, 'name': 'Update database schema for task ownership', 'description': 'Add a column or relationship to assign a single owner per task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:33.670381'}, {'id': 92, 'name': 'Develop backend API for assigning task owner', 'description': 'Create endpoints to assign or update the owner of a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T09:19:44.027744'}, {'id': 87, 'name': 'Create and customize contributor roles', 'description': 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:43.600461', 'updated_at': '2025-02-11T08:23:23.402442'}, {'id': 96, 'name': 'Allow admin users to create and customize contributor roles via frontend', 'description': 'Provide UI functionality for admins to manage contributor roles dynamically.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:23:13.139282'}, {'id': 94, 'name': 'Add database support for contributor roles', 'description': 'Introduce a roles table and link contributors to specific roles for tasks.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:56.181530'}, {'id': 95, 'name': 'Develop backend API for managing contributor roles', 'description': 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:02.276492'}, {'id': 127, 'name': 'Backend API for Password Reset', 'description': 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-02-10T23:59:50.734037'}, {'id': 126, 'name': 'Email Configuration for Password Reset', 'description': 'Configure email service to send password reset links.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.334340'}, {'id': 104, 'name': 'Middleware for Role Enforcement', 'description': 'As a system, I want to enforce role-based access to specific routes.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:23:40.346816'}, {'id': 122, 'name': 'Testing Role Enforcement', 'description': 'Write tests to ensure proper access control based on roles.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.185693'}, {'id': 121, 'name': 'Develop Role Enforcement Middleware', 'description': 'Implement middleware to check user roles for access control.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.187439'}, {'id': 105, 'name': 'Profile Management', 'description': 'As a user, I want to update my profile (username, email, password).', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.339830'}, {'id': 123, 'name': 'Backend API for Profile Management', 'description': 'Create PATCH /api/profile endpoint to update user details.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.678781'}, {'id': 125, 'name': 'Testing Profile Updates', 'description': 'Write tests for profile update functionality.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.680382'}]
2025-02-11 16:38:40,565 DEBUG: Task types: ['all', 'Epic', 'Subtask', 'User Story']
2025-02-11 16:38:40,566 DEBUG: Projects: [<Project Project Alpha (ID: 1)>, <Project Project Beta (ID: 2)>, <Project Project Gamma (ID: 3)>, <Project Project Theta (ID: 4)>, <Project Project Delta (ID: 5)>, <Project PMS - Feature Requests (ID: 7)>, <Project PMS - Backlog (ID: 6)>]
2025-02-11 16:38:40,566 DEBUG: Tasks response: [{'id': 290, 'name': 'issue: error when changing task type and', 'description': 'issue: error when changing task type and parent task before saving', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:00:03.417734', 'updated_at': '2025-02-10T09:15:09.284969'}, {'id': 298, 'name': 'example user story with parent epic 297', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 297, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:41:01.907455', 'updated_at': '2025-02-10T14:59:04.142570'}, {'id': 275, 'name': 'add sprints, cycles', 'description': 'Make naming customizable', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:48:52.680022', 'updated_at': '2025-02-10T08:38:37.622196'}, {'id': 276, 'name': 'add support for priority', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:49:26.189497', 'updated_at': '2025-02-10T08:28:47.447612'}, {'id': 264, 'name': 'close all / open all childtasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:25:20.101418', 'updated_at': '2025-02-10T08:47:14.915970'}, {'id': 285, 'name': 'add text truncation to project names in task list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:45:47.027805', 'updated_at': '2025-02-10T09:45:47.029729'}, {'id': 257, 'name': 'Update Task API Integration', 'description': "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 240, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-02-05T22:55:49.566819', 'updated_at': '2025-02-05T22:18:17.807154'}, {'id': 294, 'name': 'issue: task table filters not working', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:19:21.022598', 'updated_at': '2025-02-10T10:19:21.024676'}, {'id': 267, 'name': 'improvements to toggles and nested tasks', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:29:12.464594', 'updated_at': '2025-02-10T08:47:24.581680'}, {'id': 283, 'name': 'fix update title', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:58.769700', 'updated_at': '2025-02-10T08:46:47.282087'}, {'id': 271, 'name': 'make sure dynamically added rows has the exact same styling and includes every element', 'description': 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:21:07.108431', 'updated_at': '2025-02-10T08:38:47.340105'}, {'id': 273, 'name': 'disable parent task selector in epics', 'description': 'and add text, Epic can´t have parent tasks', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:45:20.740910', 'updated_at': '2025-02-10T08:39:17.639890'}, {'id': 269, 'name': 'fix styling for sweetalert', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'In Progress', 'created_at': '2025-02-08T15:54:56.717846', 'updated_at': '2025-02-10T08:39:32.172437'}, {'id': 286, 'name': 'add support for labels/tags', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:46:23.985620', 'updated_at': '2025-02-10T09:46:23.987564'}, {'id': 299, 'name': 'example sub task with parent user story 298', 'description': 'Test update 1\nTest update 2\nTest update 3', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 298, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:42:38.905700', 'updated_at': '2025-02-10T23:23:08.671464'}, {'id': 266, 'name': 'highlight the nested tasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:28:30.382949', 'updated_at': '2025-02-10T08:47:04.382929'}, {'id': 279, 'name': 'github integration', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:38.238202', 'updated_at': '2025-02-10T08:39:24.168451'}, {'id': 289, 'name': 'issue: parent task is lost when updating task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T08:56:25.273984', 'updated_at': '2025-02-11T15:36:26.718508'}, {'id': 278, 'name': 'search feature for tasks list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:03.369833', 'updated_at': '2025-02-10T08:39:04.005957'}, {'id': 281, 'name': 'add high level plan', 'description': 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:27:01.218606', 'updated_at': '2025-02-10T08:38:54.754760'}, {'id': 287, 'name': 'when moving a parent item to another project make sure the subtasks are moved as well', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:48:31.986870', 'updated_at': '2025-02-10T09:48:31.988859'}, {'id': 272, 'name': 'implement a markdown text editor like notion', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:28:18.300231', 'updated_at': '2025-02-10T08:28:39.669255'}, {'id': 293, 'name': 'click on title should copy the task title and id to clipboard', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:16:33.508209', 'updated_at': '2025-02-10T10:16:33.510414'}, {'id': 277, 'name': 'custom task workflow statuses', 'description': 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- Custom status\n-- Custom status\n- In Progress\n-- Custom status\n-- Custom status\n-- Custom status\n- Completed\n-- Custom status\n-- Custom status\n\n2. How can we track a task through different stages and save the sequence of events or stages the task has gone through?\nI´m thinking it could be good for mapping out processes, identifying bottlenecks and provide valuable insights while improving and streamlining workflows.\n- Stages\n- Contacts taken\n- Respons time \n- Time to action after responses\n- Dependencies\n\nNeed to be able to record every action related to this action.\nCommunication integrations\n- Slack\n- Email\n- Text messages\n- Phonecalls\n- Calendar events, meetings\n- Zoom, Google meet, Teams etc..\n\n\n2. Set custom statuses per project (can use tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:16:03.352588', 'updated_at': '2025-02-10T08:38:28.123328'}, {'id': 274, 'name': 'add support for goals, initiatives, okr´s', 'description': 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:46:27.204912', 'updated_at': '2025-02-10T08:28:17.663922'}, {'id': 280, 'name': 'logging (task and project history)', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:37:44.435112', 'updated_at': '2025-02-10T08:28:28.947805'}, {'id': 282, 'name': 'implement same task list in projects but filtered on project', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:17.786154', 'updated_at': '2025-02-10T09:41:17.787861'}, {'id': 296, 'name': 'issue: contributor is lost after updating task', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T09:26:43.881947', 'updated_at': '2025-02-11T15:37:31.011120'}, {'id': 288, 'name': 'when trying to move subtask to another project, make sure a warning is displayed', 'description': 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be lost"\nOR\n\nIs it possible, and is it desireable to keep parent child relationships across projects?\nSo that a parent can be in one project but the child tasks can be in different projects?\n\nLets say \nParent epic is \n"Internationalisation"\nChild user stories are\n- Timezones\n- Language\n- Currency\n- Day, Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:54:36.297869', 'updated_at': '2025-02-10T08:54:51.840686'}, {'id': 284, 'name': 'add type "issue/bug"', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:42:27.719439', 'updated_at': '2025-02-10T09:42:27.720908'}, {'id': 295, 'name': 'issue: drag and drop errors', 'description': '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:22:54.461413', 'updated_at': '2025-02-10T10:22:54.462542'}, {'id': 297, 'name': 'example parent epic', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:39:51.620509', 'updated_at': '2025-02-10T10:39:51.622712'}, {'id': 292, 'name': 'issue: assigning contributor does not work', 'description': '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API endpoint resulted in a **400 Bad Request** error. Upon investigation, the following problems were identified:\n    \n    1. **Missing CSRF Token:**\n    - The request failed due to a missing CSRF token, as shown in the error message: *“Bad Request: The CSRF token is missing.”*\n    - The frontend was not correctly including the CSRF token in the request headers.\n    1. **JavaScript Error (Undefined CSRF Token Variable):**\n    - The error *“ReferenceError: csrfToken is not defined”* indicated that the CSRF token was not being retrieved properly in the JavaScript code.\n    1. **Incorrect Fetch Request Headers:**\n    - The fetch request did not include the CSRF token under the correct key (X-CSRFToken).\n    - The script attempted to send the request without properly extracting the CSRF token from the meta tag.\n    \n    **Solution**\n    \n    1. **Include the CSRF Token in the JavaScript Code**\n    \n    The CSRF token was retrieved from the meta tag and used in the request headers:\n    \n    ```jsx\n    // Retrieve CSRF token from meta tag\n    const csrfToken = document.querySelector(\'meta[name="csrf-token"]\').getAttribute(\'content\');\n    ```\n    \n    This ensures that the CSRF token is correctly fetched and available in the JavaScript scope.\n    \n    1. **Modify the Fetch Request to Include CSRF Token**\n    \n    The request to assign a contributor was updated to include the token:\n    \n    ```jsx\n    const response = await fetch(`/tasks/${taskId}/assign_contributor`, {\n        method: "POST",\n        headers: { \n            "Content-Type": "application/json",\n            "X-CSRFToken": csrfToken  // Include CSRF token\n        },\n        body: JSON.stringify({ contributor_id: parseInt(contributorId, 10) }),\n    });\n    ```\n    \n    - **Ensures the CSRF token is sent in the request headers** so that Flask-WTF does not reject the request.\n    1. **Verify and Debug Network Requests**\n    - The updated request headers were verified using **Chrome DevTools > Network tab** to ensure the X-CSRFToken was included.\n    - The error messages disappeared, and the contributor assignment request **succeeded with a 200 OK response**.\n    \n    ---\n    \n    **Final Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T09:11:12.273779', 'updated_at': '2025-02-11T15:38:31.373963'}, {'id': 265, 'name': 'smooth transition for toggles', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:27:23.422612', 'updated_at': '2025-02-10T08:46:55.831743'}, {'id': 270, 'name': 'the newest task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:07:34.368035', 'updated_at': '2025-02-10T01:07:34.372478'}, {'id': 291, 'name': 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:09:52.988609', 'updated_at': '2025-02-10T10:09:52.997455'}, {'id': 136, 'name': 'Page scroll should stay in position when reloading', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-16T18:21:50.187247', 'updated_at': '2025-01-16T19:22:36.214901'}, {'id': 130, 'name': 'Implement the Map of Task Relationships solution for drag-and-drop', 'description': 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.093022', 'updated_at': '2025-01-16T19:22:36.216705'}, {'id': 133, 'name': 'Step 4: Enhance Logging in models.py', 'description': 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nupdating the Task model in the following ways:\n\n1.\tLog Changes to parent_id:\n\t•\tLog changes to parent_id during updates, including old and new values.\n\t2.\tValidate Hierarchy with Logging:\n\t•\tLog detailed messages when validating hierarchy changes, especially for circular dependency checks.\n\nHere’s how the models.py can be updated:\n```\nfrom datetime import datetime, timezone\nfrom sqlalchemy import func, cast, CheckConstraint\nfrom sqlalchemy.orm import validates\nfrom app.extensions.db import db\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\nclass Task(db.Model):\n    __tablename__ = "task"\n    \n    # Other columns...\n\n    parent_id = db.Column(\n        db.Integer, db.ForeignKey("task.id"), index=True, nullable=True\n    )\n\n    # Relationships\n    parent = db.relationship(\n        "Task", remote_side=[id], back_populates="children", lazy="select"\n    )\n    children = db.relationship(\n        "Task", back_populates="parent", lazy="select"\n    )\n\n    \n\n\n    @staticmethod\n    def _validate_no_circular_references(new_parent_id):\n        """\n        Validates that there are no circular references in the task hierarchy.\n\n        Args:\n            new_parent_id (int): The new parent ID to validate.\n\n        Raises:\n            ValueError: If a circular reference is detected.\n        """\n        visited = set()\n        current_parent_id = new_parent_id\n\n        logger.info(f"Validating circular references for parent ID: {new_parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error(\n                    f"Circular reference detected: Parent ID {current_parent_id} already visited."\n                )\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            # Fetch the next parent_id in the hierarchy\n            parent = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not parent:\n                break  # Exit if no parent is found\n            current_parent_id = parent.parent_id\n\n        logger.info("No circular reference detected.")\n\n    @validates(\'parent_id\', \'task_type\')\n    def validate_task_changes(self, key, value):\n        """\n        Validates changes to \'parent_id\' and \'task_type\'.\n        Ensures hierarchy validity and checks for circular references.\n        """\n        logger.debug(f"Validating {key} change for Task {self.id}: {value}")\n\n        if key == \'parent_id\':\n            # Log changes to parent_id\n            if self.id and value != self.parent_id:\n                logger.info(f"Task {self.id}: Updating \'parent_id\' from {self.parent_id} to {value}")\n\n            # Prevent a task from being its own parent\n            if value and value == self.id:\n                logger.error("A task cannot be its own parent.")\n                raise ValueError("A task cannot be its own parent.")\n\n            # Check for circular references\n            if value:\n                Task.check_circular_reference(self.id, value)\n\n        elif key == \'task_type\':\n            # Log changes to task_type\n            if self.id and value != self.task_type:\n                logger.info(f"Task {self.id}: Updating \'task_type\' from {self.task_type} to {value}")\n\n        # Check hierarchy rules without triggering further validation\n        if key in [\'parent_id\', \'task_type\']:\n            self._validate_hierarchy_change(key, value)\n\n        logger.info(f"Validation passed for {key}: {value}")\n        return value\n\n    def _validate_hierarchy_change(self, key, value):\n        """\n        Validates hierarchy rules for the task based on `task_type` and `parent_id`.\n        """\n        if key == \'parent_id\' and value:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=value).first()\n            if not parent_task:\n                raise ValueError("Parent task does not exist.")\n\n            logger.debug(f"Validating hierarchy: Task {self.id}, Parent Type: {parent_task.task_type}")\n            if self.task_type == "User Story" and parent_task.task_type != "Epic":\n                raise ValueError("User Stories must have an Epic as a parent.")\n            if self.task_type == "Subtask" and parent_task.task_type != "User Story":\n                raise ValueError("Subtasks must have a User Story as a parent.")\n\n        elif key == \'task_type\' and self.parent_id:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=self.parent_id).first()\n            if parent_task:\n                logger.debug(f"Validating hierarchy: Task Type: {value}, Parent Type: {parent_task.task_type}")\n                if value == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError("User Stories must have an Epic as a parent.")\n                if value == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError("Subtasks must have a User Story as a parent.")\n\n        logger.info(f"Hierarchy validation passed for Task {self.id if self.id else \'New Task\'}.")\n\n    @staticmethod\n    def check_circular_reference(task_id, parent_id):\n        """\n        Iteratively checks for circular references in the task hierarchy.\n        Prevents stack overflow on deep hierarchies.\n        """\n        visited = set()\n        current_parent_id = parent_id\n\n        logger.info(f"Checking circular reference for Task {task_id} with Parent ID: {parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error("Circular reference detected!")\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            if current_parent_id == task_id:\n                logger.error("A task cannot be its own ancestor.")\n                raise ValueError("A task cannot be its own ancestor.")\n\n            # Fetch the next parent_id in the hierarchy\n            task = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not task:\n                break\n            current_parent_id = task.parent_id\n\n        logger.info("Circular reference check passed.")\n```\nKey Enhancements:\n\t1.\tlog_and_validate_parent_id_change:\n\t•\tLogs the old and new parent_id whenever it changes.\n\t•\tEnsures no circular references are introduced.\n\t2.\t_validate_no_circular_references:\n\t•\tValidates the parent_id field to prevent circular dependencies.\n\t•\tLogs progress and raises detailed errors if violations occur.\n\t3.\tlog_and_validate_task_type_change:\n\t•\tLogs changes to task_type with the old and new values.\n\t•\tRevalidates hierarchy rules when task_type changes.\n\t4.\tDetailed Logging for Circular Reference Validation:\n\t•\t_validate_no_circular_references and check_circular_reference methods log every step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:44:08.340041', 'updated_at': '2025-01-16T19:22:36.219710'}, {'id': 132, 'name': 'Step 1: Update tasks_table_interactions.js', 'description': '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the map for efficient parent-child relationship lookups instead of DOM traversal.\n\n```\nexport const TaskManager = {\n    init: function (csrfToken) {\n        this.csrfToken = csrfToken;\n        this.initTaskParentMap(); // Initialize the map\n        this.initDragAndDrop(); // Initialize drag-and-drop functionality\n    },\n\n    // Initialize a global map for task relationships\n    taskParentMap: new Map(),\n\n    // Build the taskParentMap from the DOM\n    initTaskParentMap: function () {\n        console.log("Initializing Task Parent Map...");\n        const rows = document.querySelectorAll("tr[data-task-id]");\n\n        rows.forEach((row) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = parseInt(row.dataset.parentId, 10) || null;\n            this.taskParentMap.set(taskId, parentId);\n        });\n\n        console.log("Task Parent Map initialized:", Array.from(this.taskParentMap.entries()));\n    },\n\n    // Update the map dynamically after drag-and-drop\n    updateTaskParentMap: function (taskId, parentId) {\n        console.log(`Updating Task Parent Map: Task ${taskId} -> Parent ${parentId}`);\n        this.taskParentMap.set(taskId, parentId);\n    },\n\n    initDragAndDrop: function () {\n        if (window.isDragAndDropInitialized) {\n            console.log("Drag-and-drop is already initialized.");\n            return;\n        }\n\n        console.log("Initializing drag-and-drop within TaskManager...");\n\n        const tableBody = document.querySelector("tbody");\n        if (!tableBody) {\n            console.warn("Task table body not found for drag-and-drop initialization");\n            return;\n        }\n\n        // Initialize Sortable.js for drag-and-drop functionality\n        Sortable.create(tableBody, {\n            handle: ".task-row", // Only draggable via `.task-row` elements\n            animation: 150, // Smooth animation\n            filter: ".task-open-link", // Prevent dragging on task links\n            preventOnFilter: true, // Prevent drag if filtered element is clicked\n            onEnd: async (event) => {\n                try {\n                    console.log("Drag-and-drop operation started...");\n                    const rows = Array.from(event.from.querySelectorAll(".task-row"));\n                    const reorderedTasks = [];\n\n                    rows.forEach((row, index) => {\n                        const taskId = parseInt(row.dataset.taskId, 10);\n                        let parentId = null;\n\n                        // Get the parent ID from the map or fallback to the dataset\n                        if (row.classList.contains("subtask-row")) {\n                            const parentRow = row.previousElementSibling;\n                            parentId = parentRow\n                                ? parseInt(parentRow.dataset.taskId, 10)\n                                : this.taskParentMap.get(taskId) || null;\n                        }\n\n                        // Update the taskParentMap dynamically\n                        this.updateTaskParentMap(taskId, parentId);\n\n                        reorderedTasks.push({\n                            id: taskId,\n                            sort_order: index + 1,\n                            parent_id: parentId,\n                        });\n                    });\n\n                    console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n                    console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n                    // Send the payload to the backend\n                    const response = await fetch("/tasks/reorder_subtasks", {\n                        method: "POST",\n                        headers: {\n                            "Content-Type": "application/json",\n                            "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n                        },\n                        body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n                    });\n\n                    if (!response.ok) {\n                        const errorData = await response.json();\n                        console.error("Error reordering tasks:", errorData);\n                        alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n                        return;\n                    }\n\n                    const data = await response.json();\n                    console.log("Task reordering successful:", data);\n\n                } catch (error) {\n                    console.error("Error during drag-and-drop operation:", error);\n                    alert("An unexpected error occurred while reordering tasks.");\n                }\n            },\n        });\n\n        window.isDragAndDropInitialized = true;\n        console.log("Drag-and-drop initialized successfully.");\n    },\n};\n```\n\nKey Updates:\n\t1.\tPrecomputed Map (taskParentMap):\n\t•\tThe initTaskParentMap function initializes the map by iterating over DOM elements and mapping each task’s ID to its parent ID.\n\t•\tThe updateTaskParentMap dynamically updates the map when tasks are reordered.\n\t2.\tEfficient Parent Lookup:\n\t•\tThe parentId is derived from the precomputed map rather than DOM traversal.\n\t3.\tBackend Payload:\n\t•\tA structured payload (reorderedTasks) is sent to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:44:08.338301', 'updated_at': '2025-02-06T21:59:17.417466'}, {'id': 134, 'name': 'Step 2: Update the Backend in routes.py', 'description': 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\nPlan for step 2:\n\t1.\tVerify the payload structure:\n\t•\tEnsure that the payload includes all necessary fields (id, sort_order, parent_id) for each task.\n\t•\tValidate that the parent-child relationships in the precomputed map (taskParentMap) are reflected correctly in the payload.\n\t2.\tSubmit the payload to the backend:\n\t•\tEnhance the fetch request in the onEnd function of initDragAndDrop to log detailed submission data.\n\t•\tConfirm the payload integrity in the browser console before submission.\n\t3.\tUpdate backend logging:\n\t•\tAdd logging to /reorder_subtasks in routes.py to confirm receipt of the correct payload and process parent-child updates.\n\t•\tLog before and after database updates for better debugging.\n\n-----\nUpdated tasks_table_interactions.js\n\nReplace this section:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    let parentId = null;\n```\nWith:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    const parentId = this.taskParentMap.get(taskId) || null;\n```\nThe this.taskParentMap provides a precomputed and dynamic mapping of taskId to parentId. By using this map, we avoid relying on DOM traversal logic (row.closest or row.previousElementSibling) during drag-and-drop operations, which can sometimes be unreliable or cumbersome.\n\nFull Revised onEnd section:\n```\nonEnd: async (event) => {\n    try {\n        console.log("Drag-and-drop operation started...");\n        const rows = Array.from(event.from.querySelectorAll(".task-row"));\n        const reorderedTasks = [];\n\n        rows.forEach((row, index) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = this.taskParentMap.get(taskId) || null;\n\n            // Update the taskParentMap dynamically\n            this.updateTaskParentMap(taskId, parentId);\n\n            reorderedTasks.push({\n                id: taskId,\n                sort_order: index + 1,\n                parent_id: parentId,\n            });\n        });\n\n        console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n        console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n        // Send the payload to the backend\n        const response = await fetch("/tasks/reorder_subtasks", {\n            method: "POST",\n            headers: {\n                "Content-Type": "application/json",\n                "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n            },\n            body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            console.error("Error reordering tasks:", errorData);\n            alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n            return;\n        }\n\n        const data = await response.json();\n        console.log("Task reordering successful:", data);\n\n    } catch (error) {\n        console.error("Error during drag-and-drop operation:", error);\n        alert("An unexpected error occurred while reordering tasks.");\n    }\n}\n```\n---------------------------------\nEnsure updates include:\n\t•\tBetter Logging: Adding logs for key events such as database changes and validation results.\n\t•\tInput Validation: Ensure all required fields (id, sort_order, parent_id) exist in the payload.\n\t•\tPost-Commit Validation: Confirm database updates after the commit.\n\t•\tImproved Error Handling: Include specific error messages and consistent rollback mechanisms.\n\nBelow is the revised reorder_subtasks route with descriptive comments for each section:\n```\n@bp.route("/reorder_subtasks", methods=["POST"])\ndef reorder_subtasks():\n    """\n    Reorder subtasks globally or reassign them to a different parent.\n\n    Steps:\n    - Parse and validate input from the frontend.\n    - Update parent-child relationships and sort order in the database.\n    - Commit changes and return a success response.\n    - Handle errors gracefully and provide detailed logs for debugging.\n    """\n    logger.info("Entering reorder_subtasks route...")\n    logger.info(f"Received payload for reordering tasks: {request.json}")\n\n    try:\n        # Step 1: Parse input\n        parent_id = request.json.get("parent_id", None)  # Optional parent ID for the tasks being reordered\n        ordered_tasks = request.json.get("ordered_tasks", [])\n\n        logger.debug(f"Parsed parent_id: {parent_id}")\n        logger.debug(f"Parsed ordered_tasks: {ordered_tasks}")\n\n        # Step 2: Validate input\n        if not isinstance(ordered_tasks, list) or not all(\n            isinstance(task, dict) and "id" in task and "sort_order" in task and "parent_id" in task\n            for task in ordered_tasks\n        ):\n            logger.error(f"Invalid input received for ordered_tasks: {ordered_tasks}")\n            return jsonify({\n                "error": "Invalid input format for \'ordered_tasks\'. Each task must include \'id\', \'sort_order\', and \'parent_id\'."\n            }), 400\n\n        # Step 3: Validate parent task (if applicable)\n        if parent_id is not None:\n            parent_task = Task.query.get(parent_id)\n            if not parent_task:\n                logger.error(f"Parent task with ID {parent_id} not found.")\n                return jsonify({"error": f"Parent ID {parent_id} is invalid or does not exist."}), 400\n\n        logger.info("Input validation passed. Proceeding with task updates...")\n\n        # Step 4: Process updates for each subtask\n        updated_subtasks = []  # Keep track of updated subtasks for post-commit validation\n\n        for task_data in ordered_tasks:\n            subtask_id = task_data["id"]\n            sort_order = task_data["sort_order"]\n            new_parent_id = task_data["parent_id"]\n\n            # Fetch the subtask from the database\n            subtask = Task.query.get(subtask_id)\n            if not subtask:\n                logger.warning(f"Subtask ID {subtask_id} not found. Skipping...")\n                continue\n\n            # Log and update parent_id if it changes\n            if new_parent_id is not None and new_parent_id != subtask.parent_id:\n                logger.info(f"Reassigning subtask {subtask.id} to new parent {new_parent_id}")\n                subtask.parent_id = new_parent_id\n\n            # Update sort order\n            subtask.sort_order = sort_order\n            logger.debug(f"Updated subtask {subtask.id}: parent_id={subtask.parent_id}, sort_order={subtask.sort_order}")\n\n            # Add to the list of updated subtasks for validation\n            updated_subtasks.append(subtask)\n\n        # Step 5: Commit changes to the database\n        try:\n            db.session.commit()\n            logger.info(f"Subtasks reordered successfully: {[task[\'id\'] for task in ordered_tasks]}")\n        except Exception as e:\n            logger.error(f"Error committing changes to the database: {str(e)}")\n            db.session.rollback()\n            return jsonify({"error": "Failed to save changes to the database. Please try again."}), 500\n\n        # Step 6: Post-commit validation\n        for subtask in updated_subtasks:\n            logger.debug(f"Post-commit parent_id for task {subtask.id}: {subtask.parent_id}")\n            logger.debug(f"Post-commit sort_order for task {subtask.id}: {subtask.sort_order}")\n\n        # Step 7: Return success response\n        return jsonify({\n            "success": True,\n            "message": "Subtasks reordered successfully.",\n            "updated_subtasks": [subtask.id for subtask in updated_subtasks]\n        }), 200\n\n    except Exception as e:\n        # Step 8: Handle unexpected errors\n        logger.error(f"Error while reordering subtasks: {str(e)}", exc_info=True)\n        db.session.rollback()\n        return jsonify({"error": "An unexpected error occurred while reordering subtasks."}), 500\n```\nKey Changes and Descriptive Comments\n\t1.\tInput Parsing:\n\t•\tExtracts parent_id and ordered_tasks from the request payload.\n\t•\tLogs the parsed values for debugging.\n\t2.\tInput Validation:\n\t•\tEnsures ordered_tasks is a list of dictionaries with the required keys.\n\t•\tValidates parent_id if provided, ensuring the parent task exists in the database.\n\t3.\tUpdate Processing:\n\t•\tIterates through ordered_tasks, updating each task’s parent_id and sort_order.\n\t•\tLogs changes for each task.\n\t4.\tDatabase Commit:\n\t•\tCommits all updates in a single transaction.\n\t•\tLogs success or rolls back changes in case of an error.\n\t5.\tPost-Commit Validation:\n\t•\tVerifies that the parent_id and sort_order changes were successfully saved to the database.\n\t6.\tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:46:29.348853', 'updated_at': '2025-02-06T21:59:21.617065'}, {'id': 131, 'name': 'Step 5: Update utils.py', 'description': 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nChanges to Make:\n\t1.\tEnhance Task Filtering:\n\t•\tEnsure the filters handle parent-child relationships explicitly.\n\t•\tAdd options to include or exclude subtasks in queries.\n\t2.\tUtility Function for Debugging Parent-Child Relationships:\n\t•\tProvide a function to generate a map or list of parent-child relationships for debugging purposes.\n\t3.\tValidation Functions:\n\t•\tAdd a utility function to validate parent-child relationships and ensure no circular dependencies.\n\nUpdated utils.py Code:\n```\nimport logging\nfrom sqlalchemy import func\nfrom sqlalchemy.orm import joinedload\nfrom app.extensions.db import db\nfrom app.tasks.models import Task\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\n\nclass TaskService:\n    @staticmethod\n    def filter_tasks(filters=None, include_subtasks=True, page=None, per_page=None):\n        """\n        Dynamically filters tasks with an option to include or exclude subtasks.\n\n        Args:\n            filters (dict): Filtering criteria.\n            include_subtasks (bool): Whether to include subtasks in the query.\n            page (int, optional): Page number for pagination.\n            per_page (int, optional): Items per page for pagination.\n\n        Returns:\n            Query or Pagination: A SQLAlchemy query object or paginated results.\n        """\n        query = Task.query.options(\n            db.joinedload(Task.project).joinedload(Project.contributors),\n            db.joinedload(Task.contributor),\n            db.joinedload(Task.children),\n        ).order_by(Task.sort_order)\n\n        if filters:\n            logger.debug(f"Applying filters: {filters}")\n\n            # Apply standard filters\n            if "is_archived" in filters:\n                query = query.filter(Task.is_archived == filters["is_archived"])\n            if "project_id" in filters:\n                query = query.filter(Task.project_id == filters["project_id"])\n            if "task_type" in filters:\n                if isinstance(filters["task_type"], list):\n                    query = query.filter(Task.task_type.in_(filters["task_type"]))\n                else:\n                    query = query.filter(Task.task_type == filters["task_type"])\n            if "completion_status" in filters:\n                completion_map = {"completed": True, "in_progress": False}\n                if filters["completion_status"] in completion_map:\n                    query = query.filter(Task.completed == completion_map[filters["completion_status"]])\n\n            # Optionally exclude subtasks\n            if not include_subtasks:\n                query = query.filter(Task.task_type != "Subtask")\n\n        logger.debug(f"Generated query: {query}")\n\n        # Pagination\n        if page and per_page:\n            return query.paginate(page=page, per_page=per_page, error_out=False)\n        return query\n\n    @staticmethod\n    def debug_parent_child_relationships(project_id=None):\n        """\n        Generates a debug map of parent-child relationships for all tasks.\n\n        Args:\n            project_id (int, optional): Restrict to tasks from a specific project.\n\n        Returns:\n            dict: A dictionary mapping parent IDs to their child task IDs.\n        """\n        query = Task.query\n        if project_id:\n            query = query.filter(Task.project_id == project_id)\n\n        tasks = query.options(\n            db.load_only(Task.id, Task.parent_id)\n        ).all()\n\n        relationship_map = {}\n        for task in tasks:\n            if task.parent_id not in relationship_map:\n                relationship_map[task.parent_id] = []\n            relationship_map[task.parent_id].append(task.id)\n\n        logger.debug(f"Parent-Child Relationship Map: {relationship_map}")\n        return relationship_map\n\n    @staticmethod\n    def validate_parent_child_relationships():\n        """\n        Validates all parent-child relationships in the database to ensure they conform to hierarchy rules.\n\n        Raises:\n            ValueError: If invalid relationships are detected.\n        """\n        tasks = Task.query.options(db.joinedload(Task.parent)).all()\n\n        for task in tasks:\n            if task.parent_id:\n                parent_task = task.parent\n                if not parent_task:\n                    raise ValueError(f"Task {task.id} has an invalid parent ID {task.parent_id}.")\n\n                # Validate hierarchy rules\n                if task.task_type == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError(f"User Story {task.id} must have an Epic as its parent.")\n                if task.task_type == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError(f"Subtask {task.id} must have a User Story as its parent.")\n\n        logger.info("All parent-child relationships are valid.")\n\n    @staticmethod\n    def get_all_task_ids_with_parents():\n        """\n        Returns a flat list of tasks with their parent IDs for debugging.\n\n        Returns:\n            list: A list of tuples (task_id, parent_id).\n        """\n        tasks = Task.query.with_entities(Task.id, Task.parent_id).all()\n        logger.debug(f"Task IDs with Parent IDs: {tasks}")\n        return tasks\n```\n\n\nExplanation of Changes:\n\t1.\tfilter_tasks Enhancements:\n\t•\tAdded include_subtasks parameter to optionally exclude subtasks from the query.\n\t2.\tdebug_parent_child_relationships:\n\t•\tCreates a parent-child relationship map for debugging purposes.\n\t3.\tvalidate_parent_child_relationships:\n\t•\tIterates through all tasks to validate parent-child hierarchy and ensures no invalid relationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.091824', 'updated_at': '2025-01-16T19:22:36.236691'}, {'id': 135, 'name': 'Step 3: Update list.html', 'description': 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already includes everything needed. No required changes.\n\nHere´s the relevant section of list.html:\n\n```\n<tr id="task-{{ task.id }}"\n                class="task-row {% if task.task_type == \'Subtask\' %}subtask-row{% elif task.task_type == \'User Story\' %}user-story-row{% elif task.task_type == \'Epic\' %}epic-row{% endif %}"\n                style="background-color: \n                {% if task.task_type == \'Subtask\' %}\n                    rgba(200, 230, 255, 0.5); /* Light blue for Subtask */\n                {% elif task.task_type == \'User Story\' %}\n                    rgba(255, 255, 200, 0.5); /* Light yellow for User Story */\n                {% elif task.task_type == \'Epic\' %}\n                    rgba(255, 200, 200, 0.5); /* Light red for Epic */\n                {% else %}\n                    rgba(240, 240, 240, 1); /* Default light gray */\n                {% endif %};"\n                data-task-id="{{ task.id }}"\n                data-parent-id="{{ task.parent_id or \'\' }}"\n                data-level="{{ depth }}">\n                <td><input type="checkbox" name="batch_update" value="{{ task.id }}"></td>\n                <td>\n                    {% if tasks|selectattr("parent_id", "equalto", task.id)|list %}\n                    <button class="btn btn-sm toggle-details" data-task-id="{{ task.id }}" aria-label="Toggle details for task {{ task.name }}">\n                        <i class="bi bi-chevron-right"></i>\n                    </button>\n                    {% endif %}\n                </td>\n                <td class="fw-medium fs-6 \n                {% if task.task_type == \'Epic\' %}\n                    epic-cell\n                {% elif task.task_type == \'User Story\' %}\n                    user-story-cell\n                {% elif task.task_type == \'Subtask\' %}\n                    subtask-cell\n                {% endif %}" \n                style="padding-left: {{ depth|default(0) * 20 }}px; position: relative;">\n                <span class="bi fs-6\n                {% if task.task_type == \'Epic\' %}\n                    bi-circle-fill\n                {% elif task.task_type == \'User Story\' %}\n                    bi-circle-half\n                {% elif task.task_type == \'Subtask\' %}\n                    bi-circle\n                {% endif %}">\n                </span>\n                {{ task.name }}\n                <small class="text-muted fw-light">\n                    (Parent-ID: {{ task.parent_id or \'None\' }})\n                </small>\n                <!-- Open Link -->\n                <a href="#" class="task-open-link" data-task-id="{{ task.id }}">\n                    <i class="bi bi-arrows-angle-expand" style="font-size: 0.8rem; color: white;"></i>\n                    Open\n                </a>\n            </td>\n                <td class="fw-light fs-6">\n                    <small class>\n                    LAC-{{ task.id }}\n                    </small>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light text-bg-secondary">\n                        {{ task.project if task.project else "Unknown Project" }}\n                    </span>\n                </td>\n                <td class="fs-6" data-contributor-column>{{ task.assigned_to if task.assigned_to else "Unassigned" }}</td>\n                <td class="fs-6">{{ task.story_points }}</td>\n                <td class="fs-6">\n                    <span class="badge rounded-pill fw-light text-bg-light">\n                        {{ task.task_type }}\n                    </span>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light {% if task.completed %}text-bg-success{% else %}text-bg-warning{% endif %}">\n                        {{ "Completed" if task.completed else "In Progress" }}\n                    </span>\n                </td>\n                <td>\n                    <!-- Delete Icon -->\n                    <button class="btn btn-dark btn-sm delete-task-btn" style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .2rem; --bs-btn-font-size: .75rem;" data-task-id="{{ task.id }}" aria-label="Deletes task {{ task.id }}">\n                        <i class="bi bi-trash"></i>\n                    </button>\n                </td>\n            </tr>\n            {% for child in tasks if child.parent_id == task.id %}\n                {{ render_task(child, tasks, depth + 1) }}\n            {% endfor %}\n            {% endmacro %}\n            \n            <!-- Render top-level tasks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:46:29.349784', 'updated_at': '2025-01-16T19:22:36.238473'}, {'id': 82, 'name': 'Implement Third-Party Authentication', 'description': 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitHub Login involves integrating OAuth 2.0, which both services support. The complexity depends on your app’s existing setup, frameworks, and experience with third-party authentication. Below is a breakdown:\n\nKey Steps for Implementing Google or GitHub Login\n\t1.\tSet Up OAuth Credentials:\n\t•\tRegister your application in the Google Cloud Console or GitHub Developer Settings.\n\t•\tObtain the client ID and client secret.\n\t2.\tInstall Required Libraries:\n\t•\tUse a library for OAuth (e.g., flask-oauthlib, python-social-auth, or authlib).\n\t•\tPopular frameworks like Flask and Django already have robust integrations for OAuth providers.\n\t3.\tBackend Configuration:\n\t•\tImplement an endpoint to handle the OAuth flow (/auth/login/google or /auth/login/github).\n\t•\tConfigure your app to send users to Google or GitHub’s authentication page.\n\t•\tHandle the OAuth callback to exchange the authorization code for an access token.\n\t•\tVerify the token and fetch user information (e.g., email, name).\n\t4.\tLink OAuth to User Registration:\n\t•\tOn successful login, create or retrieve a user in your database.\n\t•\tStore the user’s details like email, OAuth provider ID, and access token.\n\t5.\tFrontend Integration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T12:15:54.291625', 'updated_at': '2025-01-16T19:22:36.239866'}, {'id': 62, 'name': 'Add OAuth integration for Google Login', 'description': 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.241200'}, {'id': 64, 'name': 'Setup project credentials for Google API', 'description': 'Generate client ID and secret from Google API Console for your application.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.242497'}, {'id': 67, 'name': 'Test Google OAuth flow', 'description': 'Verify the OAuth flow using test accounts and check the token exchange.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.243780'}, {'id': 65, 'name': 'Implement backend endpoints for Google OAuth', 'description': 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.244932'}, {'id': 63, 'name': 'Add OAuth integration for GitHub Login', 'description': 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.246358'}, {'id': 68, 'name': 'Register application in GitHub Developer Console', 'description': 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.247746'}, {'id': 69, 'name': 'Handle callback from GitHub', 'description': 'Implement the callback endpoint to process the authorization code from GitHub.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.248912'}, {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}, {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}, {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-02-11T11:36:20.238219'}, {'id': 108, 'name': '1.1.2 Backend API for Registration', 'description': '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:33.067643'}, {'id': 112, 'name': '1.2.2 Frontend Login Page', 'description': 'Develop a frontend form for user login with email and password inputs.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.683644'}, {'id': 109, 'name': '1.1.3 Create Frontend Registration Page', 'description': 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.684988'}, {'id': 110, 'name': '1.1.4 Unit Tests for Registration', 'description': 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.686902'}, {'id': 101, 'name': '1.2 User Login', 'description': 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:25:53.687936'}, {'id': 111, 'name': '1.2.1 Backend API for Login', 'description': 'Create POST /api/login endpoint to handle user login.\njjsjj', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.689096'}, {'id': 113, 'name': '1.2.3 Session Management', 'description': 'Implement secure session handling using cookies or JWT.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:20.968680'}, {'id': 114, 'name': '1.2.4 Unit Tests for Login', 'description': 'Write tests for successful and failed login attempts.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:22:36.265866'}, {'id': 106, 'name': 'Password Reset', 'description': 'As a user, I want to reset my password securely using email.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.267247'}, {'id': 128, 'name': 'Frontend Password Reset Page', 'description': 'Develop a page for users to enter a new password using a valid token.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.269158'}, {'id': 129, 'name': 'Testing Password Reset', 'description': 'Write tests for email delivery, token validation, and password updates.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.270849'}, {'id': 102, 'name': 'Logout', 'description': 'As a user, I want to log out so that I can end my session securely.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.272605'}, {'id': 117, 'name': 'Tests for Logout', 'description': 'Verify session invalidation and redirection to the login page.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.274575'}, {'id': 116, 'name': 'Frontend Logout Button', 'description': 'Add a logout button to the UI and handle session clearing.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-02-09T12:31:17.939784'}, {'id': 115, 'name': 'Backend API for Logout', 'description': 'Create POST /api/logout endpoint to invalidate user sessions.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.277547'}, {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}, {'id': 45, 'name': 'Display Default Value in Dropdown', 'description': 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.280493'}, {'id': 50, 'name': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'In Progress', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:22.274304'}, {'id': 51, 'name': 'Set Default Value', 'description': 'Set the default value in the dropdown based on the retrieved data.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 45, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 1, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.283309'}, {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882'}, {'id': 54, 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 46, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:29.251047'}, {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:26:23.067490'}, {'id': 56, 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:16.233517'}, {'id': 55, 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:08.099271'}, {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:59.651639'}, {'id': 57, 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:51.310240'}, {'id': 58, 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:43.569501'}, {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:36.133259'}, {'id': 59, 'name': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:15.491910'}, {'id': 60, 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 49, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:28.367797'}, {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-11T08:25:07.992524'}, {'id': 52, 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 41, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:01.469601'}, {'id': 53, 'name': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:24:54.245010'}, {'id': 42, 'name': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:47.274896'}, {'id': 43, 'name': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:33.908549'}, {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-02-11T08:24:26.494016'}, {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-02-11T08:24:21.069473'}, {'id': 90, 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:13.204884'}, {'id': 88, 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:05.873554'}, {'id': 89, 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:23:58.436495'}, {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-02-11T08:23:51.269557'}, {'id': 93, 'name': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:42.771565'}, {'id': 91, 'name': 'Update database schema for task ownership', 'description': 'Add a column or relationship to assign a single owner per task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:33.670381'}, {'id': 92, 'name': 'Develop backend API for assigning task owner', 'description': 'Create endpoints to assign or update the owner of a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T09:19:44.027744'}, {'id': 87, 'name': 'Create and customize contributor roles', 'description': 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:43.600461', 'updated_at': '2025-02-11T08:23:23.402442'}, {'id': 96, 'name': 'Allow admin users to create and customize contributor roles via frontend', 'description': 'Provide UI functionality for admins to manage contributor roles dynamically.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:23:13.139282'}, {'id': 94, 'name': 'Add database support for contributor roles', 'description': 'Introduce a roles table and link contributors to specific roles for tasks.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:56.181530'}, {'id': 95, 'name': 'Develop backend API for managing contributor roles', 'description': 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:02.276492'}, {'id': 127, 'name': 'Backend API for Password Reset', 'description': 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-02-10T23:59:50.734037'}, {'id': 126, 'name': 'Email Configuration for Password Reset', 'description': 'Configure email service to send password reset links.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.334340'}, {'id': 104, 'name': 'Middleware for Role Enforcement', 'description': 'As a system, I want to enforce role-based access to specific routes.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:23:40.346816'}, {'id': 122, 'name': 'Testing Role Enforcement', 'description': 'Write tests to ensure proper access control based on roles.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.185693'}, {'id': 121, 'name': 'Develop Role Enforcement Middleware', 'description': 'Implement middleware to check user roles for access control.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.187439'}, {'id': 105, 'name': 'Profile Management', 'description': 'As a user, I want to update my profile (username, email, password).', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.339830'}, {'id': 123, 'name': 'Backend API for Profile Management', 'description': 'Create PATCH /api/profile endpoint to update user details.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.678781'}, {'id': 125, 'name': 'Testing Profile Updates', 'description': 'Write tests for profile update functionality.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.680382'}]
2025-02-11 16:38:40,620 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 16:38:40,620 INFO: [cached since 6073s ago] {'param_1': 2}
2025-02-11 16:38:40,621 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 16:38:40,621 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 16:38:40,621 INFO: [cached since 6073s ago] {'param_1': 3}
2025-02-11 16:38:40,622 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 16:38:40,623 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 16:38:40,623 INFO: [cached since 6073s ago] {'param_1': 4}
2025-02-11 16:38:40,623 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 16:38:40,623 DEBUG: Row (4, 'Fredrik')
2025-02-11 16:38:40,623 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 16:38:40,623 INFO: [cached since 6073s ago] {'param_1': 5}
2025-02-11 16:38:40,624 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 16:38:40,625 INFO: ROLLBACK
2025-02-11 16:38:40,625 INFO: 127.0.0.1 - - [11/Feb/2025 16:38:40] "GET /tasks/ HTTP/1.1" 200 -
2025-02-11 16:38:40,676 INFO: 127.0.0.1 - - [11/Feb/2025 16:38:40] "[36mGET /static/custom.css HTTP/1.1[0m" 304 -
2025-02-11 16:38:40,689 INFO: 127.0.0.1 - - [11/Feb/2025 16:38:40] "[36mGET /static/js/filters.js HTTP/1.1[0m" 304 -
2025-02-11 16:38:40,699 INFO: 127.0.0.1 - - [11/Feb/2025 16:38:40] "[36mGET /static/js/tasks_table_interactions.js HTTP/1.1[0m" 304 -
2025-02-11 16:38:40,702 INFO: 127.0.0.1 - - [11/Feb/2025 16:38:40] "[36mGET /static/js/modals.js HTTP/1.1[0m" 304 -
2025-02-11 16:38:40,712 INFO: 127.0.0.1 - - [11/Feb/2025 16:38:40] "[36mGET /static/images/background.svg HTTP/1.1[0m" 304 -
2025-02-11 16:38:40,841 INFO: 127.0.0.1 - - [11/Feb/2025 16:38:40] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-02-11 16:38:43,158 INFO: Fetching task details for Task ID 292.
2025-02-11 16:38:43,158 INFO: Fetching task with ID 292.
2025-02-11 16:38:43,159 INFO: BEGIN (implicit)
2025-02-11 16:38:43,160 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:38:43,160 INFO: [cached since 6068s ago] {'pk_1': 292}
2025-02-11 16:38:43,161 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:38:43,161 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API ... (2227 characters truncated) ... Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 11, 15, 38, 31, 373963), None)
2025-02-11 16:38:43,162 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12c106390>, 'sort_order': 0, 'task_type': 'User Story', 'contributor_id': None, 'id': 292, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), 'status': 'Completed', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 11, 15, 38, 31, 373963), 'name': 'issue: assigning contributor does not work', 'description': '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API endpoint resulted in a **400 Bad Request** error. Upon investigation, the following problems were identified:\n    \n    1. **Missing CSRF Token:**\n    - The request failed due to a missing CSRF token, as shown in the error message: *“Bad Request: The CSRF token is missing.”*\n    - The frontend was not correctly including the CSRF token in the request headers.\n    1. **JavaScript Error (Undefined CSRF Token Variable):**\n    - The error *“ReferenceError: csrfToken is not defined”* indicated that the CSRF token was not being retrieved properly in the JavaScript code.\n    1. **Incorrect Fetch Request Headers:**\n    - The fetch request did not include the CSRF token under the correct key (X-CSRFToken).\n    - The script attempted to send the request without properly extracting the CSRF token from the meta tag.\n    \n    **Solution**\n    \n    1. **Include the CSRF Token in the JavaScript Code**\n    \n    The CSRF token was retrieved from the meta tag and used in the request headers:\n    \n    ```jsx\n    // Retrieve CSRF token from meta tag\n    const csrfToken = document.querySelector(\'meta[name="csrf-token"]\').getAttribute(\'content\');\n    ```\n    \n    This ensures that the CSRF token is correctly fetched and available in the JavaScript scope.\n    \n    1. **Modify the Fetch Request to Include CSRF Token**\n    \n    The request to assign a contributor was updated to include the token:\n    \n    ```jsx\n    const response = await fetch(`/tasks/${taskId}/assign_contributor`, {\n        method: "POST",\n        headers: { \n            "Content-Type": "application/json",\n            "X-CSRFToken": csrfToken  // Include CSRF token\n        },\n        body: JSON.stringify({ contributor_id: parseInt(contributorId, 10) }),\n    });\n    ```\n    \n    - **Ensures the CSRF token is sent in the request headers** so that Flask-WTF does not reject the request.\n    1. **Verify and Debug Network Requests**\n    - The updated request headers were verified using **Chrome DevTools > Network tab** to ensure the X-CSRFToken was included.\n    - The error messages disappeared, and the contributor assignment request **succeeded with a 200 OK response**.\n    \n    ---\n    \n    **Final Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'parent_id': None, 'story_points': 0, 'completed_date': None}
2025-02-11 16:38:43,163 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 16:38:43,163 INFO: [cached since 6068s ago] {'pk_1': 6}
2025-02-11 16:38:43,165 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 16:38:43,165 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 16:38:43,166 INFO: Task ID 292 fetched with parent ID: None
2025-02-11 16:38:43,166 INFO: Task with ID 292 fetched successfully.
2025-02-11 16:38:43,166 DEBUG: Fetched Task Data: {'id': 292, 'name': 'issue: assigning contributor does not work', 'description': '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API endpoint resulted in a **400 Bad Request** error. Upon investigation, the following problems were identified:\n    \n    1. **Missing CSRF Token:**\n    - The request failed due to a missing CSRF token, as shown in the error message: *“Bad Request: The CSRF token is missing.”*\n    - The frontend was not correctly including the CSRF token in the request headers.\n    1. **JavaScript Error (Undefined CSRF Token Variable):**\n    - The error *“ReferenceError: csrfToken is not defined”* indicated that the CSRF token was not being retrieved properly in the JavaScript code.\n    1. **Incorrect Fetch Request Headers:**\n    - The fetch request did not include the CSRF token under the correct key (X-CSRFToken).\n    - The script attempted to send the request without properly extracting the CSRF token from the meta tag.\n    \n    **Solution**\n    \n    1. **Include the CSRF Token in the JavaScript Code**\n    \n    The CSRF token was retrieved from the meta tag and used in the request headers:\n    \n    ```jsx\n    // Retrieve CSRF token from meta tag\n    const csrfToken = document.querySelector(\'meta[name="csrf-token"]\').getAttribute(\'content\');\n    ```\n    \n    This ensures that the CSRF token is correctly fetched and available in the JavaScript scope.\n    \n    1. **Modify the Fetch Request to Include CSRF Token**\n    \n    The request to assign a contributor was updated to include the token:\n    \n    ```jsx\n    const response = await fetch(`/tasks/${taskId}/assign_contributor`, {\n        method: "POST",\n        headers: { \n            "Content-Type": "application/json",\n            "X-CSRFToken": csrfToken  // Include CSRF token\n        },\n        body: JSON.stringify({ contributor_id: parseInt(contributorId, 10) }),\n    });\n    ```\n    \n    - **Ensures the CSRF token is sent in the request headers** so that Flask-WTF does not reject the request.\n    1. **Verify and Debug Network Requests**\n    - The updated request headers were verified using **Chrome DevTools > Network tab** to ensure the X-CSRFToken was included.\n    - The error messages disappeared, and the contributor assignment request **succeeded with a 200 OK response**.\n    \n    ---\n    \n    **Final Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T09:11:12.273779', 'updated_at': '2025-02-11T15:38:31.373963', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 16:38:43,167 INFO: Task details fetched successfully for Task ID 292.
2025-02-11 16:38:43,168 INFO: ROLLBACK
2025-02-11 16:38:43,168 INFO: 127.0.0.1 - - [11/Feb/2025 16:38:43] "GET /api/tasks/292 HTTP/1.1" 200 -
2025-02-11 16:38:50,773 INFO: save_task triggered
2025-02-11 16:38:50,775 INFO: Payload received: {'title': 'issue: assigning contributor does not work', 'description': '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API endpoint resulted in a **400 Bad Request** error. Upon investigation, the following problems were identified:\n    \n    1. **Missing CSRF Token:**\n    - The request failed due to a missing CSRF token, as shown in the error message: *“Bad Request: The CSRF token is missing.”*\n    - The frontend was not correctly including the CSRF token in the request headers.\n    1. **JavaScript Error (Undefined CSRF Token Variable):**\n    - The error *“ReferenceError: csrfToken is not defined”* indicated that the CSRF token was not being retrieved properly in the JavaScript code.\n    1. **Incorrect Fetch Request Headers:**\n    - The fetch request did not include the CSRF token under the correct key (X-CSRFToken).\n    - The script attempted to send the request without properly extracting the CSRF token from the meta tag.\n    \n    **Solution**\n    \n    1. **Include the CSRF Token in the JavaScript Code**\n    \n    The CSRF token was retrieved from the meta tag and used in the request headers:\n    \n    ```jsx\n    // Retrieve CSRF token from meta tag\n    const csrfToken = document.querySelector(\'meta[name="csrf-token"]\').getAttribute(\'content\');\n    ```\n    \n    This ensures that the CSRF token is correctly fetched and available in the JavaScript scope.\n    \n    1. **Modify the Fetch Request to Include CSRF Token**\n    \n    The request to assign a contributor was updated to include the token:\n    \n    ```jsx\n    const response = await fetch(`/tasks/${taskId}/assign_contributor`, {\n        method: "POST",\n        headers: { \n            "Content-Type": "application/json",\n            "X-CSRFToken": csrfToken  // Include CSRF token\n        },\n        body: JSON.stringify({ contributor_id: parseInt(contributorId, 10) }),\n    });\n    ```\n    \n    - **Ensures the CSRF token is sent in the request headers** so that Flask-WTF does not reject the request.\n    1. **Verify and Debug Network Requests**\n    - The updated request headers were verified using **Chrome DevTools > Network tab** to ensure the X-CSRFToken was included.\n    - The error messages disappeared, and the contributor assignment request **succeeded with a 200 OK response**.\n    \n    ---\n    \n    **Final Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'task_id': '292', 'project_id': '6', 'task_type': 'User Story', 'story_points': 0, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 16:38:50,775 INFO: Update request for Task ID: 292
2025-02-11 16:38:50,776 INFO: BEGIN (implicit)
2025-02-11 16:38:50,776 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:38:50,776 INFO: [cached since 6076s ago] {'pk_1': '292'}
2025-02-11 16:38:50,777 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:38:50,778 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API ... (2227 characters truncated) ... Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 11, 15, 38, 31, 373963), None)
2025-02-11 16:38:50,778 DEBUG: Received update payload for Task ID 292: {'title': 'issue: assigning contributor does not work', 'description': '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API endpoint resulted in a **400 Bad Request** error. Upon investigation, the following problems were identified:\n    \n    1. **Missing CSRF Token:**\n    - The request failed due to a missing CSRF token, as shown in the error message: *“Bad Request: The CSRF token is missing.”*\n    - The frontend was not correctly including the CSRF token in the request headers.\n    1. **JavaScript Error (Undefined CSRF Token Variable):**\n    - The error *“ReferenceError: csrfToken is not defined”* indicated that the CSRF token was not being retrieved properly in the JavaScript code.\n    1. **Incorrect Fetch Request Headers:**\n    - The fetch request did not include the CSRF token under the correct key (X-CSRFToken).\n    - The script attempted to send the request without properly extracting the CSRF token from the meta tag.\n    \n    **Solution**\n    \n    1. **Include the CSRF Token in the JavaScript Code**\n    \n    The CSRF token was retrieved from the meta tag and used in the request headers:\n    \n    ```jsx\n    // Retrieve CSRF token from meta tag\n    const csrfToken = document.querySelector(\'meta[name="csrf-token"]\').getAttribute(\'content\');\n    ```\n    \n    This ensures that the CSRF token is correctly fetched and available in the JavaScript scope.\n    \n    1. **Modify the Fetch Request to Include CSRF Token**\n    \n    The request to assign a contributor was updated to include the token:\n    \n    ```jsx\n    const response = await fetch(`/tasks/${taskId}/assign_contributor`, {\n        method: "POST",\n        headers: { \n            "Content-Type": "application/json",\n            "X-CSRFToken": csrfToken  // Include CSRF token\n        },\n        body: JSON.stringify({ contributor_id: parseInt(contributorId, 10) }),\n    });\n    ```\n    \n    - **Ensures the CSRF token is sent in the request headers** so that Flask-WTF does not reject the request.\n    1. **Verify and Debug Network Requests**\n    - The updated request headers were verified using **Chrome DevTools > Network tab** to ensure the X-CSRFToken was included.\n    - The error messages disappeared, and the contributor assignment request **succeeded with a 200 OK response**.\n    \n    ---\n    \n    **Final Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'task_id': '292', 'project_id': '6', 'task_type': 'User Story', 'story_points': 0, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 16:38:50,778 DEBUG: Validating parent_id change for Task 292: None
2025-02-11 16:38:50,779 INFO: Hierarchy validation passed for Task 292.
2025-02-11 16:38:50,779 INFO: Validation passed for parent_id: None
2025-02-11 16:38:50,779 DEBUG: Validating task_type change for Task 292: User Story
2025-02-11 16:38:50,779 INFO: Hierarchy validation passed for Task 292.
2025-02-11 16:38:50,779 INFO: Validation passed for task_type: User Story
2025-02-11 16:38:50,780 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 16:38:50,780 INFO: [cached since 5486s ago] {'updated_at': datetime.datetime(2025, 2, 11, 15, 38, 50, 779710), 'task_id': 292}
2025-02-11 16:38:50,782 INFO: COMMIT
2025-02-11 16:38:50,783 INFO: Task ID 292 updated successfully.
2025-02-11 16:38:50,784 INFO: BEGIN (implicit)
2025-02-11 16:38:50,784 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:38:50,785 INFO: [cached since 5624s ago] {'pk_1': 292}
2025-02-11 16:38:50,786 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:38:50,786 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API ... (2227 characters truncated) ... Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 11, 15, 38, 50, 779710), None)
2025-02-11 16:38:50,787 INFO: ROLLBACK
2025-02-11 16:38:50,788 INFO: 127.0.0.1 - - [11/Feb/2025 16:38:50] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 16:39:51,145 INFO: Fetching task details for Task ID 289.
2025-02-11 16:39:51,146 INFO: Fetching task with ID 289.
2025-02-11 16:39:51,164 INFO: BEGIN (implicit)
2025-02-11 16:39:51,166 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:39:51,166 INFO: [cached since 6136s ago] {'pk_1': 289}
2025-02-11 16:39:51,168 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:39:51,169 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 11, 15, 36, 26, 718508), None)
2025-02-11 16:39:51,170 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12c105c70>, 'sort_order': 0, 'task_type': 'Subtask', 'contributor_id': None, 'id': 289, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), 'status': 'Completed', 'project_id': 6, 'updated_at': datetime.datetime(2025, 2, 11, 15, 36, 26, 718508), 'name': 'issue: parent task is lost when updating task', 'description': '', 'parent_id': None, 'story_points': 0, 'completed_date': None}
2025-02-11 16:39:51,172 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 16:39:51,172 INFO: [cached since 6136s ago] {'pk_1': 6}
2025-02-11 16:39:51,173 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 16:39:51,173 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 16:39:51,173 INFO: Task ID 289 fetched with parent ID: None
2025-02-11 16:39:51,174 INFO: Task with ID 289 fetched successfully.
2025-02-11 16:39:51,174 DEBUG: Fetched Task Data: {'id': 289, 'name': 'issue: parent task is lost when updating task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T08:56:25.273984', 'updated_at': '2025-02-11T15:36:26.718508', 'contributor_name': 'Unassigned', 'parent': None}
2025-02-11 16:39:51,174 INFO: Task details fetched successfully for Task ID 289.
2025-02-11 16:39:51,174 INFO: ROLLBACK
2025-02-11 16:39:51,175 INFO: 127.0.0.1 - - [11/Feb/2025 16:39:51] "GET /api/tasks/289 HTTP/1.1" 200 -
2025-02-11 16:40:01,940 INFO: Assigning contributor to task ID 289
2025-02-11 16:40:01,943 INFO: Received data: {'contributor_id': 5}
2025-02-11 16:40:01,943 INFO: Contributor ID received: 5
2025-02-11 16:40:01,944 INFO: BEGIN (implicit)
2025-02-11 16:40:01,945 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:40:01,945 INFO: [cached since 6147s ago] {'pk_1': 289}
2025-02-11 16:40:01,946 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:40:01,946 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 11, 15, 36, 26, 718508), None)
2025-02-11 16:40:01,947 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 16:40:01,948 INFO: [cached since 5695s ago] {'pk_1': 5}
2025-02-11 16:40:01,949 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 16:40:01,949 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 16:40:01,951 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 16:40:01,951 INFO: [cached since 5695s ago] {'pk_1': 6}
2025-02-11 16:40:01,952 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 16:40:01,955 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:01,956 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 16:40:01,956 INFO: [cached since 5695s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 15, 40, 1, 956758, tzinfo=datetime.timezone.utc), 'task_id': 289}
2025-02-11 16:40:01,960 INFO: COMMIT
2025-02-11 16:40:01,962 INFO: BEGIN (implicit)
2025-02-11 16:40:01,962 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 16:40:01,962 INFO: [cached since 5695s ago] {'pk_1': 5}
2025-02-11 16:40:01,963 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 16:40:01,963 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 16:40:01,964 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:40:01,964 INFO: [cached since 5695s ago] {'pk_1': 289}
2025-02-11 16:40:01,965 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:40:01,965 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Completed', None, 6, 5, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 11, 16, 40, 1, 956758), None)
2025-02-11 16:40:01,966 INFO: ROLLBACK
2025-02-11 16:40:01,966 INFO: 127.0.0.1 - - [11/Feb/2025 16:40:01] "POST /tasks/289/assign_contributor HTTP/1.1" 200 -
2025-02-11 16:40:03,606 INFO: save_task triggered
2025-02-11 16:40:03,606 INFO: Payload received: {'title': 'issue: parent task is lost when updating task', 'description': '- Summary of the problem and solution\n    \n    **Problem: Parent Task Dropdown Was Not Being Set on Modal Open**\n    \n    The issue was that when opening a task modal, the **parent task dropdown** was not pre-populated with the correct parent task. However, interacting with the dropdown (e.g., clicking on it) would suddenly trigger it to be set correctly. This meant that the dropdown initialization was likely delayed or missing a step in the modal lifecycle.\n    \n    **Debugging Steps and Observations**\n    \n    1. **Task Details Were Fetched Correctly** ✅\n    - The task details, including parent_id, were being fetched from the API successfully.\n    1. **Parent Dropdown Initialization Issues** ❌\n    - The initializeParentDropdown() function was being called, but the dropdown was sometimes **not fully ready** when we tried to set the selected parent task.\n    1. **Clicking the Dropdown Triggered the Parent to Be Set** 🤔\n    - This hinted that the dropdown was not fully ready when setParentDropdown(task.parent_id) was initially called.\n    \n    **Final Solution**\n    \n    1. **Ensuring Dropdown Readiness Before Setting the Parent Task**\n    - We added explicit **delays and checks** to confirm that the dropdown was fully initialized before attempting to set the parent task.\n    \n    Specifically, we:\n    \n    - **Waited for the dropdown to appear in the DOM** using observeParentDropdown().\n    - **Initialized the dropdown** with initializeParentDropdown().\n    - **Waited explicitly for the dropdown to be fully ready** using waitForParentDropdownReady().\n    - **Added a final delay of 200ms** before calling setParentDropdown() to ensure stability.\n    1. **Modifying openTaskModal to Handle Parent Dropdown Setup**\n    - We ensured that initializeParentDropdown() was called **after fetching task details** and before setting the parent task.\n    1. **Confirming the Fix** 🎯\n    - After these fixes, the parent dropdown was **immediately populated** upon opening the modal, without requiring user interaction.\n    \n    **Key Learnings**\n    \n    ✅ **Dropdowns in modals need careful timing** – They might not be ready when you expect them to be.\n    \n    ✅ **Waiting for DOM updates is crucial** – Observing the element ensures it actually exists before interacting with it.\n    \n    ✅ **Explicit delays can prevent race conditions** – A small delay can sometimes resolve timing issues in UI interactions.\n    \n    **Final Result**\n    \n    ✅ The modal now **correctly loads and pre-selects the parent task** without extra clicks! 🎉🚀', 'task_id': '289', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 0, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 16:40:03,606 INFO: Update request for Task ID: 289
2025-02-11 16:40:03,607 INFO: BEGIN (implicit)
2025-02-11 16:40:03,607 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:40:03,608 INFO: [cached since 6148s ago] {'pk_1': '289'}
2025-02-11 16:40:03,609 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:40:03,609 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Completed', None, 6, 5, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 11, 16, 40, 1, 956758), None)
2025-02-11 16:40:03,609 DEBUG: Received update payload for Task ID 289: {'title': 'issue: parent task is lost when updating task', 'description': '- Summary of the problem and solution\n    \n    **Problem: Parent Task Dropdown Was Not Being Set on Modal Open**\n    \n    The issue was that when opening a task modal, the **parent task dropdown** was not pre-populated with the correct parent task. However, interacting with the dropdown (e.g., clicking on it) would suddenly trigger it to be set correctly. This meant that the dropdown initialization was likely delayed or missing a step in the modal lifecycle.\n    \n    **Debugging Steps and Observations**\n    \n    1. **Task Details Were Fetched Correctly** ✅\n    - The task details, including parent_id, were being fetched from the API successfully.\n    1. **Parent Dropdown Initialization Issues** ❌\n    - The initializeParentDropdown() function was being called, but the dropdown was sometimes **not fully ready** when we tried to set the selected parent task.\n    1. **Clicking the Dropdown Triggered the Parent to Be Set** 🤔\n    - This hinted that the dropdown was not fully ready when setParentDropdown(task.parent_id) was initially called.\n    \n    **Final Solution**\n    \n    1. **Ensuring Dropdown Readiness Before Setting the Parent Task**\n    - We added explicit **delays and checks** to confirm that the dropdown was fully initialized before attempting to set the parent task.\n    \n    Specifically, we:\n    \n    - **Waited for the dropdown to appear in the DOM** using observeParentDropdown().\n    - **Initialized the dropdown** with initializeParentDropdown().\n    - **Waited explicitly for the dropdown to be fully ready** using waitForParentDropdownReady().\n    - **Added a final delay of 200ms** before calling setParentDropdown() to ensure stability.\n    1. **Modifying openTaskModal to Handle Parent Dropdown Setup**\n    - We ensured that initializeParentDropdown() was called **after fetching task details** and before setting the parent task.\n    1. **Confirming the Fix** 🎯\n    - After these fixes, the parent dropdown was **immediately populated** upon opening the modal, without requiring user interaction.\n    \n    **Key Learnings**\n    \n    ✅ **Dropdowns in modals need careful timing** – They might not be ready when you expect them to be.\n    \n    ✅ **Waiting for DOM updates is crucial** – Observing the element ensures it actually exists before interacting with it.\n    \n    ✅ **Explicit delays can prevent race conditions** – A small delay can sometimes resolve timing issues in UI interactions.\n    \n    **Final Result**\n    \n    ✅ The modal now **correctly loads and pre-selects the parent task** without extra clicks! 🎉🚀', 'task_id': '289', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 0, 'parent_id': None, 'contributor_id': None, 'sort_order': 0}
2025-02-11 16:40:03,610 DEBUG: Validating parent_id change for Task 289: None
2025-02-11 16:40:03,610 INFO: Hierarchy validation passed for Task 289.
2025-02-11 16:40:03,610 INFO: Validation passed for parent_id: None
2025-02-11 16:40:03,610 DEBUG: Validating task_type change for Task 289: Subtask
2025-02-11 16:40:03,610 INFO: Hierarchy validation passed for Task 289.
2025-02-11 16:40:03,610 INFO: Validation passed for task_type: Subtask
2025-02-11 16:40:03,611 INFO: UPDATE task SET description=%(description)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 16:40:03,611 INFO: [cached since 92.24s ago] {'description': '- Summary of the problem and solution\n    \n    **Problem: Parent Task Dropdown Was Not Being Set on Modal Open**\n    \n    The issue was that when ... (2300 characters truncated) ...  UI interactions.\n    \n    **Final Result**\n    \n    ✅ The modal now **correctly loads and pre-selects the parent task** without extra clicks! 🎉🚀', 'updated_at': datetime.datetime(2025, 2, 11, 15, 40, 3, 610698), 'task_id': 289}
2025-02-11 16:40:03,614 INFO: COMMIT
2025-02-11 16:40:03,615 INFO: Task ID 289 updated successfully.
2025-02-11 16:40:03,615 INFO: BEGIN (implicit)
2025-02-11 16:40:03,616 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 16:40:03,616 INFO: [cached since 5697s ago] {'pk_1': 289}
2025-02-11 16:40:03,617 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 16:40:03,618 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '- Summary of the problem and solution\n    \n    **Problem: Parent Task Dropdown Was Not Being Set on Modal Open**\n    \n    The issue was that when ... (2300 characters truncated) ...  UI interactions.\n    \n    **Final Result**\n    \n    ✅ The modal now **correctly loads and pre-selects the parent task** without extra clicks! 🎉🚀', 'Subtask', False, False, 'Completed', None, 6, 5, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 11, 15, 40, 3, 610698), None)
2025-02-11 16:40:03,619 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 16:40:03,620 INFO: [cached since 6148s ago] {'pk_1': 5}
2025-02-11 16:40:03,621 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 16:40:03,621 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 16:40:03,622 INFO: ROLLBACK
2025-02-11 16:40:03,622 INFO: 127.0.0.1 - - [11/Feb/2025 16:40:03] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 16:40:07,061 INFO: Entering list_tasks route...
2025-02-11 16:40:07,061 DEBUG: Filters used: {'is_archived': False}
2025-02-11 16:40:07,062 DEBUG: Applying filters: {'is_archived': False}
2025-02-11 16:40:07,074 DEBUG: Generated query: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name, project_1.id AS project_1_id, project_1.name AS project_1_name, project_1.start_date AS project_1_start_date, project_1.end_date AS project_1_end_date, project_1.scope AS project_1_scope, project_1.completed_story_points AS project_1_completed_story_points, project_1.created_at AS project_1_created_at, project_1.updated_at AS project_1_updated_at, contributor_2.id AS contributor_2_id, contributor_2.name AS contributor_2_name 
FROM task LEFT OUTER JOIN task AS task_1 ON task.id = task_1.parent_id LEFT OUTER JOIN project AS project_1 ON project_1.id = task.project_id LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project_1.id = project_contributor_1.project_id LEFT OUTER JOIN contributor AS contributor_2 ON contributor_2.id = task.contributor_id 
WHERE task.is_archived = false ORDER BY task.sort_order
2025-02-11 16:40:07,075 INFO: BEGIN (implicit)
2025-02-11 16:40:07,076 INFO: SELECT anon_1.task_id AS anon_1_task_id, anon_1.task_name AS anon_1_task_name, anon_1.task_sort_order AS anon_1_task_sort_order, anon_1.task_description AS anon_1_task_description, anon_1.task_task_type AS anon_1_task_task_type, anon_1.task_is_archived AS anon_1_task_is_archived, anon_1.task_completed AS anon_1_task_completed, anon_1.task_status AS anon_1_task_status, anon_1.task_parent_id AS anon_1_task_parent_id, anon_1.task_project_id AS anon_1_task_project_id, anon_1.task_contributor_id AS anon_1_task_contributor_id, anon_1.task_story_points AS anon_1_task_story_points, anon_1.task_created_at AS anon_1_task_created_at, anon_1.task_updated_at AS anon_1_task_updated_at, anon_1.task_completed_date AS anon_1_task_completed_date, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name, project_1.id AS project_1_id, project_1.name AS project_1_name, project_1.start_date AS project_1_start_date, project_1.end_date AS project_1_end_date, project_1.scope AS project_1_scope, project_1.completed_story_points AS project_1_completed_story_points, project_1.created_at AS project_1_created_at, project_1.updated_at AS project_1_updated_at, contributor_2.id AS contributor_2_id, contributor_2.name AS contributor_2_name 
FROM (SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.is_archived = false ORDER BY task.sort_order 
 LIMIT %(param_1)s OFFSET %(param_2)s) AS anon_1 LEFT OUTER JOIN task AS task_1 ON anon_1.task_id = task_1.parent_id LEFT OUTER JOIN project AS project_1 ON project_1.id = anon_1.task_project_id LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project_1.id = project_contributor_1.project_id LEFT OUTER JOIN contributor AS contributor_2 ON contributor_2.id = anon_1.task_contributor_id ORDER BY anon_1.task_sort_order
2025-02-11 16:40:07,076 INFO: [cached since 6159s ago] {'param_1': 110, 'param_2': 0}
2025-02-11 16:40:07,080 DEBUG: Col ('anon_1_task_id', 'anon_1_task_name', 'anon_1_task_sort_order', 'anon_1_task_description', 'anon_1_task_task_type', 'anon_1_task_is_archived', 'anon_1_task_completed', 'anon_1_task_status', 'anon_1_task_parent_id', 'anon_1_task_project_id', 'anon_1_task_contributor_id', 'anon_1_task_story_points', 'anon_1_task_created_at', 'anon_1_task_updated_at', 'anon_1_task_completed_date', 'task_1_id', 'task_1_name', 'task_1_sort_order', 'task_1_description', 'task_1_task_type', 'task_1_is_archived', 'task_1_completed', 'task_1_status', 'task_1_parent_id', 'task_1_project_id', 'task_1_contributor_id', 'task_1_story_points', 'task_1_created_at', 'task_1_updated_at', 'task_1_completed_date', 'contributor_1_id', 'contributor_1_name', 'project_1_id', 'project_1_name', 'project_1_start_date', 'project_1_end_date', 'project_1_scope', 'project_1_completed_story_points', 'project_1_created_at', 'project_1_updated_at', 'contributor_2_id', 'contributor_2_name')
2025-02-11 16:40:07,083 DEBUG: Row (290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,083 DEBUG: Row (298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None, 299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 16:40:07,083 DEBUG: Row (275, 'add sprints, cycles', 0, 'Make naming customizable', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 48, 52, 680022), datetime.datetime(2025, 2, 10, 8, 38, 37, 622196), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,083 DEBUG: Row (276, 'add support for priority', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 49, 26, 189497), datetime.datetime(2025, 2, 10, 8, 28, 47, 447612), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,083 DEBUG: Row (264, 'close all / open all childtasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 25, 20, 101418), datetime.datetime(2025, 2, 10, 8, 47, 14, 915970), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,083 DEBUG: Row (285, 'add text truncation to project names in task list', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 45, 47, 27805), datetime.datetime(2025, 2, 10, 9, 45, 47, 29729), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,084 DEBUG: Row (257, 'Update Task API Integration', 0, "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'Subtask', False, False, 'Not Started', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 22, 55, 49, 566819), datetime.datetime(2025, 2, 5, 22, 18, 17, 807154), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,084 DEBUG: Row (294, 'issue: task table filters not working', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 19, 21, 22598), datetime.datetime(2025, 2, 10, 10, 19, 21, 24676), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,084 DEBUG: Row (267, 'improvements to toggles and nested tasks', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 29, 12, 464594), datetime.datetime(2025, 2, 10, 8, 47, 24, 581680), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,084 DEBUG: Row (283, 'fix update title', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 58, 769700), datetime.datetime(2025, 2, 10, 8, 46, 47, 282087), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,084 DEBUG: Row (271, 'make sure dynamically added rows has the exact same styling and includes every element', 0, 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 21, 7, 108431), datetime.datetime(2025, 2, 10, 8, 38, 47, 340105), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,085 DEBUG: Row (273, 'disable parent task selector in epics', 0, 'and add text, Epic can´t have parent tasks', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 0, 45, 20, 740910), datetime.datetime(2025, 2, 10, 8, 39, 17, 639890), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,085 DEBUG: Row (269, 'fix styling for sweetalert', 0, '', 'User Story', False, False, 'In Progress', None, 6, None, 0, datetime.datetime(2025, 2, 8, 15, 54, 56, 717846), datetime.datetime(2025, 2, 10, 8, 39, 32, 172437), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,085 DEBUG: Row (286, 'add support for labels/tags', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 46, 23, 985620), datetime.datetime(2025, 2, 10, 9, 46, 23, 987564), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,085 DEBUG: Row (299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 16:40:07,085 DEBUG: Row (266, 'highlight the nested tasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 28, 30, 382949), datetime.datetime(2025, 2, 10, 8, 47, 4, 382929), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,086 DEBUG: Row (279, 'github integration', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 38, 238202), datetime.datetime(2025, 2, 10, 8, 39, 24, 168451), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,087 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '- Summary of the problem and solution\n    \n    **Problem: Parent Task Dropdown Was Not Being Set on Modal Open**\n    \n    The issue was that when ... (2300 characters truncated) ...  UI interactions.\n    \n    **Final Result**\n    \n    ✅ The modal now **correctly loads and pre-selects the parent task** without extra clicks! 🎉🚀', 'Subtask', False, False, 'Completed', None, 6, 5, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 11, 15, 40, 3, 610698), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,087 DEBUG: Row (278, 'search feature for tasks list', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 3, 369833), datetime.datetime(2025, 2, 10, 8, 39, 4, 5957), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,087 DEBUG: Row (281, 'add high level plan', 0, 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 27, 1, 218606), datetime.datetime(2025, 2, 10, 8, 38, 54, 754760), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,087 DEBUG: Row (287, 'when moving a parent item to another project make sure the subtasks are moved as well', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 48, 31, 986870), datetime.datetime(2025, 2, 10, 9, 48, 31, 988859), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,088 DEBUG: Row (272, 'implement a markdown text editor like notion', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 28, 18, 300231), datetime.datetime(2025, 2, 10, 8, 28, 39, 669255), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,088 DEBUG: Row (293, 'click on title should copy the task title and id to clipboard', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 16, 33, 508209), datetime.datetime(2025, 2, 10, 10, 16, 33, 510414), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,088 DEBUG: Row (277, 'custom task workflow statuses', 0, 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- ... (780 characters truncated) ...  tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 16, 3, 352588), datetime.datetime(2025, 2, 10, 8, 38, 28, 123328), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,089 DEBUG: Row (274, 'add support for goals, initiatives, okr´s', 0, 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 46, 27, 204912), datetime.datetime(2025, 2, 10, 8, 28, 17, 663922), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,089 DEBUG: Row (280, 'logging (task and project history)', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 37, 44, 435112), datetime.datetime(2025, 2, 10, 8, 28, 28, 947805), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,089 DEBUG: Row (282, 'implement same task list in projects but filtered on project', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 17, 786154), datetime.datetime(2025, 2, 10, 9, 41, 17, 787861), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,089 DEBUG: Row (296, 'issue: contributor is lost after updating task', 0, '', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 26, 43, 881947), datetime.datetime(2025, 2, 11, 15, 37, 31, 11120), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,089 DEBUG: Row (288, 'when trying to move subtask to another project, make sure a warning is displayed', 0, 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be l ... (312 characters truncated) ... , Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 54, 36, 297869), datetime.datetime(2025, 2, 10, 8, 54, 51, 840686), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,090 DEBUG: Row (284, 'add type "issue/bug"', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 42, 27, 719439), datetime.datetime(2025, 2, 10, 9, 42, 27, 720908), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,090 DEBUG: Row (295, 'issue: drag and drop errors', 0, '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 22, 54, 461413), datetime.datetime(2025, 2, 10, 10, 22, 54, 462542), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,090 DEBUG: Row (297, 'example parent epic', 0, '', 'Epic', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 39, 51, 620509), datetime.datetime(2025, 2, 10, 10, 39, 51, 622712), None, 298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 16:40:07,090 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API ... (2227 characters truncated) ... Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 11, 15, 38, 50, 779710), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,090 DEBUG: Row (265, 'smooth transition for toggles', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 27, 23, 422612), datetime.datetime(2025, 2, 10, 8, 46, 55, 831743), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,090 DEBUG: Row (270, 'the newest task', 0, '', 'Subtask', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 0, 7, 34, 368035), datetime.datetime(2025, 2, 10, 1, 7, 34, 372478), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 16:40:07,091 DEBUG: Row (291, 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 9, 52, 988609), datetime.datetime(2025, 2, 10, 10, 9, 52, 997455), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:40:07,091 DEBUG: Row (136, 'Page scroll should stay in position when reloading', 2, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 16, 18, 21, 50, 187247), datetime.datetime(2025, 1, 16, 19, 22, 36, 214901), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,091 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,091 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,092 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,092 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,092 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,092 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,093 DEBUG: Row (133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,093 DEBUG: Row (132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,094 DEBUG: Row (134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,094 DEBUG: Row (131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,095 DEBUG: Row (135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,095 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None, 63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,095 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None, 62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,095 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,096 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,096 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,096 DEBUG: Row (64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,096 DEBUG: Row (67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,096 DEBUG: Row (65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,096 DEBUG: Row (63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,096 DEBUG: Row (63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,097 DEBUG: Row (68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,097 DEBUG: Row (69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,097 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,097 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,097 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,097 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,097 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,098 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,098 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 2, 11, 11, 36, 20, 238219), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,099 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,100 DEBUG: Row (107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 2, 11, 11, 36, 20, 238219), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,101 DEBUG: Row (108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,101 DEBUG: Row (112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,102 DEBUG: Row (109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,102 DEBUG: Row (110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,102 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,102 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,103 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,104 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,105 DEBUG: Row (111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,105 DEBUG: Row (113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,106 DEBUG: Row (114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,106 DEBUG: Row (106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,106 DEBUG: Row (106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,106 DEBUG: Row (128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,106 DEBUG: Row (129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,107 DEBUG: Row (102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,107 DEBUG: Row (102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,107 DEBUG: Row (117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,108 DEBUG: Row (116, 'Frontend Logout Button', 33, 'Add a logout button to the UI and handle session clearing.', 'Subtask', False, False, 'Not Started', None, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 2, 9, 12, 31, 17, 939784), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,109 DEBUG: Row (115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,109 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,110 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,110 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,110 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,110 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,111 DEBUG: Row (45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None, 51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,111 DEBUG: Row (50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 22, 274304), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,111 DEBUG: Row (51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,111 DEBUG: Row (46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None, 54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:40:07,111 DEBUG: Row (54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,111 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None, 56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,112 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None, 55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,112 DEBUG: Row (56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,112 DEBUG: Row (55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,112 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None, 58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,112 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None, 57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,112 DEBUG: Row (57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,112 DEBUG: Row (58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,112 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None, 60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,113 DEBUG: Row (59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 15, 491910), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,113 DEBUG: Row (60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,113 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, 5, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 11, 8, 25, 7, 992524), None, 52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,113 DEBUG: Row (52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,113 DEBUG: Row (53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 24, 54, 245010), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,113 DEBUG: Row (42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, 5, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 47, 274896), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,113 DEBUG: Row (43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 33, 908549), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,113 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,113 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,114 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,114 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,114 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,115 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,115 DEBUG: Row (90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,115 DEBUG: Row (88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,115 DEBUG: Row (89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,115 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,116 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,116 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,116 DEBUG: Row (93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,116 DEBUG: Row (91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,116 DEBUG: Row (92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,116 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,116 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,116 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,116 DEBUG: Row (96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,117 DEBUG: Row (94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,117 DEBUG: Row (95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,117 DEBUG: Row (127, 'Backend API for Password Reset', 68, 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'Subtask', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 2, 10, 23, 59, 50, 734037), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,117 DEBUG: Row (126, 'Email Configuration for Password Reset', 69, 'Configure email service to send password reset links.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 334340), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,117 DEBUG: Row (104, 'Middleware for Role Enforcement', 70, 'As a system, I want to enforce role-based access to specific routes.', 'User Story', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 23, 40, 346816), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,117 DEBUG: Row (122, 'Testing Role Enforcement', 71, 'Write tests to ensure proper access control based on roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 185693), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,117 DEBUG: Row (121, 'Develop Role Enforcement Middleware', 72, 'Implement middleware to check user roles for access control.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 187439), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,117 DEBUG: Row (105, 'Profile Management', 73, 'As a user, I want to update my profile (username, email, password).', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 339830), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,117 DEBUG: Row (123, 'Backend API for Profile Management', 74, 'Create PATCH /api/profile endpoint to update user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 678781), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,117 DEBUG: Row (125, 'Testing Profile Updates', 75, 'Write tests for profile update functionality.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 680382), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:40:07,121 INFO: SELECT count(*) AS count_1 
FROM (SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.is_archived = false) AS anon_1
2025-02-11 16:40:07,121 INFO: [cached since 6159s ago] {}
2025-02-11 16:40:07,122 DEBUG: Col ('count_1',)
2025-02-11 16:40:07,122 DEBUG: Row (131,)
2025-02-11 16:40:07,123 INFO: SELECT DISTINCT task.task_type AS task_task_type 
FROM task
2025-02-11 16:40:07,123 INFO: [cached since 6159s ago] {}
2025-02-11 16:40:07,124 DEBUG: Col ('task_task_type',)
2025-02-11 16:40:07,124 DEBUG: Row ('Epic',)
2025-02-11 16:40:07,124 DEBUG: Row ('Subtask',)
2025-02-11 16:40:07,124 DEBUG: Row ('User Story',)
2025-02-11 16:40:07,124 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project
2025-02-11 16:40:07,124 INFO: [cached since 6159s ago] {}
2025-02-11 16:40:07,125 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 16:40:07,125 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 16:40:07,125 DEBUG: Row (2, 'Project Beta', datetime.date(2024, 2, 1), datetime.date(2024, 11, 30), None, 10, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 16:40:07,125 DEBUG: Row (3, 'Project Gamma', datetime.date(2024, 3, 1), datetime.date(2024, 10, 31), None, 20, datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), datetime.datetime(2024, 12, 11, 1, 37, 19, 511738))
2025-02-11 16:40:07,125 DEBUG: Row (4, 'Project Theta', datetime.date(2024, 12, 11), datetime.date(2024, 12, 27), None, 0, datetime.datetime(2024, 12, 12, 19, 26, 42, 642098), datetime.datetime(2024, 12, 12, 19, 26, 42, 642102))
2025-02-11 16:40:07,125 DEBUG: Row (5, 'Project Delta', datetime.date(2025, 1, 4), datetime.date(2025, 3, 8), None, 0, datetime.datetime(2025, 1, 3, 8, 16, 18, 658051), datetime.datetime(2025, 1, 3, 8, 16, 18, 658058))
2025-02-11 16:40:07,125 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259))
2025-02-11 16:40:07,125 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 16:40:07,126 DEBUG: Tasks passed to template: [{'id': 290, 'name': 'issue: error when changing task type and', 'description': 'issue: error when changing task type and parent task before saving', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:00:03.417734', 'updated_at': '2025-02-10T09:15:09.284969'}, {'id': 298, 'name': 'example user story with parent epic 297', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 297, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:41:01.907455', 'updated_at': '2025-02-10T14:59:04.142570'}, {'id': 275, 'name': 'add sprints, cycles', 'description': 'Make naming customizable', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:48:52.680022', 'updated_at': '2025-02-10T08:38:37.622196'}, {'id': 276, 'name': 'add support for priority', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:49:26.189497', 'updated_at': '2025-02-10T08:28:47.447612'}, {'id': 264, 'name': 'close all / open all childtasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:25:20.101418', 'updated_at': '2025-02-10T08:47:14.915970'}, {'id': 285, 'name': 'add text truncation to project names in task list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:45:47.027805', 'updated_at': '2025-02-10T09:45:47.029729'}, {'id': 257, 'name': 'Update Task API Integration', 'description': "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 240, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-02-05T22:55:49.566819', 'updated_at': '2025-02-05T22:18:17.807154'}, {'id': 294, 'name': 'issue: task table filters not working', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:19:21.022598', 'updated_at': '2025-02-10T10:19:21.024676'}, {'id': 267, 'name': 'improvements to toggles and nested tasks', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:29:12.464594', 'updated_at': '2025-02-10T08:47:24.581680'}, {'id': 283, 'name': 'fix update title', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:58.769700', 'updated_at': '2025-02-10T08:46:47.282087'}, {'id': 271, 'name': 'make sure dynamically added rows has the exact same styling and includes every element', 'description': 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:21:07.108431', 'updated_at': '2025-02-10T08:38:47.340105'}, {'id': 273, 'name': 'disable parent task selector in epics', 'description': 'and add text, Epic can´t have parent tasks', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:45:20.740910', 'updated_at': '2025-02-10T08:39:17.639890'}, {'id': 269, 'name': 'fix styling for sweetalert', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'In Progress', 'created_at': '2025-02-08T15:54:56.717846', 'updated_at': '2025-02-10T08:39:32.172437'}, {'id': 286, 'name': 'add support for labels/tags', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:46:23.985620', 'updated_at': '2025-02-10T09:46:23.987564'}, {'id': 299, 'name': 'example sub task with parent user story 298', 'description': 'Test update 1\nTest update 2\nTest update 3', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 298, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:42:38.905700', 'updated_at': '2025-02-10T23:23:08.671464'}, {'id': 266, 'name': 'highlight the nested tasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:28:30.382949', 'updated_at': '2025-02-10T08:47:04.382929'}, {'id': 279, 'name': 'github integration', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:38.238202', 'updated_at': '2025-02-10T08:39:24.168451'}, {'id': 289, 'name': 'issue: parent task is lost when updating task', 'description': '- Summary of the problem and solution\n    \n    **Problem: Parent Task Dropdown Was Not Being Set on Modal Open**\n    \n    The issue was that when opening a task modal, the **parent task dropdown** was not pre-populated with the correct parent task. However, interacting with the dropdown (e.g., clicking on it) would suddenly trigger it to be set correctly. This meant that the dropdown initialization was likely delayed or missing a step in the modal lifecycle.\n    \n    **Debugging Steps and Observations**\n    \n    1. **Task Details Were Fetched Correctly** ✅\n    - The task details, including parent_id, were being fetched from the API successfully.\n    1. **Parent Dropdown Initialization Issues** ❌\n    - The initializeParentDropdown() function was being called, but the dropdown was sometimes **not fully ready** when we tried to set the selected parent task.\n    1. **Clicking the Dropdown Triggered the Parent to Be Set** 🤔\n    - This hinted that the dropdown was not fully ready when setParentDropdown(task.parent_id) was initially called.\n    \n    **Final Solution**\n    \n    1. **Ensuring Dropdown Readiness Before Setting the Parent Task**\n    - We added explicit **delays and checks** to confirm that the dropdown was fully initialized before attempting to set the parent task.\n    \n    Specifically, we:\n    \n    - **Waited for the dropdown to appear in the DOM** using observeParentDropdown().\n    - **Initialized the dropdown** with initializeParentDropdown().\n    - **Waited explicitly for the dropdown to be fully ready** using waitForParentDropdownReady().\n    - **Added a final delay of 200ms** before calling setParentDropdown() to ensure stability.\n    1. **Modifying openTaskModal to Handle Parent Dropdown Setup**\n    - We ensured that initializeParentDropdown() was called **after fetching task details** and before setting the parent task.\n    1. **Confirming the Fix** 🎯\n    - After these fixes, the parent dropdown was **immediately populated** upon opening the modal, without requiring user interaction.\n    \n    **Key Learnings**\n    \n    ✅ **Dropdowns in modals need careful timing** – They might not be ready when you expect them to be.\n    \n    ✅ **Waiting for DOM updates is crucial** – Observing the element ensures it actually exists before interacting with it.\n    \n    ✅ **Explicit delays can prevent race conditions** – A small delay can sometimes resolve timing issues in UI interactions.\n    \n    **Final Result**\n    \n    ✅ The modal now **correctly loads and pre-selects the parent task** without extra clicks! 🎉🚀', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T08:56:25.273984', 'updated_at': '2025-02-11T15:40:03.610698'}, {'id': 278, 'name': 'search feature for tasks list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:03.369833', 'updated_at': '2025-02-10T08:39:04.005957'}, {'id': 281, 'name': 'add high level plan', 'description': 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:27:01.218606', 'updated_at': '2025-02-10T08:38:54.754760'}, {'id': 287, 'name': 'when moving a parent item to another project make sure the subtasks are moved as well', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:48:31.986870', 'updated_at': '2025-02-10T09:48:31.988859'}, {'id': 272, 'name': 'implement a markdown text editor like notion', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:28:18.300231', 'updated_at': '2025-02-10T08:28:39.669255'}, {'id': 293, 'name': 'click on title should copy the task title and id to clipboard', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:16:33.508209', 'updated_at': '2025-02-10T10:16:33.510414'}, {'id': 277, 'name': 'custom task workflow statuses', 'description': 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- Custom status\n-- Custom status\n- In Progress\n-- Custom status\n-- Custom status\n-- Custom status\n- Completed\n-- Custom status\n-- Custom status\n\n2. How can we track a task through different stages and save the sequence of events or stages the task has gone through?\nI´m thinking it could be good for mapping out processes, identifying bottlenecks and provide valuable insights while improving and streamlining workflows.\n- Stages\n- Contacts taken\n- Respons time \n- Time to action after responses\n- Dependencies\n\nNeed to be able to record every action related to this action.\nCommunication integrations\n- Slack\n- Email\n- Text messages\n- Phonecalls\n- Calendar events, meetings\n- Zoom, Google meet, Teams etc..\n\n\n2. Set custom statuses per project (can use tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:16:03.352588', 'updated_at': '2025-02-10T08:38:28.123328'}, {'id': 274, 'name': 'add support for goals, initiatives, okr´s', 'description': 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:46:27.204912', 'updated_at': '2025-02-10T08:28:17.663922'}, {'id': 280, 'name': 'logging (task and project history)', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:37:44.435112', 'updated_at': '2025-02-10T08:28:28.947805'}, {'id': 282, 'name': 'implement same task list in projects but filtered on project', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:17.786154', 'updated_at': '2025-02-10T09:41:17.787861'}, {'id': 296, 'name': 'issue: contributor is lost after updating task', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T09:26:43.881947', 'updated_at': '2025-02-11T15:37:31.011120'}, {'id': 288, 'name': 'when trying to move subtask to another project, make sure a warning is displayed', 'description': 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be lost"\nOR\n\nIs it possible, and is it desireable to keep parent child relationships across projects?\nSo that a parent can be in one project but the child tasks can be in different projects?\n\nLets say \nParent epic is \n"Internationalisation"\nChild user stories are\n- Timezones\n- Language\n- Currency\n- Day, Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:54:36.297869', 'updated_at': '2025-02-10T08:54:51.840686'}, {'id': 284, 'name': 'add type "issue/bug"', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:42:27.719439', 'updated_at': '2025-02-10T09:42:27.720908'}, {'id': 295, 'name': 'issue: drag and drop errors', 'description': '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:22:54.461413', 'updated_at': '2025-02-10T10:22:54.462542'}, {'id': 297, 'name': 'example parent epic', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:39:51.620509', 'updated_at': '2025-02-10T10:39:51.622712'}, {'id': 292, 'name': 'issue: assigning contributor does not work', 'description': '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API endpoint resulted in a **400 Bad Request** error. Upon investigation, the following problems were identified:\n    \n    1. **Missing CSRF Token:**\n    - The request failed due to a missing CSRF token, as shown in the error message: *“Bad Request: The CSRF token is missing.”*\n    - The frontend was not correctly including the CSRF token in the request headers.\n    1. **JavaScript Error (Undefined CSRF Token Variable):**\n    - The error *“ReferenceError: csrfToken is not defined”* indicated that the CSRF token was not being retrieved properly in the JavaScript code.\n    1. **Incorrect Fetch Request Headers:**\n    - The fetch request did not include the CSRF token under the correct key (X-CSRFToken).\n    - The script attempted to send the request without properly extracting the CSRF token from the meta tag.\n    \n    **Solution**\n    \n    1. **Include the CSRF Token in the JavaScript Code**\n    \n    The CSRF token was retrieved from the meta tag and used in the request headers:\n    \n    ```jsx\n    // Retrieve CSRF token from meta tag\n    const csrfToken = document.querySelector(\'meta[name="csrf-token"]\').getAttribute(\'content\');\n    ```\n    \n    This ensures that the CSRF token is correctly fetched and available in the JavaScript scope.\n    \n    1. **Modify the Fetch Request to Include CSRF Token**\n    \n    The request to assign a contributor was updated to include the token:\n    \n    ```jsx\n    const response = await fetch(`/tasks/${taskId}/assign_contributor`, {\n        method: "POST",\n        headers: { \n            "Content-Type": "application/json",\n            "X-CSRFToken": csrfToken  // Include CSRF token\n        },\n        body: JSON.stringify({ contributor_id: parseInt(contributorId, 10) }),\n    });\n    ```\n    \n    - **Ensures the CSRF token is sent in the request headers** so that Flask-WTF does not reject the request.\n    1. **Verify and Debug Network Requests**\n    - The updated request headers were verified using **Chrome DevTools > Network tab** to ensure the X-CSRFToken was included.\n    - The error messages disappeared, and the contributor assignment request **succeeded with a 200 OK response**.\n    \n    ---\n    \n    **Final Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T09:11:12.273779', 'updated_at': '2025-02-11T15:38:50.779710'}, {'id': 265, 'name': 'smooth transition for toggles', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:27:23.422612', 'updated_at': '2025-02-10T08:46:55.831743'}, {'id': 270, 'name': 'the newest task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:07:34.368035', 'updated_at': '2025-02-10T01:07:34.372478'}, {'id': 291, 'name': 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:09:52.988609', 'updated_at': '2025-02-10T10:09:52.997455'}, {'id': 136, 'name': 'Page scroll should stay in position when reloading', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-16T18:21:50.187247', 'updated_at': '2025-01-16T19:22:36.214901'}, {'id': 130, 'name': 'Implement the Map of Task Relationships solution for drag-and-drop', 'description': 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.093022', 'updated_at': '2025-01-16T19:22:36.216705'}, {'id': 133, 'name': 'Step 4: Enhance Logging in models.py', 'description': 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nupdating the Task model in the following ways:\n\n1.\tLog Changes to parent_id:\n\t•\tLog changes to parent_id during updates, including old and new values.\n\t2.\tValidate Hierarchy with Logging:\n\t•\tLog detailed messages when validating hierarchy changes, especially for circular dependency checks.\n\nHere’s how the models.py can be updated:\n```\nfrom datetime import datetime, timezone\nfrom sqlalchemy import func, cast, CheckConstraint\nfrom sqlalchemy.orm import validates\nfrom app.extensions.db import db\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\nclass Task(db.Model):\n    __tablename__ = "task"\n    \n    # Other columns...\n\n    parent_id = db.Column(\n        db.Integer, db.ForeignKey("task.id"), index=True, nullable=True\n    )\n\n    # Relationships\n    parent = db.relationship(\n        "Task", remote_side=[id], back_populates="children", lazy="select"\n    )\n    children = db.relationship(\n        "Task", back_populates="parent", lazy="select"\n    )\n\n    \n\n\n    @staticmethod\n    def _validate_no_circular_references(new_parent_id):\n        """\n        Validates that there are no circular references in the task hierarchy.\n\n        Args:\n            new_parent_id (int): The new parent ID to validate.\n\n        Raises:\n            ValueError: If a circular reference is detected.\n        """\n        visited = set()\n        current_parent_id = new_parent_id\n\n        logger.info(f"Validating circular references for parent ID: {new_parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error(\n                    f"Circular reference detected: Parent ID {current_parent_id} already visited."\n                )\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            # Fetch the next parent_id in the hierarchy\n            parent = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not parent:\n                break  # Exit if no parent is found\n            current_parent_id = parent.parent_id\n\n        logger.info("No circular reference detected.")\n\n    @validates(\'parent_id\', \'task_type\')\n    def validate_task_changes(self, key, value):\n        """\n        Validates changes to \'parent_id\' and \'task_type\'.\n        Ensures hierarchy validity and checks for circular references.\n        """\n        logger.debug(f"Validating {key} change for Task {self.id}: {value}")\n\n        if key == \'parent_id\':\n            # Log changes to parent_id\n            if self.id and value != self.parent_id:\n                logger.info(f"Task {self.id}: Updating \'parent_id\' from {self.parent_id} to {value}")\n\n            # Prevent a task from being its own parent\n            if value and value == self.id:\n                logger.error("A task cannot be its own parent.")\n                raise ValueError("A task cannot be its own parent.")\n\n            # Check for circular references\n            if value:\n                Task.check_circular_reference(self.id, value)\n\n        elif key == \'task_type\':\n            # Log changes to task_type\n            if self.id and value != self.task_type:\n                logger.info(f"Task {self.id}: Updating \'task_type\' from {self.task_type} to {value}")\n\n        # Check hierarchy rules without triggering further validation\n        if key in [\'parent_id\', \'task_type\']:\n            self._validate_hierarchy_change(key, value)\n\n        logger.info(f"Validation passed for {key}: {value}")\n        return value\n\n    def _validate_hierarchy_change(self, key, value):\n        """\n        Validates hierarchy rules for the task based on `task_type` and `parent_id`.\n        """\n        if key == \'parent_id\' and value:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=value).first()\n            if not parent_task:\n                raise ValueError("Parent task does not exist.")\n\n            logger.debug(f"Validating hierarchy: Task {self.id}, Parent Type: {parent_task.task_type}")\n            if self.task_type == "User Story" and parent_task.task_type != "Epic":\n                raise ValueError("User Stories must have an Epic as a parent.")\n            if self.task_type == "Subtask" and parent_task.task_type != "User Story":\n                raise ValueError("Subtasks must have a User Story as a parent.")\n\n        elif key == \'task_type\' and self.parent_id:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=self.parent_id).first()\n            if parent_task:\n                logger.debug(f"Validating hierarchy: Task Type: {value}, Parent Type: {parent_task.task_type}")\n                if value == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError("User Stories must have an Epic as a parent.")\n                if value == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError("Subtasks must have a User Story as a parent.")\n\n        logger.info(f"Hierarchy validation passed for Task {self.id if self.id else \'New Task\'}.")\n\n    @staticmethod\n    def check_circular_reference(task_id, parent_id):\n        """\n        Iteratively checks for circular references in the task hierarchy.\n        Prevents stack overflow on deep hierarchies.\n        """\n        visited = set()\n        current_parent_id = parent_id\n\n        logger.info(f"Checking circular reference for Task {task_id} with Parent ID: {parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error("Circular reference detected!")\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            if current_parent_id == task_id:\n                logger.error("A task cannot be its own ancestor.")\n                raise ValueError("A task cannot be its own ancestor.")\n\n            # Fetch the next parent_id in the hierarchy\n            task = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not task:\n                break\n            current_parent_id = task.parent_id\n\n        logger.info("Circular reference check passed.")\n```\nKey Enhancements:\n\t1.\tlog_and_validate_parent_id_change:\n\t•\tLogs the old and new parent_id whenever it changes.\n\t•\tEnsures no circular references are introduced.\n\t2.\t_validate_no_circular_references:\n\t•\tValidates the parent_id field to prevent circular dependencies.\n\t•\tLogs progress and raises detailed errors if violations occur.\n\t3.\tlog_and_validate_task_type_change:\n\t•\tLogs changes to task_type with the old and new values.\n\t•\tRevalidates hierarchy rules when task_type changes.\n\t4.\tDetailed Logging for Circular Reference Validation:\n\t•\t_validate_no_circular_references and check_circular_reference methods log every step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:44:08.340041', 'updated_at': '2025-01-16T19:22:36.219710'}, {'id': 132, 'name': 'Step 1: Update tasks_table_interactions.js', 'description': '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the map for efficient parent-child relationship lookups instead of DOM traversal.\n\n```\nexport const TaskManager = {\n    init: function (csrfToken) {\n        this.csrfToken = csrfToken;\n        this.initTaskParentMap(); // Initialize the map\n        this.initDragAndDrop(); // Initialize drag-and-drop functionality\n    },\n\n    // Initialize a global map for task relationships\n    taskParentMap: new Map(),\n\n    // Build the taskParentMap from the DOM\n    initTaskParentMap: function () {\n        console.log("Initializing Task Parent Map...");\n        const rows = document.querySelectorAll("tr[data-task-id]");\n\n        rows.forEach((row) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = parseInt(row.dataset.parentId, 10) || null;\n            this.taskParentMap.set(taskId, parentId);\n        });\n\n        console.log("Task Parent Map initialized:", Array.from(this.taskParentMap.entries()));\n    },\n\n    // Update the map dynamically after drag-and-drop\n    updateTaskParentMap: function (taskId, parentId) {\n        console.log(`Updating Task Parent Map: Task ${taskId} -> Parent ${parentId}`);\n        this.taskParentMap.set(taskId, parentId);\n    },\n\n    initDragAndDrop: function () {\n        if (window.isDragAndDropInitialized) {\n            console.log("Drag-and-drop is already initialized.");\n            return;\n        }\n\n        console.log("Initializing drag-and-drop within TaskManager...");\n\n        const tableBody = document.querySelector("tbody");\n        if (!tableBody) {\n            console.warn("Task table body not found for drag-and-drop initialization");\n            return;\n        }\n\n        // Initialize Sortable.js for drag-and-drop functionality\n        Sortable.create(tableBody, {\n            handle: ".task-row", // Only draggable via `.task-row` elements\n            animation: 150, // Smooth animation\n            filter: ".task-open-link", // Prevent dragging on task links\n            preventOnFilter: true, // Prevent drag if filtered element is clicked\n            onEnd: async (event) => {\n                try {\n                    console.log("Drag-and-drop operation started...");\n                    const rows = Array.from(event.from.querySelectorAll(".task-row"));\n                    const reorderedTasks = [];\n\n                    rows.forEach((row, index) => {\n                        const taskId = parseInt(row.dataset.taskId, 10);\n                        let parentId = null;\n\n                        // Get the parent ID from the map or fallback to the dataset\n                        if (row.classList.contains("subtask-row")) {\n                            const parentRow = row.previousElementSibling;\n                            parentId = parentRow\n                                ? parseInt(parentRow.dataset.taskId, 10)\n                                : this.taskParentMap.get(taskId) || null;\n                        }\n\n                        // Update the taskParentMap dynamically\n                        this.updateTaskParentMap(taskId, parentId);\n\n                        reorderedTasks.push({\n                            id: taskId,\n                            sort_order: index + 1,\n                            parent_id: parentId,\n                        });\n                    });\n\n                    console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n                    console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n                    // Send the payload to the backend\n                    const response = await fetch("/tasks/reorder_subtasks", {\n                        method: "POST",\n                        headers: {\n                            "Content-Type": "application/json",\n                            "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n                        },\n                        body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n                    });\n\n                    if (!response.ok) {\n                        const errorData = await response.json();\n                        console.error("Error reordering tasks:", errorData);\n                        alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n                        return;\n                    }\n\n                    const data = await response.json();\n                    console.log("Task reordering successful:", data);\n\n                } catch (error) {\n                    console.error("Error during drag-and-drop operation:", error);\n                    alert("An unexpected error occurred while reordering tasks.");\n                }\n            },\n        });\n\n        window.isDragAndDropInitialized = true;\n        console.log("Drag-and-drop initialized successfully.");\n    },\n};\n```\n\nKey Updates:\n\t1.\tPrecomputed Map (taskParentMap):\n\t•\tThe initTaskParentMap function initializes the map by iterating over DOM elements and mapping each task’s ID to its parent ID.\n\t•\tThe updateTaskParentMap dynamically updates the map when tasks are reordered.\n\t2.\tEfficient Parent Lookup:\n\t•\tThe parentId is derived from the precomputed map rather than DOM traversal.\n\t3.\tBackend Payload:\n\t•\tA structured payload (reorderedTasks) is sent to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:44:08.338301', 'updated_at': '2025-02-06T21:59:17.417466'}, {'id': 134, 'name': 'Step 2: Update the Backend in routes.py', 'description': 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\nPlan for step 2:\n\t1.\tVerify the payload structure:\n\t•\tEnsure that the payload includes all necessary fields (id, sort_order, parent_id) for each task.\n\t•\tValidate that the parent-child relationships in the precomputed map (taskParentMap) are reflected correctly in the payload.\n\t2.\tSubmit the payload to the backend:\n\t•\tEnhance the fetch request in the onEnd function of initDragAndDrop to log detailed submission data.\n\t•\tConfirm the payload integrity in the browser console before submission.\n\t3.\tUpdate backend logging:\n\t•\tAdd logging to /reorder_subtasks in routes.py to confirm receipt of the correct payload and process parent-child updates.\n\t•\tLog before and after database updates for better debugging.\n\n-----\nUpdated tasks_table_interactions.js\n\nReplace this section:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    let parentId = null;\n```\nWith:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    const parentId = this.taskParentMap.get(taskId) || null;\n```\nThe this.taskParentMap provides a precomputed and dynamic mapping of taskId to parentId. By using this map, we avoid relying on DOM traversal logic (row.closest or row.previousElementSibling) during drag-and-drop operations, which can sometimes be unreliable or cumbersome.\n\nFull Revised onEnd section:\n```\nonEnd: async (event) => {\n    try {\n        console.log("Drag-and-drop operation started...");\n        const rows = Array.from(event.from.querySelectorAll(".task-row"));\n        const reorderedTasks = [];\n\n        rows.forEach((row, index) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = this.taskParentMap.get(taskId) || null;\n\n            // Update the taskParentMap dynamically\n            this.updateTaskParentMap(taskId, parentId);\n\n            reorderedTasks.push({\n                id: taskId,\n                sort_order: index + 1,\n                parent_id: parentId,\n            });\n        });\n\n        console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n        console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n        // Send the payload to the backend\n        const response = await fetch("/tasks/reorder_subtasks", {\n            method: "POST",\n            headers: {\n                "Content-Type": "application/json",\n                "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n            },\n            body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            console.error("Error reordering tasks:", errorData);\n            alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n            return;\n        }\n\n        const data = await response.json();\n        console.log("Task reordering successful:", data);\n\n    } catch (error) {\n        console.error("Error during drag-and-drop operation:", error);\n        alert("An unexpected error occurred while reordering tasks.");\n    }\n}\n```\n---------------------------------\nEnsure updates include:\n\t•\tBetter Logging: Adding logs for key events such as database changes and validation results.\n\t•\tInput Validation: Ensure all required fields (id, sort_order, parent_id) exist in the payload.\n\t•\tPost-Commit Validation: Confirm database updates after the commit.\n\t•\tImproved Error Handling: Include specific error messages and consistent rollback mechanisms.\n\nBelow is the revised reorder_subtasks route with descriptive comments for each section:\n```\n@bp.route("/reorder_subtasks", methods=["POST"])\ndef reorder_subtasks():\n    """\n    Reorder subtasks globally or reassign them to a different parent.\n\n    Steps:\n    - Parse and validate input from the frontend.\n    - Update parent-child relationships and sort order in the database.\n    - Commit changes and return a success response.\n    - Handle errors gracefully and provide detailed logs for debugging.\n    """\n    logger.info("Entering reorder_subtasks route...")\n    logger.info(f"Received payload for reordering tasks: {request.json}")\n\n    try:\n        # Step 1: Parse input\n        parent_id = request.json.get("parent_id", None)  # Optional parent ID for the tasks being reordered\n        ordered_tasks = request.json.get("ordered_tasks", [])\n\n        logger.debug(f"Parsed parent_id: {parent_id}")\n        logger.debug(f"Parsed ordered_tasks: {ordered_tasks}")\n\n        # Step 2: Validate input\n        if not isinstance(ordered_tasks, list) or not all(\n            isinstance(task, dict) and "id" in task and "sort_order" in task and "parent_id" in task\n            for task in ordered_tasks\n        ):\n            logger.error(f"Invalid input received for ordered_tasks: {ordered_tasks}")\n            return jsonify({\n                "error": "Invalid input format for \'ordered_tasks\'. Each task must include \'id\', \'sort_order\', and \'parent_id\'."\n            }), 400\n\n        # Step 3: Validate parent task (if applicable)\n        if parent_id is not None:\n            parent_task = Task.query.get(parent_id)\n            if not parent_task:\n                logger.error(f"Parent task with ID {parent_id} not found.")\n                return jsonify({"error": f"Parent ID {parent_id} is invalid or does not exist."}), 400\n\n        logger.info("Input validation passed. Proceeding with task updates...")\n\n        # Step 4: Process updates for each subtask\n        updated_subtasks = []  # Keep track of updated subtasks for post-commit validation\n\n        for task_data in ordered_tasks:\n            subtask_id = task_data["id"]\n            sort_order = task_data["sort_order"]\n            new_parent_id = task_data["parent_id"]\n\n            # Fetch the subtask from the database\n            subtask = Task.query.get(subtask_id)\n            if not subtask:\n                logger.warning(f"Subtask ID {subtask_id} not found. Skipping...")\n                continue\n\n            # Log and update parent_id if it changes\n            if new_parent_id is not None and new_parent_id != subtask.parent_id:\n                logger.info(f"Reassigning subtask {subtask.id} to new parent {new_parent_id}")\n                subtask.parent_id = new_parent_id\n\n            # Update sort order\n            subtask.sort_order = sort_order\n            logger.debug(f"Updated subtask {subtask.id}: parent_id={subtask.parent_id}, sort_order={subtask.sort_order}")\n\n            # Add to the list of updated subtasks for validation\n            updated_subtasks.append(subtask)\n\n        # Step 5: Commit changes to the database\n        try:\n            db.session.commit()\n            logger.info(f"Subtasks reordered successfully: {[task[\'id\'] for task in ordered_tasks]}")\n        except Exception as e:\n            logger.error(f"Error committing changes to the database: {str(e)}")\n            db.session.rollback()\n            return jsonify({"error": "Failed to save changes to the database. Please try again."}), 500\n\n        # Step 6: Post-commit validation\n        for subtask in updated_subtasks:\n            logger.debug(f"Post-commit parent_id for task {subtask.id}: {subtask.parent_id}")\n            logger.debug(f"Post-commit sort_order for task {subtask.id}: {subtask.sort_order}")\n\n        # Step 7: Return success response\n        return jsonify({\n            "success": True,\n            "message": "Subtasks reordered successfully.",\n            "updated_subtasks": [subtask.id for subtask in updated_subtasks]\n        }), 200\n\n    except Exception as e:\n        # Step 8: Handle unexpected errors\n        logger.error(f"Error while reordering subtasks: {str(e)}", exc_info=True)\n        db.session.rollback()\n        return jsonify({"error": "An unexpected error occurred while reordering subtasks."}), 500\n```\nKey Changes and Descriptive Comments\n\t1.\tInput Parsing:\n\t•\tExtracts parent_id and ordered_tasks from the request payload.\n\t•\tLogs the parsed values for debugging.\n\t2.\tInput Validation:\n\t•\tEnsures ordered_tasks is a list of dictionaries with the required keys.\n\t•\tValidates parent_id if provided, ensuring the parent task exists in the database.\n\t3.\tUpdate Processing:\n\t•\tIterates through ordered_tasks, updating each task’s parent_id and sort_order.\n\t•\tLogs changes for each task.\n\t4.\tDatabase Commit:\n\t•\tCommits all updates in a single transaction.\n\t•\tLogs success or rolls back changes in case of an error.\n\t5.\tPost-Commit Validation:\n\t•\tVerifies that the parent_id and sort_order changes were successfully saved to the database.\n\t6.\tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:46:29.348853', 'updated_at': '2025-02-06T21:59:21.617065'}, {'id': 131, 'name': 'Step 5: Update utils.py', 'description': 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nChanges to Make:\n\t1.\tEnhance Task Filtering:\n\t•\tEnsure the filters handle parent-child relationships explicitly.\n\t•\tAdd options to include or exclude subtasks in queries.\n\t2.\tUtility Function for Debugging Parent-Child Relationships:\n\t•\tProvide a function to generate a map or list of parent-child relationships for debugging purposes.\n\t3.\tValidation Functions:\n\t•\tAdd a utility function to validate parent-child relationships and ensure no circular dependencies.\n\nUpdated utils.py Code:\n```\nimport logging\nfrom sqlalchemy import func\nfrom sqlalchemy.orm import joinedload\nfrom app.extensions.db import db\nfrom app.tasks.models import Task\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\n\nclass TaskService:\n    @staticmethod\n    def filter_tasks(filters=None, include_subtasks=True, page=None, per_page=None):\n        """\n        Dynamically filters tasks with an option to include or exclude subtasks.\n\n        Args:\n            filters (dict): Filtering criteria.\n            include_subtasks (bool): Whether to include subtasks in the query.\n            page (int, optional): Page number for pagination.\n            per_page (int, optional): Items per page for pagination.\n\n        Returns:\n            Query or Pagination: A SQLAlchemy query object or paginated results.\n        """\n        query = Task.query.options(\n            db.joinedload(Task.project).joinedload(Project.contributors),\n            db.joinedload(Task.contributor),\n            db.joinedload(Task.children),\n        ).order_by(Task.sort_order)\n\n        if filters:\n            logger.debug(f"Applying filters: {filters}")\n\n            # Apply standard filters\n            if "is_archived" in filters:\n                query = query.filter(Task.is_archived == filters["is_archived"])\n            if "project_id" in filters:\n                query = query.filter(Task.project_id == filters["project_id"])\n            if "task_type" in filters:\n                if isinstance(filters["task_type"], list):\n                    query = query.filter(Task.task_type.in_(filters["task_type"]))\n                else:\n                    query = query.filter(Task.task_type == filters["task_type"])\n            if "completion_status" in filters:\n                completion_map = {"completed": True, "in_progress": False}\n                if filters["completion_status"] in completion_map:\n                    query = query.filter(Task.completed == completion_map[filters["completion_status"]])\n\n            # Optionally exclude subtasks\n            if not include_subtasks:\n                query = query.filter(Task.task_type != "Subtask")\n\n        logger.debug(f"Generated query: {query}")\n\n        # Pagination\n        if page and per_page:\n            return query.paginate(page=page, per_page=per_page, error_out=False)\n        return query\n\n    @staticmethod\n    def debug_parent_child_relationships(project_id=None):\n        """\n        Generates a debug map of parent-child relationships for all tasks.\n\n        Args:\n            project_id (int, optional): Restrict to tasks from a specific project.\n\n        Returns:\n            dict: A dictionary mapping parent IDs to their child task IDs.\n        """\n        query = Task.query\n        if project_id:\n            query = query.filter(Task.project_id == project_id)\n\n        tasks = query.options(\n            db.load_only(Task.id, Task.parent_id)\n        ).all()\n\n        relationship_map = {}\n        for task in tasks:\n            if task.parent_id not in relationship_map:\n                relationship_map[task.parent_id] = []\n            relationship_map[task.parent_id].append(task.id)\n\n        logger.debug(f"Parent-Child Relationship Map: {relationship_map}")\n        return relationship_map\n\n    @staticmethod\n    def validate_parent_child_relationships():\n        """\n        Validates all parent-child relationships in the database to ensure they conform to hierarchy rules.\n\n        Raises:\n            ValueError: If invalid relationships are detected.\n        """\n        tasks = Task.query.options(db.joinedload(Task.parent)).all()\n\n        for task in tasks:\n            if task.parent_id:\n                parent_task = task.parent\n                if not parent_task:\n                    raise ValueError(f"Task {task.id} has an invalid parent ID {task.parent_id}.")\n\n                # Validate hierarchy rules\n                if task.task_type == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError(f"User Story {task.id} must have an Epic as its parent.")\n                if task.task_type == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError(f"Subtask {task.id} must have a User Story as its parent.")\n\n        logger.info("All parent-child relationships are valid.")\n\n    @staticmethod\n    def get_all_task_ids_with_parents():\n        """\n        Returns a flat list of tasks with their parent IDs for debugging.\n\n        Returns:\n            list: A list of tuples (task_id, parent_id).\n        """\n        tasks = Task.query.with_entities(Task.id, Task.parent_id).all()\n        logger.debug(f"Task IDs with Parent IDs: {tasks}")\n        return tasks\n```\n\n\nExplanation of Changes:\n\t1.\tfilter_tasks Enhancements:\n\t•\tAdded include_subtasks parameter to optionally exclude subtasks from the query.\n\t2.\tdebug_parent_child_relationships:\n\t•\tCreates a parent-child relationship map for debugging purposes.\n\t3.\tvalidate_parent_child_relationships:\n\t•\tIterates through all tasks to validate parent-child hierarchy and ensures no invalid relationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.091824', 'updated_at': '2025-01-16T19:22:36.236691'}, {'id': 135, 'name': 'Step 3: Update list.html', 'description': 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already includes everything needed. No required changes.\n\nHere´s the relevant section of list.html:\n\n```\n<tr id="task-{{ task.id }}"\n                class="task-row {% if task.task_type == \'Subtask\' %}subtask-row{% elif task.task_type == \'User Story\' %}user-story-row{% elif task.task_type == \'Epic\' %}epic-row{% endif %}"\n                style="background-color: \n                {% if task.task_type == \'Subtask\' %}\n                    rgba(200, 230, 255, 0.5); /* Light blue for Subtask */\n                {% elif task.task_type == \'User Story\' %}\n                    rgba(255, 255, 200, 0.5); /* Light yellow for User Story */\n                {% elif task.task_type == \'Epic\' %}\n                    rgba(255, 200, 200, 0.5); /* Light red for Epic */\n                {% else %}\n                    rgba(240, 240, 240, 1); /* Default light gray */\n                {% endif %};"\n                data-task-id="{{ task.id }}"\n                data-parent-id="{{ task.parent_id or \'\' }}"\n                data-level="{{ depth }}">\n                <td><input type="checkbox" name="batch_update" value="{{ task.id }}"></td>\n                <td>\n                    {% if tasks|selectattr("parent_id", "equalto", task.id)|list %}\n                    <button class="btn btn-sm toggle-details" data-task-id="{{ task.id }}" aria-label="Toggle details for task {{ task.name }}">\n                        <i class="bi bi-chevron-right"></i>\n                    </button>\n                    {% endif %}\n                </td>\n                <td class="fw-medium fs-6 \n                {% if task.task_type == \'Epic\' %}\n                    epic-cell\n                {% elif task.task_type == \'User Story\' %}\n                    user-story-cell\n                {% elif task.task_type == \'Subtask\' %}\n                    subtask-cell\n                {% endif %}" \n                style="padding-left: {{ depth|default(0) * 20 }}px; position: relative;">\n                <span class="bi fs-6\n                {% if task.task_type == \'Epic\' %}\n                    bi-circle-fill\n                {% elif task.task_type == \'User Story\' %}\n                    bi-circle-half\n                {% elif task.task_type == \'Subtask\' %}\n                    bi-circle\n                {% endif %}">\n                </span>\n                {{ task.name }}\n                <small class="text-muted fw-light">\n                    (Parent-ID: {{ task.parent_id or \'None\' }})\n                </small>\n                <!-- Open Link -->\n                <a href="#" class="task-open-link" data-task-id="{{ task.id }}">\n                    <i class="bi bi-arrows-angle-expand" style="font-size: 0.8rem; color: white;"></i>\n                    Open\n                </a>\n            </td>\n                <td class="fw-light fs-6">\n                    <small class>\n                    LAC-{{ task.id }}\n                    </small>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light text-bg-secondary">\n                        {{ task.project if task.project else "Unknown Project" }}\n                    </span>\n                </td>\n                <td class="fs-6" data-contributor-column>{{ task.assigned_to if task.assigned_to else "Unassigned" }}</td>\n                <td class="fs-6">{{ task.story_points }}</td>\n                <td class="fs-6">\n                    <span class="badge rounded-pill fw-light text-bg-light">\n                        {{ task.task_type }}\n                    </span>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light {% if task.completed %}text-bg-success{% else %}text-bg-warning{% endif %}">\n                        {{ "Completed" if task.completed else "In Progress" }}\n                    </span>\n                </td>\n                <td>\n                    <!-- Delete Icon -->\n                    <button class="btn btn-dark btn-sm delete-task-btn" style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .2rem; --bs-btn-font-size: .75rem;" data-task-id="{{ task.id }}" aria-label="Deletes task {{ task.id }}">\n                        <i class="bi bi-trash"></i>\n                    </button>\n                </td>\n            </tr>\n            {% for child in tasks if child.parent_id == task.id %}\n                {{ render_task(child, tasks, depth + 1) }}\n            {% endfor %}\n            {% endmacro %}\n            \n            <!-- Render top-level tasks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:46:29.349784', 'updated_at': '2025-01-16T19:22:36.238473'}, {'id': 82, 'name': 'Implement Third-Party Authentication', 'description': 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitHub Login involves integrating OAuth 2.0, which both services support. The complexity depends on your app’s existing setup, frameworks, and experience with third-party authentication. Below is a breakdown:\n\nKey Steps for Implementing Google or GitHub Login\n\t1.\tSet Up OAuth Credentials:\n\t•\tRegister your application in the Google Cloud Console or GitHub Developer Settings.\n\t•\tObtain the client ID and client secret.\n\t2.\tInstall Required Libraries:\n\t•\tUse a library for OAuth (e.g., flask-oauthlib, python-social-auth, or authlib).\n\t•\tPopular frameworks like Flask and Django already have robust integrations for OAuth providers.\n\t3.\tBackend Configuration:\n\t•\tImplement an endpoint to handle the OAuth flow (/auth/login/google or /auth/login/github).\n\t•\tConfigure your app to send users to Google or GitHub’s authentication page.\n\t•\tHandle the OAuth callback to exchange the authorization code for an access token.\n\t•\tVerify the token and fetch user information (e.g., email, name).\n\t4.\tLink OAuth to User Registration:\n\t•\tOn successful login, create or retrieve a user in your database.\n\t•\tStore the user’s details like email, OAuth provider ID, and access token.\n\t5.\tFrontend Integration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T12:15:54.291625', 'updated_at': '2025-01-16T19:22:36.239866'}, {'id': 62, 'name': 'Add OAuth integration for Google Login', 'description': 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.241200'}, {'id': 64, 'name': 'Setup project credentials for Google API', 'description': 'Generate client ID and secret from Google API Console for your application.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.242497'}, {'id': 67, 'name': 'Test Google OAuth flow', 'description': 'Verify the OAuth flow using test accounts and check the token exchange.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.243780'}, {'id': 65, 'name': 'Implement backend endpoints for Google OAuth', 'description': 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.244932'}, {'id': 63, 'name': 'Add OAuth integration for GitHub Login', 'description': 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.246358'}, {'id': 68, 'name': 'Register application in GitHub Developer Console', 'description': 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.247746'}, {'id': 69, 'name': 'Handle callback from GitHub', 'description': 'Implement the callback endpoint to process the authorization code from GitHub.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.248912'}, {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}, {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}, {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-02-11T11:36:20.238219'}, {'id': 108, 'name': '1.1.2 Backend API for Registration', 'description': '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:33.067643'}, {'id': 112, 'name': '1.2.2 Frontend Login Page', 'description': 'Develop a frontend form for user login with email and password inputs.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.683644'}, {'id': 109, 'name': '1.1.3 Create Frontend Registration Page', 'description': 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.684988'}, {'id': 110, 'name': '1.1.4 Unit Tests for Registration', 'description': 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.686902'}, {'id': 101, 'name': '1.2 User Login', 'description': 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:25:53.687936'}, {'id': 111, 'name': '1.2.1 Backend API for Login', 'description': 'Create POST /api/login endpoint to handle user login.\njjsjj', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.689096'}, {'id': 113, 'name': '1.2.3 Session Management', 'description': 'Implement secure session handling using cookies or JWT.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:20.968680'}, {'id': 114, 'name': '1.2.4 Unit Tests for Login', 'description': 'Write tests for successful and failed login attempts.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:22:36.265866'}, {'id': 106, 'name': 'Password Reset', 'description': 'As a user, I want to reset my password securely using email.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.267247'}, {'id': 128, 'name': 'Frontend Password Reset Page', 'description': 'Develop a page for users to enter a new password using a valid token.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.269158'}, {'id': 129, 'name': 'Testing Password Reset', 'description': 'Write tests for email delivery, token validation, and password updates.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.270849'}, {'id': 102, 'name': 'Logout', 'description': 'As a user, I want to log out so that I can end my session securely.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.272605'}, {'id': 117, 'name': 'Tests for Logout', 'description': 'Verify session invalidation and redirection to the login page.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.274575'}, {'id': 116, 'name': 'Frontend Logout Button', 'description': 'Add a logout button to the UI and handle session clearing.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-02-09T12:31:17.939784'}, {'id': 115, 'name': 'Backend API for Logout', 'description': 'Create POST /api/logout endpoint to invalidate user sessions.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.277547'}, {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}, {'id': 45, 'name': 'Display Default Value in Dropdown', 'description': 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.280493'}, {'id': 50, 'name': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'In Progress', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:22.274304'}, {'id': 51, 'name': 'Set Default Value', 'description': 'Set the default value in the dropdown based on the retrieved data.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 45, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 1, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.283309'}, {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882'}, {'id': 54, 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 46, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:29.251047'}, {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:26:23.067490'}, {'id': 56, 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:16.233517'}, {'id': 55, 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:08.099271'}, {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:59.651639'}, {'id': 57, 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:51.310240'}, {'id': 58, 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:43.569501'}, {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:36.133259'}, {'id': 59, 'name': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:15.491910'}, {'id': 60, 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 49, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:28.367797'}, {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-11T08:25:07.992524'}, {'id': 52, 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 41, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:01.469601'}, {'id': 53, 'name': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:24:54.245010'}, {'id': 42, 'name': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:47.274896'}, {'id': 43, 'name': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:33.908549'}, {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-02-11T08:24:26.494016'}, {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-02-11T08:24:21.069473'}, {'id': 90, 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:13.204884'}, {'id': 88, 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:05.873554'}, {'id': 89, 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:23:58.436495'}, {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-02-11T08:23:51.269557'}, {'id': 93, 'name': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:42.771565'}, {'id': 91, 'name': 'Update database schema for task ownership', 'description': 'Add a column or relationship to assign a single owner per task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:33.670381'}, {'id': 92, 'name': 'Develop backend API for assigning task owner', 'description': 'Create endpoints to assign or update the owner of a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T09:19:44.027744'}, {'id': 87, 'name': 'Create and customize contributor roles', 'description': 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:43.600461', 'updated_at': '2025-02-11T08:23:23.402442'}, {'id': 96, 'name': 'Allow admin users to create and customize contributor roles via frontend', 'description': 'Provide UI functionality for admins to manage contributor roles dynamically.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:23:13.139282'}, {'id': 94, 'name': 'Add database support for contributor roles', 'description': 'Introduce a roles table and link contributors to specific roles for tasks.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:56.181530'}, {'id': 95, 'name': 'Develop backend API for managing contributor roles', 'description': 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:02.276492'}, {'id': 127, 'name': 'Backend API for Password Reset', 'description': 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-02-10T23:59:50.734037'}, {'id': 126, 'name': 'Email Configuration for Password Reset', 'description': 'Configure email service to send password reset links.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.334340'}, {'id': 104, 'name': 'Middleware for Role Enforcement', 'description': 'As a system, I want to enforce role-based access to specific routes.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:23:40.346816'}, {'id': 122, 'name': 'Testing Role Enforcement', 'description': 'Write tests to ensure proper access control based on roles.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.185693'}, {'id': 121, 'name': 'Develop Role Enforcement Middleware', 'description': 'Implement middleware to check user roles for access control.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.187439'}, {'id': 105, 'name': 'Profile Management', 'description': 'As a user, I want to update my profile (username, email, password).', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.339830'}, {'id': 123, 'name': 'Backend API for Profile Management', 'description': 'Create PATCH /api/profile endpoint to update user details.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.678781'}, {'id': 125, 'name': 'Testing Profile Updates', 'description': 'Write tests for profile update functionality.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.680382'}]
2025-02-11 16:40:07,130 DEBUG: Task types: ['all', 'Epic', 'Subtask', 'User Story']
2025-02-11 16:40:07,130 DEBUG: Projects: [<Project Project Alpha (ID: 1)>, <Project Project Beta (ID: 2)>, <Project Project Gamma (ID: 3)>, <Project Project Theta (ID: 4)>, <Project Project Delta (ID: 5)>, <Project PMS - Feature Requests (ID: 7)>, <Project PMS - Backlog (ID: 6)>]
2025-02-11 16:40:07,130 DEBUG: Tasks response: [{'id': 290, 'name': 'issue: error when changing task type and', 'description': 'issue: error when changing task type and parent task before saving', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:00:03.417734', 'updated_at': '2025-02-10T09:15:09.284969'}, {'id': 298, 'name': 'example user story with parent epic 297', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 297, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:41:01.907455', 'updated_at': '2025-02-10T14:59:04.142570'}, {'id': 275, 'name': 'add sprints, cycles', 'description': 'Make naming customizable', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:48:52.680022', 'updated_at': '2025-02-10T08:38:37.622196'}, {'id': 276, 'name': 'add support for priority', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:49:26.189497', 'updated_at': '2025-02-10T08:28:47.447612'}, {'id': 264, 'name': 'close all / open all childtasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:25:20.101418', 'updated_at': '2025-02-10T08:47:14.915970'}, {'id': 285, 'name': 'add text truncation to project names in task list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:45:47.027805', 'updated_at': '2025-02-10T09:45:47.029729'}, {'id': 257, 'name': 'Update Task API Integration', 'description': "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 240, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-02-05T22:55:49.566819', 'updated_at': '2025-02-05T22:18:17.807154'}, {'id': 294, 'name': 'issue: task table filters not working', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:19:21.022598', 'updated_at': '2025-02-10T10:19:21.024676'}, {'id': 267, 'name': 'improvements to toggles and nested tasks', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:29:12.464594', 'updated_at': '2025-02-10T08:47:24.581680'}, {'id': 283, 'name': 'fix update title', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:58.769700', 'updated_at': '2025-02-10T08:46:47.282087'}, {'id': 271, 'name': 'make sure dynamically added rows has the exact same styling and includes every element', 'description': 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:21:07.108431', 'updated_at': '2025-02-10T08:38:47.340105'}, {'id': 273, 'name': 'disable parent task selector in epics', 'description': 'and add text, Epic can´t have parent tasks', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:45:20.740910', 'updated_at': '2025-02-10T08:39:17.639890'}, {'id': 269, 'name': 'fix styling for sweetalert', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'In Progress', 'created_at': '2025-02-08T15:54:56.717846', 'updated_at': '2025-02-10T08:39:32.172437'}, {'id': 286, 'name': 'add support for labels/tags', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:46:23.985620', 'updated_at': '2025-02-10T09:46:23.987564'}, {'id': 299, 'name': 'example sub task with parent user story 298', 'description': 'Test update 1\nTest update 2\nTest update 3', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 298, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:42:38.905700', 'updated_at': '2025-02-10T23:23:08.671464'}, {'id': 266, 'name': 'highlight the nested tasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:28:30.382949', 'updated_at': '2025-02-10T08:47:04.382929'}, {'id': 279, 'name': 'github integration', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:38.238202', 'updated_at': '2025-02-10T08:39:24.168451'}, {'id': 289, 'name': 'issue: parent task is lost when updating task', 'description': '- Summary of the problem and solution\n    \n    **Problem: Parent Task Dropdown Was Not Being Set on Modal Open**\n    \n    The issue was that when opening a task modal, the **parent task dropdown** was not pre-populated with the correct parent task. However, interacting with the dropdown (e.g., clicking on it) would suddenly trigger it to be set correctly. This meant that the dropdown initialization was likely delayed or missing a step in the modal lifecycle.\n    \n    **Debugging Steps and Observations**\n    \n    1. **Task Details Were Fetched Correctly** ✅\n    - The task details, including parent_id, were being fetched from the API successfully.\n    1. **Parent Dropdown Initialization Issues** ❌\n    - The initializeParentDropdown() function was being called, but the dropdown was sometimes **not fully ready** when we tried to set the selected parent task.\n    1. **Clicking the Dropdown Triggered the Parent to Be Set** 🤔\n    - This hinted that the dropdown was not fully ready when setParentDropdown(task.parent_id) was initially called.\n    \n    **Final Solution**\n    \n    1. **Ensuring Dropdown Readiness Before Setting the Parent Task**\n    - We added explicit **delays and checks** to confirm that the dropdown was fully initialized before attempting to set the parent task.\n    \n    Specifically, we:\n    \n    - **Waited for the dropdown to appear in the DOM** using observeParentDropdown().\n    - **Initialized the dropdown** with initializeParentDropdown().\n    - **Waited explicitly for the dropdown to be fully ready** using waitForParentDropdownReady().\n    - **Added a final delay of 200ms** before calling setParentDropdown() to ensure stability.\n    1. **Modifying openTaskModal to Handle Parent Dropdown Setup**\n    - We ensured that initializeParentDropdown() was called **after fetching task details** and before setting the parent task.\n    1. **Confirming the Fix** 🎯\n    - After these fixes, the parent dropdown was **immediately populated** upon opening the modal, without requiring user interaction.\n    \n    **Key Learnings**\n    \n    ✅ **Dropdowns in modals need careful timing** – They might not be ready when you expect them to be.\n    \n    ✅ **Waiting for DOM updates is crucial** – Observing the element ensures it actually exists before interacting with it.\n    \n    ✅ **Explicit delays can prevent race conditions** – A small delay can sometimes resolve timing issues in UI interactions.\n    \n    **Final Result**\n    \n    ✅ The modal now **correctly loads and pre-selects the parent task** without extra clicks! 🎉🚀', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T08:56:25.273984', 'updated_at': '2025-02-11T15:40:03.610698'}, {'id': 278, 'name': 'search feature for tasks list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:03.369833', 'updated_at': '2025-02-10T08:39:04.005957'}, {'id': 281, 'name': 'add high level plan', 'description': 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:27:01.218606', 'updated_at': '2025-02-10T08:38:54.754760'}, {'id': 287, 'name': 'when moving a parent item to another project make sure the subtasks are moved as well', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:48:31.986870', 'updated_at': '2025-02-10T09:48:31.988859'}, {'id': 272, 'name': 'implement a markdown text editor like notion', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:28:18.300231', 'updated_at': '2025-02-10T08:28:39.669255'}, {'id': 293, 'name': 'click on title should copy the task title and id to clipboard', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:16:33.508209', 'updated_at': '2025-02-10T10:16:33.510414'}, {'id': 277, 'name': 'custom task workflow statuses', 'description': 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- Custom status\n-- Custom status\n- In Progress\n-- Custom status\n-- Custom status\n-- Custom status\n- Completed\n-- Custom status\n-- Custom status\n\n2. How can we track a task through different stages and save the sequence of events or stages the task has gone through?\nI´m thinking it could be good for mapping out processes, identifying bottlenecks and provide valuable insights while improving and streamlining workflows.\n- Stages\n- Contacts taken\n- Respons time \n- Time to action after responses\n- Dependencies\n\nNeed to be able to record every action related to this action.\nCommunication integrations\n- Slack\n- Email\n- Text messages\n- Phonecalls\n- Calendar events, meetings\n- Zoom, Google meet, Teams etc..\n\n\n2. Set custom statuses per project (can use tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:16:03.352588', 'updated_at': '2025-02-10T08:38:28.123328'}, {'id': 274, 'name': 'add support for goals, initiatives, okr´s', 'description': 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:46:27.204912', 'updated_at': '2025-02-10T08:28:17.663922'}, {'id': 280, 'name': 'logging (task and project history)', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:37:44.435112', 'updated_at': '2025-02-10T08:28:28.947805'}, {'id': 282, 'name': 'implement same task list in projects but filtered on project', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:17.786154', 'updated_at': '2025-02-10T09:41:17.787861'}, {'id': 296, 'name': 'issue: contributor is lost after updating task', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T09:26:43.881947', 'updated_at': '2025-02-11T15:37:31.011120'}, {'id': 288, 'name': 'when trying to move subtask to another project, make sure a warning is displayed', 'description': 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be lost"\nOR\n\nIs it possible, and is it desireable to keep parent child relationships across projects?\nSo that a parent can be in one project but the child tasks can be in different projects?\n\nLets say \nParent epic is \n"Internationalisation"\nChild user stories are\n- Timezones\n- Language\n- Currency\n- Day, Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:54:36.297869', 'updated_at': '2025-02-10T08:54:51.840686'}, {'id': 284, 'name': 'add type "issue/bug"', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:42:27.719439', 'updated_at': '2025-02-10T09:42:27.720908'}, {'id': 295, 'name': 'issue: drag and drop errors', 'description': '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:22:54.461413', 'updated_at': '2025-02-10T10:22:54.462542'}, {'id': 297, 'name': 'example parent epic', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:39:51.620509', 'updated_at': '2025-02-10T10:39:51.622712'}, {'id': 292, 'name': 'issue: assigning contributor does not work', 'description': '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API endpoint resulted in a **400 Bad Request** error. Upon investigation, the following problems were identified:\n    \n    1. **Missing CSRF Token:**\n    - The request failed due to a missing CSRF token, as shown in the error message: *“Bad Request: The CSRF token is missing.”*\n    - The frontend was not correctly including the CSRF token in the request headers.\n    1. **JavaScript Error (Undefined CSRF Token Variable):**\n    - The error *“ReferenceError: csrfToken is not defined”* indicated that the CSRF token was not being retrieved properly in the JavaScript code.\n    1. **Incorrect Fetch Request Headers:**\n    - The fetch request did not include the CSRF token under the correct key (X-CSRFToken).\n    - The script attempted to send the request without properly extracting the CSRF token from the meta tag.\n    \n    **Solution**\n    \n    1. **Include the CSRF Token in the JavaScript Code**\n    \n    The CSRF token was retrieved from the meta tag and used in the request headers:\n    \n    ```jsx\n    // Retrieve CSRF token from meta tag\n    const csrfToken = document.querySelector(\'meta[name="csrf-token"]\').getAttribute(\'content\');\n    ```\n    \n    This ensures that the CSRF token is correctly fetched and available in the JavaScript scope.\n    \n    1. **Modify the Fetch Request to Include CSRF Token**\n    \n    The request to assign a contributor was updated to include the token:\n    \n    ```jsx\n    const response = await fetch(`/tasks/${taskId}/assign_contributor`, {\n        method: "POST",\n        headers: { \n            "Content-Type": "application/json",\n            "X-CSRFToken": csrfToken  // Include CSRF token\n        },\n        body: JSON.stringify({ contributor_id: parseInt(contributorId, 10) }),\n    });\n    ```\n    \n    - **Ensures the CSRF token is sent in the request headers** so that Flask-WTF does not reject the request.\n    1. **Verify and Debug Network Requests**\n    - The updated request headers were verified using **Chrome DevTools > Network tab** to ensure the X-CSRFToken was included.\n    - The error messages disappeared, and the contributor assignment request **succeeded with a 200 OK response**.\n    \n    ---\n    \n    **Final Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-02-10T09:11:12.273779', 'updated_at': '2025-02-11T15:38:50.779710'}, {'id': 265, 'name': 'smooth transition for toggles', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:27:23.422612', 'updated_at': '2025-02-10T08:46:55.831743'}, {'id': 270, 'name': 'the newest task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:07:34.368035', 'updated_at': '2025-02-10T01:07:34.372478'}, {'id': 291, 'name': 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:09:52.988609', 'updated_at': '2025-02-10T10:09:52.997455'}, {'id': 136, 'name': 'Page scroll should stay in position when reloading', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-16T18:21:50.187247', 'updated_at': '2025-01-16T19:22:36.214901'}, {'id': 130, 'name': 'Implement the Map of Task Relationships solution for drag-and-drop', 'description': 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.093022', 'updated_at': '2025-01-16T19:22:36.216705'}, {'id': 133, 'name': 'Step 4: Enhance Logging in models.py', 'description': 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nupdating the Task model in the following ways:\n\n1.\tLog Changes to parent_id:\n\t•\tLog changes to parent_id during updates, including old and new values.\n\t2.\tValidate Hierarchy with Logging:\n\t•\tLog detailed messages when validating hierarchy changes, especially for circular dependency checks.\n\nHere’s how the models.py can be updated:\n```\nfrom datetime import datetime, timezone\nfrom sqlalchemy import func, cast, CheckConstraint\nfrom sqlalchemy.orm import validates\nfrom app.extensions.db import db\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\nclass Task(db.Model):\n    __tablename__ = "task"\n    \n    # Other columns...\n\n    parent_id = db.Column(\n        db.Integer, db.ForeignKey("task.id"), index=True, nullable=True\n    )\n\n    # Relationships\n    parent = db.relationship(\n        "Task", remote_side=[id], back_populates="children", lazy="select"\n    )\n    children = db.relationship(\n        "Task", back_populates="parent", lazy="select"\n    )\n\n    \n\n\n    @staticmethod\n    def _validate_no_circular_references(new_parent_id):\n        """\n        Validates that there are no circular references in the task hierarchy.\n\n        Args:\n            new_parent_id (int): The new parent ID to validate.\n\n        Raises:\n            ValueError: If a circular reference is detected.\n        """\n        visited = set()\n        current_parent_id = new_parent_id\n\n        logger.info(f"Validating circular references for parent ID: {new_parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error(\n                    f"Circular reference detected: Parent ID {current_parent_id} already visited."\n                )\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            # Fetch the next parent_id in the hierarchy\n            parent = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not parent:\n                break  # Exit if no parent is found\n            current_parent_id = parent.parent_id\n\n        logger.info("No circular reference detected.")\n\n    @validates(\'parent_id\', \'task_type\')\n    def validate_task_changes(self, key, value):\n        """\n        Validates changes to \'parent_id\' and \'task_type\'.\n        Ensures hierarchy validity and checks for circular references.\n        """\n        logger.debug(f"Validating {key} change for Task {self.id}: {value}")\n\n        if key == \'parent_id\':\n            # Log changes to parent_id\n            if self.id and value != self.parent_id:\n                logger.info(f"Task {self.id}: Updating \'parent_id\' from {self.parent_id} to {value}")\n\n            # Prevent a task from being its own parent\n            if value and value == self.id:\n                logger.error("A task cannot be its own parent.")\n                raise ValueError("A task cannot be its own parent.")\n\n            # Check for circular references\n            if value:\n                Task.check_circular_reference(self.id, value)\n\n        elif key == \'task_type\':\n            # Log changes to task_type\n            if self.id and value != self.task_type:\n                logger.info(f"Task {self.id}: Updating \'task_type\' from {self.task_type} to {value}")\n\n        # Check hierarchy rules without triggering further validation\n        if key in [\'parent_id\', \'task_type\']:\n            self._validate_hierarchy_change(key, value)\n\n        logger.info(f"Validation passed for {key}: {value}")\n        return value\n\n    def _validate_hierarchy_change(self, key, value):\n        """\n        Validates hierarchy rules for the task based on `task_type` and `parent_id`.\n        """\n        if key == \'parent_id\' and value:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=value).first()\n            if not parent_task:\n                raise ValueError("Parent task does not exist.")\n\n            logger.debug(f"Validating hierarchy: Task {self.id}, Parent Type: {parent_task.task_type}")\n            if self.task_type == "User Story" and parent_task.task_type != "Epic":\n                raise ValueError("User Stories must have an Epic as a parent.")\n            if self.task_type == "Subtask" and parent_task.task_type != "User Story":\n                raise ValueError("Subtasks must have a User Story as a parent.")\n\n        elif key == \'task_type\' and self.parent_id:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=self.parent_id).first()\n            if parent_task:\n                logger.debug(f"Validating hierarchy: Task Type: {value}, Parent Type: {parent_task.task_type}")\n                if value == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError("User Stories must have an Epic as a parent.")\n                if value == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError("Subtasks must have a User Story as a parent.")\n\n        logger.info(f"Hierarchy validation passed for Task {self.id if self.id else \'New Task\'}.")\n\n    @staticmethod\n    def check_circular_reference(task_id, parent_id):\n        """\n        Iteratively checks for circular references in the task hierarchy.\n        Prevents stack overflow on deep hierarchies.\n        """\n        visited = set()\n        current_parent_id = parent_id\n\n        logger.info(f"Checking circular reference for Task {task_id} with Parent ID: {parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error("Circular reference detected!")\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            if current_parent_id == task_id:\n                logger.error("A task cannot be its own ancestor.")\n                raise ValueError("A task cannot be its own ancestor.")\n\n            # Fetch the next parent_id in the hierarchy\n            task = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not task:\n                break\n            current_parent_id = task.parent_id\n\n        logger.info("Circular reference check passed.")\n```\nKey Enhancements:\n\t1.\tlog_and_validate_parent_id_change:\n\t•\tLogs the old and new parent_id whenever it changes.\n\t•\tEnsures no circular references are introduced.\n\t2.\t_validate_no_circular_references:\n\t•\tValidates the parent_id field to prevent circular dependencies.\n\t•\tLogs progress and raises detailed errors if violations occur.\n\t3.\tlog_and_validate_task_type_change:\n\t•\tLogs changes to task_type with the old and new values.\n\t•\tRevalidates hierarchy rules when task_type changes.\n\t4.\tDetailed Logging for Circular Reference Validation:\n\t•\t_validate_no_circular_references and check_circular_reference methods log every step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:44:08.340041', 'updated_at': '2025-01-16T19:22:36.219710'}, {'id': 132, 'name': 'Step 1: Update tasks_table_interactions.js', 'description': '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the map for efficient parent-child relationship lookups instead of DOM traversal.\n\n```\nexport const TaskManager = {\n    init: function (csrfToken) {\n        this.csrfToken = csrfToken;\n        this.initTaskParentMap(); // Initialize the map\n        this.initDragAndDrop(); // Initialize drag-and-drop functionality\n    },\n\n    // Initialize a global map for task relationships\n    taskParentMap: new Map(),\n\n    // Build the taskParentMap from the DOM\n    initTaskParentMap: function () {\n        console.log("Initializing Task Parent Map...");\n        const rows = document.querySelectorAll("tr[data-task-id]");\n\n        rows.forEach((row) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = parseInt(row.dataset.parentId, 10) || null;\n            this.taskParentMap.set(taskId, parentId);\n        });\n\n        console.log("Task Parent Map initialized:", Array.from(this.taskParentMap.entries()));\n    },\n\n    // Update the map dynamically after drag-and-drop\n    updateTaskParentMap: function (taskId, parentId) {\n        console.log(`Updating Task Parent Map: Task ${taskId} -> Parent ${parentId}`);\n        this.taskParentMap.set(taskId, parentId);\n    },\n\n    initDragAndDrop: function () {\n        if (window.isDragAndDropInitialized) {\n            console.log("Drag-and-drop is already initialized.");\n            return;\n        }\n\n        console.log("Initializing drag-and-drop within TaskManager...");\n\n        const tableBody = document.querySelector("tbody");\n        if (!tableBody) {\n            console.warn("Task table body not found for drag-and-drop initialization");\n            return;\n        }\n\n        // Initialize Sortable.js for drag-and-drop functionality\n        Sortable.create(tableBody, {\n            handle: ".task-row", // Only draggable via `.task-row` elements\n            animation: 150, // Smooth animation\n            filter: ".task-open-link", // Prevent dragging on task links\n            preventOnFilter: true, // Prevent drag if filtered element is clicked\n            onEnd: async (event) => {\n                try {\n                    console.log("Drag-and-drop operation started...");\n                    const rows = Array.from(event.from.querySelectorAll(".task-row"));\n                    const reorderedTasks = [];\n\n                    rows.forEach((row, index) => {\n                        const taskId = parseInt(row.dataset.taskId, 10);\n                        let parentId = null;\n\n                        // Get the parent ID from the map or fallback to the dataset\n                        if (row.classList.contains("subtask-row")) {\n                            const parentRow = row.previousElementSibling;\n                            parentId = parentRow\n                                ? parseInt(parentRow.dataset.taskId, 10)\n                                : this.taskParentMap.get(taskId) || null;\n                        }\n\n                        // Update the taskParentMap dynamically\n                        this.updateTaskParentMap(taskId, parentId);\n\n                        reorderedTasks.push({\n                            id: taskId,\n                            sort_order: index + 1,\n                            parent_id: parentId,\n                        });\n                    });\n\n                    console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n                    console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n                    // Send the payload to the backend\n                    const response = await fetch("/tasks/reorder_subtasks", {\n                        method: "POST",\n                        headers: {\n                            "Content-Type": "application/json",\n                            "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n                        },\n                        body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n                    });\n\n                    if (!response.ok) {\n                        const errorData = await response.json();\n                        console.error("Error reordering tasks:", errorData);\n                        alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n                        return;\n                    }\n\n                    const data = await response.json();\n                    console.log("Task reordering successful:", data);\n\n                } catch (error) {\n                    console.error("Error during drag-and-drop operation:", error);\n                    alert("An unexpected error occurred while reordering tasks.");\n                }\n            },\n        });\n\n        window.isDragAndDropInitialized = true;\n        console.log("Drag-and-drop initialized successfully.");\n    },\n};\n```\n\nKey Updates:\n\t1.\tPrecomputed Map (taskParentMap):\n\t•\tThe initTaskParentMap function initializes the map by iterating over DOM elements and mapping each task’s ID to its parent ID.\n\t•\tThe updateTaskParentMap dynamically updates the map when tasks are reordered.\n\t2.\tEfficient Parent Lookup:\n\t•\tThe parentId is derived from the precomputed map rather than DOM traversal.\n\t3.\tBackend Payload:\n\t•\tA structured payload (reorderedTasks) is sent to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:44:08.338301', 'updated_at': '2025-02-06T21:59:17.417466'}, {'id': 134, 'name': 'Step 2: Update the Backend in routes.py', 'description': 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\nPlan for step 2:\n\t1.\tVerify the payload structure:\n\t•\tEnsure that the payload includes all necessary fields (id, sort_order, parent_id) for each task.\n\t•\tValidate that the parent-child relationships in the precomputed map (taskParentMap) are reflected correctly in the payload.\n\t2.\tSubmit the payload to the backend:\n\t•\tEnhance the fetch request in the onEnd function of initDragAndDrop to log detailed submission data.\n\t•\tConfirm the payload integrity in the browser console before submission.\n\t3.\tUpdate backend logging:\n\t•\tAdd logging to /reorder_subtasks in routes.py to confirm receipt of the correct payload and process parent-child updates.\n\t•\tLog before and after database updates for better debugging.\n\n-----\nUpdated tasks_table_interactions.js\n\nReplace this section:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    let parentId = null;\n```\nWith:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    const parentId = this.taskParentMap.get(taskId) || null;\n```\nThe this.taskParentMap provides a precomputed and dynamic mapping of taskId to parentId. By using this map, we avoid relying on DOM traversal logic (row.closest or row.previousElementSibling) during drag-and-drop operations, which can sometimes be unreliable or cumbersome.\n\nFull Revised onEnd section:\n```\nonEnd: async (event) => {\n    try {\n        console.log("Drag-and-drop operation started...");\n        const rows = Array.from(event.from.querySelectorAll(".task-row"));\n        const reorderedTasks = [];\n\n        rows.forEach((row, index) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = this.taskParentMap.get(taskId) || null;\n\n            // Update the taskParentMap dynamically\n            this.updateTaskParentMap(taskId, parentId);\n\n            reorderedTasks.push({\n                id: taskId,\n                sort_order: index + 1,\n                parent_id: parentId,\n            });\n        });\n\n        console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n        console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n        // Send the payload to the backend\n        const response = await fetch("/tasks/reorder_subtasks", {\n            method: "POST",\n            headers: {\n                "Content-Type": "application/json",\n                "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n            },\n            body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            console.error("Error reordering tasks:", errorData);\n            alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n            return;\n        }\n\n        const data = await response.json();\n        console.log("Task reordering successful:", data);\n\n    } catch (error) {\n        console.error("Error during drag-and-drop operation:", error);\n        alert("An unexpected error occurred while reordering tasks.");\n    }\n}\n```\n---------------------------------\nEnsure updates include:\n\t•\tBetter Logging: Adding logs for key events such as database changes and validation results.\n\t•\tInput Validation: Ensure all required fields (id, sort_order, parent_id) exist in the payload.\n\t•\tPost-Commit Validation: Confirm database updates after the commit.\n\t•\tImproved Error Handling: Include specific error messages and consistent rollback mechanisms.\n\nBelow is the revised reorder_subtasks route with descriptive comments for each section:\n```\n@bp.route("/reorder_subtasks", methods=["POST"])\ndef reorder_subtasks():\n    """\n    Reorder subtasks globally or reassign them to a different parent.\n\n    Steps:\n    - Parse and validate input from the frontend.\n    - Update parent-child relationships and sort order in the database.\n    - Commit changes and return a success response.\n    - Handle errors gracefully and provide detailed logs for debugging.\n    """\n    logger.info("Entering reorder_subtasks route...")\n    logger.info(f"Received payload for reordering tasks: {request.json}")\n\n    try:\n        # Step 1: Parse input\n        parent_id = request.json.get("parent_id", None)  # Optional parent ID for the tasks being reordered\n        ordered_tasks = request.json.get("ordered_tasks", [])\n\n        logger.debug(f"Parsed parent_id: {parent_id}")\n        logger.debug(f"Parsed ordered_tasks: {ordered_tasks}")\n\n        # Step 2: Validate input\n        if not isinstance(ordered_tasks, list) or not all(\n            isinstance(task, dict) and "id" in task and "sort_order" in task and "parent_id" in task\n            for task in ordered_tasks\n        ):\n            logger.error(f"Invalid input received for ordered_tasks: {ordered_tasks}")\n            return jsonify({\n                "error": "Invalid input format for \'ordered_tasks\'. Each task must include \'id\', \'sort_order\', and \'parent_id\'."\n            }), 400\n\n        # Step 3: Validate parent task (if applicable)\n        if parent_id is not None:\n            parent_task = Task.query.get(parent_id)\n            if not parent_task:\n                logger.error(f"Parent task with ID {parent_id} not found.")\n                return jsonify({"error": f"Parent ID {parent_id} is invalid or does not exist."}), 400\n\n        logger.info("Input validation passed. Proceeding with task updates...")\n\n        # Step 4: Process updates for each subtask\n        updated_subtasks = []  # Keep track of updated subtasks for post-commit validation\n\n        for task_data in ordered_tasks:\n            subtask_id = task_data["id"]\n            sort_order = task_data["sort_order"]\n            new_parent_id = task_data["parent_id"]\n\n            # Fetch the subtask from the database\n            subtask = Task.query.get(subtask_id)\n            if not subtask:\n                logger.warning(f"Subtask ID {subtask_id} not found. Skipping...")\n                continue\n\n            # Log and update parent_id if it changes\n            if new_parent_id is not None and new_parent_id != subtask.parent_id:\n                logger.info(f"Reassigning subtask {subtask.id} to new parent {new_parent_id}")\n                subtask.parent_id = new_parent_id\n\n            # Update sort order\n            subtask.sort_order = sort_order\n            logger.debug(f"Updated subtask {subtask.id}: parent_id={subtask.parent_id}, sort_order={subtask.sort_order}")\n\n            # Add to the list of updated subtasks for validation\n            updated_subtasks.append(subtask)\n\n        # Step 5: Commit changes to the database\n        try:\n            db.session.commit()\n            logger.info(f"Subtasks reordered successfully: {[task[\'id\'] for task in ordered_tasks]}")\n        except Exception as e:\n            logger.error(f"Error committing changes to the database: {str(e)}")\n            db.session.rollback()\n            return jsonify({"error": "Failed to save changes to the database. Please try again."}), 500\n\n        # Step 6: Post-commit validation\n        for subtask in updated_subtasks:\n            logger.debug(f"Post-commit parent_id for task {subtask.id}: {subtask.parent_id}")\n            logger.debug(f"Post-commit sort_order for task {subtask.id}: {subtask.sort_order}")\n\n        # Step 7: Return success response\n        return jsonify({\n            "success": True,\n            "message": "Subtasks reordered successfully.",\n            "updated_subtasks": [subtask.id for subtask in updated_subtasks]\n        }), 200\n\n    except Exception as e:\n        # Step 8: Handle unexpected errors\n        logger.error(f"Error while reordering subtasks: {str(e)}", exc_info=True)\n        db.session.rollback()\n        return jsonify({"error": "An unexpected error occurred while reordering subtasks."}), 500\n```\nKey Changes and Descriptive Comments\n\t1.\tInput Parsing:\n\t•\tExtracts parent_id and ordered_tasks from the request payload.\n\t•\tLogs the parsed values for debugging.\n\t2.\tInput Validation:\n\t•\tEnsures ordered_tasks is a list of dictionaries with the required keys.\n\t•\tValidates parent_id if provided, ensuring the parent task exists in the database.\n\t3.\tUpdate Processing:\n\t•\tIterates through ordered_tasks, updating each task’s parent_id and sort_order.\n\t•\tLogs changes for each task.\n\t4.\tDatabase Commit:\n\t•\tCommits all updates in a single transaction.\n\t•\tLogs success or rolls back changes in case of an error.\n\t5.\tPost-Commit Validation:\n\t•\tVerifies that the parent_id and sort_order changes were successfully saved to the database.\n\t6.\tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:46:29.348853', 'updated_at': '2025-02-06T21:59:21.617065'}, {'id': 131, 'name': 'Step 5: Update utils.py', 'description': 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nChanges to Make:\n\t1.\tEnhance Task Filtering:\n\t•\tEnsure the filters handle parent-child relationships explicitly.\n\t•\tAdd options to include or exclude subtasks in queries.\n\t2.\tUtility Function for Debugging Parent-Child Relationships:\n\t•\tProvide a function to generate a map or list of parent-child relationships for debugging purposes.\n\t3.\tValidation Functions:\n\t•\tAdd a utility function to validate parent-child relationships and ensure no circular dependencies.\n\nUpdated utils.py Code:\n```\nimport logging\nfrom sqlalchemy import func\nfrom sqlalchemy.orm import joinedload\nfrom app.extensions.db import db\nfrom app.tasks.models import Task\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\n\nclass TaskService:\n    @staticmethod\n    def filter_tasks(filters=None, include_subtasks=True, page=None, per_page=None):\n        """\n        Dynamically filters tasks with an option to include or exclude subtasks.\n\n        Args:\n            filters (dict): Filtering criteria.\n            include_subtasks (bool): Whether to include subtasks in the query.\n            page (int, optional): Page number for pagination.\n            per_page (int, optional): Items per page for pagination.\n\n        Returns:\n            Query or Pagination: A SQLAlchemy query object or paginated results.\n        """\n        query = Task.query.options(\n            db.joinedload(Task.project).joinedload(Project.contributors),\n            db.joinedload(Task.contributor),\n            db.joinedload(Task.children),\n        ).order_by(Task.sort_order)\n\n        if filters:\n            logger.debug(f"Applying filters: {filters}")\n\n            # Apply standard filters\n            if "is_archived" in filters:\n                query = query.filter(Task.is_archived == filters["is_archived"])\n            if "project_id" in filters:\n                query = query.filter(Task.project_id == filters["project_id"])\n            if "task_type" in filters:\n                if isinstance(filters["task_type"], list):\n                    query = query.filter(Task.task_type.in_(filters["task_type"]))\n                else:\n                    query = query.filter(Task.task_type == filters["task_type"])\n            if "completion_status" in filters:\n                completion_map = {"completed": True, "in_progress": False}\n                if filters["completion_status"] in completion_map:\n                    query = query.filter(Task.completed == completion_map[filters["completion_status"]])\n\n            # Optionally exclude subtasks\n            if not include_subtasks:\n                query = query.filter(Task.task_type != "Subtask")\n\n        logger.debug(f"Generated query: {query}")\n\n        # Pagination\n        if page and per_page:\n            return query.paginate(page=page, per_page=per_page, error_out=False)\n        return query\n\n    @staticmethod\n    def debug_parent_child_relationships(project_id=None):\n        """\n        Generates a debug map of parent-child relationships for all tasks.\n\n        Args:\n            project_id (int, optional): Restrict to tasks from a specific project.\n\n        Returns:\n            dict: A dictionary mapping parent IDs to their child task IDs.\n        """\n        query = Task.query\n        if project_id:\n            query = query.filter(Task.project_id == project_id)\n\n        tasks = query.options(\n            db.load_only(Task.id, Task.parent_id)\n        ).all()\n\n        relationship_map = {}\n        for task in tasks:\n            if task.parent_id not in relationship_map:\n                relationship_map[task.parent_id] = []\n            relationship_map[task.parent_id].append(task.id)\n\n        logger.debug(f"Parent-Child Relationship Map: {relationship_map}")\n        return relationship_map\n\n    @staticmethod\n    def validate_parent_child_relationships():\n        """\n        Validates all parent-child relationships in the database to ensure they conform to hierarchy rules.\n\n        Raises:\n            ValueError: If invalid relationships are detected.\n        """\n        tasks = Task.query.options(db.joinedload(Task.parent)).all()\n\n        for task in tasks:\n            if task.parent_id:\n                parent_task = task.parent\n                if not parent_task:\n                    raise ValueError(f"Task {task.id} has an invalid parent ID {task.parent_id}.")\n\n                # Validate hierarchy rules\n                if task.task_type == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError(f"User Story {task.id} must have an Epic as its parent.")\n                if task.task_type == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError(f"Subtask {task.id} must have a User Story as its parent.")\n\n        logger.info("All parent-child relationships are valid.")\n\n    @staticmethod\n    def get_all_task_ids_with_parents():\n        """\n        Returns a flat list of tasks with their parent IDs for debugging.\n\n        Returns:\n            list: A list of tuples (task_id, parent_id).\n        """\n        tasks = Task.query.with_entities(Task.id, Task.parent_id).all()\n        logger.debug(f"Task IDs with Parent IDs: {tasks}")\n        return tasks\n```\n\n\nExplanation of Changes:\n\t1.\tfilter_tasks Enhancements:\n\t•\tAdded include_subtasks parameter to optionally exclude subtasks from the query.\n\t2.\tdebug_parent_child_relationships:\n\t•\tCreates a parent-child relationship map for debugging purposes.\n\t3.\tvalidate_parent_child_relationships:\n\t•\tIterates through all tasks to validate parent-child hierarchy and ensures no invalid relationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.091824', 'updated_at': '2025-01-16T19:22:36.236691'}, {'id': 135, 'name': 'Step 3: Update list.html', 'description': 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already includes everything needed. No required changes.\n\nHere´s the relevant section of list.html:\n\n```\n<tr id="task-{{ task.id }}"\n                class="task-row {% if task.task_type == \'Subtask\' %}subtask-row{% elif task.task_type == \'User Story\' %}user-story-row{% elif task.task_type == \'Epic\' %}epic-row{% endif %}"\n                style="background-color: \n                {% if task.task_type == \'Subtask\' %}\n                    rgba(200, 230, 255, 0.5); /* Light blue for Subtask */\n                {% elif task.task_type == \'User Story\' %}\n                    rgba(255, 255, 200, 0.5); /* Light yellow for User Story */\n                {% elif task.task_type == \'Epic\' %}\n                    rgba(255, 200, 200, 0.5); /* Light red for Epic */\n                {% else %}\n                    rgba(240, 240, 240, 1); /* Default light gray */\n                {% endif %};"\n                data-task-id="{{ task.id }}"\n                data-parent-id="{{ task.parent_id or \'\' }}"\n                data-level="{{ depth }}">\n                <td><input type="checkbox" name="batch_update" value="{{ task.id }}"></td>\n                <td>\n                    {% if tasks|selectattr("parent_id", "equalto", task.id)|list %}\n                    <button class="btn btn-sm toggle-details" data-task-id="{{ task.id }}" aria-label="Toggle details for task {{ task.name }}">\n                        <i class="bi bi-chevron-right"></i>\n                    </button>\n                    {% endif %}\n                </td>\n                <td class="fw-medium fs-6 \n                {% if task.task_type == \'Epic\' %}\n                    epic-cell\n                {% elif task.task_type == \'User Story\' %}\n                    user-story-cell\n                {% elif task.task_type == \'Subtask\' %}\n                    subtask-cell\n                {% endif %}" \n                style="padding-left: {{ depth|default(0) * 20 }}px; position: relative;">\n                <span class="bi fs-6\n                {% if task.task_type == \'Epic\' %}\n                    bi-circle-fill\n                {% elif task.task_type == \'User Story\' %}\n                    bi-circle-half\n                {% elif task.task_type == \'Subtask\' %}\n                    bi-circle\n                {% endif %}">\n                </span>\n                {{ task.name }}\n                <small class="text-muted fw-light">\n                    (Parent-ID: {{ task.parent_id or \'None\' }})\n                </small>\n                <!-- Open Link -->\n                <a href="#" class="task-open-link" data-task-id="{{ task.id }}">\n                    <i class="bi bi-arrows-angle-expand" style="font-size: 0.8rem; color: white;"></i>\n                    Open\n                </a>\n            </td>\n                <td class="fw-light fs-6">\n                    <small class>\n                    LAC-{{ task.id }}\n                    </small>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light text-bg-secondary">\n                        {{ task.project if task.project else "Unknown Project" }}\n                    </span>\n                </td>\n                <td class="fs-6" data-contributor-column>{{ task.assigned_to if task.assigned_to else "Unassigned" }}</td>\n                <td class="fs-6">{{ task.story_points }}</td>\n                <td class="fs-6">\n                    <span class="badge rounded-pill fw-light text-bg-light">\n                        {{ task.task_type }}\n                    </span>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light {% if task.completed %}text-bg-success{% else %}text-bg-warning{% endif %}">\n                        {{ "Completed" if task.completed else "In Progress" }}\n                    </span>\n                </td>\n                <td>\n                    <!-- Delete Icon -->\n                    <button class="btn btn-dark btn-sm delete-task-btn" style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .2rem; --bs-btn-font-size: .75rem;" data-task-id="{{ task.id }}" aria-label="Deletes task {{ task.id }}">\n                        <i class="bi bi-trash"></i>\n                    </button>\n                </td>\n            </tr>\n            {% for child in tasks if child.parent_id == task.id %}\n                {{ render_task(child, tasks, depth + 1) }}\n            {% endfor %}\n            {% endmacro %}\n            \n            <!-- Render top-level tasks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:46:29.349784', 'updated_at': '2025-01-16T19:22:36.238473'}, {'id': 82, 'name': 'Implement Third-Party Authentication', 'description': 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitHub Login involves integrating OAuth 2.0, which both services support. The complexity depends on your app’s existing setup, frameworks, and experience with third-party authentication. Below is a breakdown:\n\nKey Steps for Implementing Google or GitHub Login\n\t1.\tSet Up OAuth Credentials:\n\t•\tRegister your application in the Google Cloud Console or GitHub Developer Settings.\n\t•\tObtain the client ID and client secret.\n\t2.\tInstall Required Libraries:\n\t•\tUse a library for OAuth (e.g., flask-oauthlib, python-social-auth, or authlib).\n\t•\tPopular frameworks like Flask and Django already have robust integrations for OAuth providers.\n\t3.\tBackend Configuration:\n\t•\tImplement an endpoint to handle the OAuth flow (/auth/login/google or /auth/login/github).\n\t•\tConfigure your app to send users to Google or GitHub’s authentication page.\n\t•\tHandle the OAuth callback to exchange the authorization code for an access token.\n\t•\tVerify the token and fetch user information (e.g., email, name).\n\t4.\tLink OAuth to User Registration:\n\t•\tOn successful login, create or retrieve a user in your database.\n\t•\tStore the user’s details like email, OAuth provider ID, and access token.\n\t5.\tFrontend Integration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T12:15:54.291625', 'updated_at': '2025-01-16T19:22:36.239866'}, {'id': 62, 'name': 'Add OAuth integration for Google Login', 'description': 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.241200'}, {'id': 64, 'name': 'Setup project credentials for Google API', 'description': 'Generate client ID and secret from Google API Console for your application.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.242497'}, {'id': 67, 'name': 'Test Google OAuth flow', 'description': 'Verify the OAuth flow using test accounts and check the token exchange.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.243780'}, {'id': 65, 'name': 'Implement backend endpoints for Google OAuth', 'description': 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.244932'}, {'id': 63, 'name': 'Add OAuth integration for GitHub Login', 'description': 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.246358'}, {'id': 68, 'name': 'Register application in GitHub Developer Console', 'description': 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.247746'}, {'id': 69, 'name': 'Handle callback from GitHub', 'description': 'Implement the callback endpoint to process the authorization code from GitHub.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.248912'}, {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}, {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}, {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-02-11T11:36:20.238219'}, {'id': 108, 'name': '1.1.2 Backend API for Registration', 'description': '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:33.067643'}, {'id': 112, 'name': '1.2.2 Frontend Login Page', 'description': 'Develop a frontend form for user login with email and password inputs.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.683644'}, {'id': 109, 'name': '1.1.3 Create Frontend Registration Page', 'description': 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.684988'}, {'id': 110, 'name': '1.1.4 Unit Tests for Registration', 'description': 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.686902'}, {'id': 101, 'name': '1.2 User Login', 'description': 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:25:53.687936'}, {'id': 111, 'name': '1.2.1 Backend API for Login', 'description': 'Create POST /api/login endpoint to handle user login.\njjsjj', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.689096'}, {'id': 113, 'name': '1.2.3 Session Management', 'description': 'Implement secure session handling using cookies or JWT.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:20.968680'}, {'id': 114, 'name': '1.2.4 Unit Tests for Login', 'description': 'Write tests for successful and failed login attempts.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:22:36.265866'}, {'id': 106, 'name': 'Password Reset', 'description': 'As a user, I want to reset my password securely using email.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.267247'}, {'id': 128, 'name': 'Frontend Password Reset Page', 'description': 'Develop a page for users to enter a new password using a valid token.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.269158'}, {'id': 129, 'name': 'Testing Password Reset', 'description': 'Write tests for email delivery, token validation, and password updates.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.270849'}, {'id': 102, 'name': 'Logout', 'description': 'As a user, I want to log out so that I can end my session securely.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.272605'}, {'id': 117, 'name': 'Tests for Logout', 'description': 'Verify session invalidation and redirection to the login page.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.274575'}, {'id': 116, 'name': 'Frontend Logout Button', 'description': 'Add a logout button to the UI and handle session clearing.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-02-09T12:31:17.939784'}, {'id': 115, 'name': 'Backend API for Logout', 'description': 'Create POST /api/logout endpoint to invalidate user sessions.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.277547'}, {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}, {'id': 45, 'name': 'Display Default Value in Dropdown', 'description': 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.280493'}, {'id': 50, 'name': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'In Progress', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:22.274304'}, {'id': 51, 'name': 'Set Default Value', 'description': 'Set the default value in the dropdown based on the retrieved data.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 45, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 1, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.283309'}, {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882'}, {'id': 54, 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 46, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:29.251047'}, {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:26:23.067490'}, {'id': 56, 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:16.233517'}, {'id': 55, 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:08.099271'}, {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:59.651639'}, {'id': 57, 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:51.310240'}, {'id': 58, 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:43.569501'}, {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:36.133259'}, {'id': 59, 'name': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:15.491910'}, {'id': 60, 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 49, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:28.367797'}, {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-11T08:25:07.992524'}, {'id': 52, 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 41, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:01.469601'}, {'id': 53, 'name': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:24:54.245010'}, {'id': 42, 'name': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:47.274896'}, {'id': 43, 'name': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:33.908549'}, {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-02-11T08:24:26.494016'}, {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-02-11T08:24:21.069473'}, {'id': 90, 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:13.204884'}, {'id': 88, 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:05.873554'}, {'id': 89, 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:23:58.436495'}, {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-02-11T08:23:51.269557'}, {'id': 93, 'name': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:42.771565'}, {'id': 91, 'name': 'Update database schema for task ownership', 'description': 'Add a column or relationship to assign a single owner per task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:33.670381'}, {'id': 92, 'name': 'Develop backend API for assigning task owner', 'description': 'Create endpoints to assign or update the owner of a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T09:19:44.027744'}, {'id': 87, 'name': 'Create and customize contributor roles', 'description': 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:43.600461', 'updated_at': '2025-02-11T08:23:23.402442'}, {'id': 96, 'name': 'Allow admin users to create and customize contributor roles via frontend', 'description': 'Provide UI functionality for admins to manage contributor roles dynamically.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:23:13.139282'}, {'id': 94, 'name': 'Add database support for contributor roles', 'description': 'Introduce a roles table and link contributors to specific roles for tasks.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:56.181530'}, {'id': 95, 'name': 'Develop backend API for managing contributor roles', 'description': 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:02.276492'}, {'id': 127, 'name': 'Backend API for Password Reset', 'description': 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-02-10T23:59:50.734037'}, {'id': 126, 'name': 'Email Configuration for Password Reset', 'description': 'Configure email service to send password reset links.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.334340'}, {'id': 104, 'name': 'Middleware for Role Enforcement', 'description': 'As a system, I want to enforce role-based access to specific routes.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:23:40.346816'}, {'id': 122, 'name': 'Testing Role Enforcement', 'description': 'Write tests to ensure proper access control based on roles.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.185693'}, {'id': 121, 'name': 'Develop Role Enforcement Middleware', 'description': 'Implement middleware to check user roles for access control.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.187439'}, {'id': 105, 'name': 'Profile Management', 'description': 'As a user, I want to update my profile (username, email, password).', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.339830'}, {'id': 123, 'name': 'Backend API for Profile Management', 'description': 'Create PATCH /api/profile endpoint to update user details.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.678781'}, {'id': 125, 'name': 'Testing Profile Updates', 'description': 'Write tests for profile update functionality.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.680382'}]
2025-02-11 16:40:07,177 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 16:40:07,177 INFO: [cached since 6159s ago] {'param_1': 2}
2025-02-11 16:40:07,178 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 16:40:07,178 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 16:40:07,178 INFO: [cached since 6159s ago] {'param_1': 3}
2025-02-11 16:40:07,179 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 16:40:07,179 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 16:40:07,179 INFO: [cached since 6159s ago] {'param_1': 4}
2025-02-11 16:40:07,179 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 16:40:07,179 DEBUG: Row (4, 'Fredrik')
2025-02-11 16:40:07,180 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 16:40:07,180 INFO: [cached since 6159s ago] {'param_1': 5}
2025-02-11 16:40:07,180 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 16:40:07,182 INFO: ROLLBACK
2025-02-11 16:40:07,186 INFO: 127.0.0.1 - - [11/Feb/2025 16:40:07] "GET /tasks/ HTTP/1.1" 200 -
2025-02-11 16:40:07,237 INFO: 127.0.0.1 - - [11/Feb/2025 16:40:07] "[36mGET /static/js/filters.js HTTP/1.1[0m" 304 -
2025-02-11 16:40:07,251 INFO: 127.0.0.1 - - [11/Feb/2025 16:40:07] "[36mGET /static/custom.css HTTP/1.1[0m" 304 -
2025-02-11 16:40:07,259 INFO: 127.0.0.1 - - [11/Feb/2025 16:40:07] "[36mGET /static/js/tasks_table_interactions.js HTTP/1.1[0m" 304 -
2025-02-11 16:40:07,261 INFO: 127.0.0.1 - - [11/Feb/2025 16:40:07] "[36mGET /static/js/modals.js HTTP/1.1[0m" 304 -
2025-02-11 16:40:07,267 INFO: 127.0.0.1 - - [11/Feb/2025 16:40:07] "[36mGET /static/images/background.svg HTTP/1.1[0m" 304 -
2025-02-11 16:40:07,412 INFO: 127.0.0.1 - - [11/Feb/2025 16:40:07] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-02-11 16:40:24,375 INFO: 127.0.0.1 - - [11/Feb/2025 16:40:24] "[36mGET /static/custom.css HTTP/1.1[0m" 304 -
2025-02-11 16:48:47,592 INFO: Entering list_tasks route...
2025-02-11 16:48:47,594 DEBUG: Filters used: {'is_archived': False}
2025-02-11 16:48:47,596 DEBUG: Applying filters: {'is_archived': False}
2025-02-11 16:48:47,605 DEBUG: Generated query: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name, project_1.id AS project_1_id, project_1.name AS project_1_name, project_1.start_date AS project_1_start_date, project_1.end_date AS project_1_end_date, project_1.scope AS project_1_scope, project_1.completed_story_points AS project_1_completed_story_points, project_1.created_at AS project_1_created_at, project_1.updated_at AS project_1_updated_at, contributor_2.id AS contributor_2_id, contributor_2.name AS contributor_2_name 
FROM task LEFT OUTER JOIN task AS task_1 ON task.id = task_1.parent_id LEFT OUTER JOIN project AS project_1 ON project_1.id = task.project_id LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project_1.id = project_contributor_1.project_id LEFT OUTER JOIN contributor AS contributor_2 ON contributor_2.id = task.contributor_id 
WHERE task.is_archived = false ORDER BY task.sort_order
2025-02-11 16:48:47,606 INFO: BEGIN (implicit)
2025-02-11 16:48:47,607 INFO: SELECT anon_1.task_id AS anon_1_task_id, anon_1.task_name AS anon_1_task_name, anon_1.task_sort_order AS anon_1_task_sort_order, anon_1.task_description AS anon_1_task_description, anon_1.task_task_type AS anon_1_task_task_type, anon_1.task_is_archived AS anon_1_task_is_archived, anon_1.task_completed AS anon_1_task_completed, anon_1.task_status AS anon_1_task_status, anon_1.task_parent_id AS anon_1_task_parent_id, anon_1.task_project_id AS anon_1_task_project_id, anon_1.task_contributor_id AS anon_1_task_contributor_id, anon_1.task_story_points AS anon_1_task_story_points, anon_1.task_created_at AS anon_1_task_created_at, anon_1.task_updated_at AS anon_1_task_updated_at, anon_1.task_completed_date AS anon_1_task_completed_date, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name, project_1.id AS project_1_id, project_1.name AS project_1_name, project_1.start_date AS project_1_start_date, project_1.end_date AS project_1_end_date, project_1.scope AS project_1_scope, project_1.completed_story_points AS project_1_completed_story_points, project_1.created_at AS project_1_created_at, project_1.updated_at AS project_1_updated_at, contributor_2.id AS contributor_2_id, contributor_2.name AS contributor_2_name 
FROM (SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.is_archived = false ORDER BY task.sort_order 
 LIMIT %(param_1)s OFFSET %(param_2)s) AS anon_1 LEFT OUTER JOIN task AS task_1 ON anon_1.task_id = task_1.parent_id LEFT OUTER JOIN project AS project_1 ON project_1.id = anon_1.task_project_id LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project_1.id = project_contributor_1.project_id LEFT OUTER JOIN contributor AS contributor_2 ON contributor_2.id = anon_1.task_contributor_id ORDER BY anon_1.task_sort_order
2025-02-11 16:48:47,607 INFO: [cached since 6680s ago] {'param_1': 110, 'param_2': 0}
2025-02-11 16:48:47,613 DEBUG: Col ('anon_1_task_id', 'anon_1_task_name', 'anon_1_task_sort_order', 'anon_1_task_description', 'anon_1_task_task_type', 'anon_1_task_is_archived', 'anon_1_task_completed', 'anon_1_task_status', 'anon_1_task_parent_id', 'anon_1_task_project_id', 'anon_1_task_contributor_id', 'anon_1_task_story_points', 'anon_1_task_created_at', 'anon_1_task_updated_at', 'anon_1_task_completed_date', 'task_1_id', 'task_1_name', 'task_1_sort_order', 'task_1_description', 'task_1_task_type', 'task_1_is_archived', 'task_1_completed', 'task_1_status', 'task_1_parent_id', 'task_1_project_id', 'task_1_contributor_id', 'task_1_story_points', 'task_1_created_at', 'task_1_updated_at', 'task_1_completed_date', 'contributor_1_id', 'contributor_1_name', 'project_1_id', 'project_1_name', 'project_1_start_date', 'project_1_end_date', 'project_1_scope', 'project_1_completed_story_points', 'project_1_created_at', 'project_1_updated_at', 'contributor_2_id', 'contributor_2_name')
2025-02-11 16:48:47,616 DEBUG: Row (290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,616 DEBUG: Row (298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None, 299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 16:48:47,616 DEBUG: Row (275, 'add sprints, cycles', 0, 'Make naming customizable', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 48, 52, 680022), datetime.datetime(2025, 2, 10, 8, 38, 37, 622196), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,616 DEBUG: Row (276, 'add support for priority', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 49, 26, 189497), datetime.datetime(2025, 2, 10, 8, 28, 47, 447612), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,617 DEBUG: Row (264, 'close all / open all childtasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 25, 20, 101418), datetime.datetime(2025, 2, 10, 8, 47, 14, 915970), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,617 DEBUG: Row (285, 'add text truncation to project names in task list', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 45, 47, 27805), datetime.datetime(2025, 2, 10, 9, 45, 47, 29729), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,617 DEBUG: Row (257, 'Update Task API Integration', 0, "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'Subtask', False, False, 'Not Started', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 22, 55, 49, 566819), datetime.datetime(2025, 2, 5, 22, 18, 17, 807154), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:48:47,617 DEBUG: Row (294, 'issue: task table filters not working', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 19, 21, 22598), datetime.datetime(2025, 2, 10, 10, 19, 21, 24676), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,617 DEBUG: Row (267, 'improvements to toggles and nested tasks', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 29, 12, 464594), datetime.datetime(2025, 2, 10, 8, 47, 24, 581680), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,617 DEBUG: Row (283, 'fix update title', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 58, 769700), datetime.datetime(2025, 2, 10, 8, 46, 47, 282087), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,617 DEBUG: Row (271, 'make sure dynamically added rows has the exact same styling and includes every element', 0, 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 21, 7, 108431), datetime.datetime(2025, 2, 10, 8, 38, 47, 340105), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,617 DEBUG: Row (273, 'disable parent task selector in epics', 0, 'and add text, Epic can´t have parent tasks', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 0, 45, 20, 740910), datetime.datetime(2025, 2, 10, 8, 39, 17, 639890), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,618 DEBUG: Row (269, 'fix styling for sweetalert', 0, '', 'User Story', False, False, 'In Progress', None, 6, None, 0, datetime.datetime(2025, 2, 8, 15, 54, 56, 717846), datetime.datetime(2025, 2, 10, 8, 39, 32, 172437), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,618 DEBUG: Row (286, 'add support for labels/tags', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 46, 23, 985620), datetime.datetime(2025, 2, 10, 9, 46, 23, 987564), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,618 DEBUG: Row (299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 16:48:47,618 DEBUG: Row (266, 'highlight the nested tasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 28, 30, 382949), datetime.datetime(2025, 2, 10, 8, 47, 4, 382929), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,618 DEBUG: Row (279, 'github integration', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 38, 238202), datetime.datetime(2025, 2, 10, 8, 39, 24, 168451), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,618 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '- Summary of the problem and solution\n    \n    **Problem: Parent Task Dropdown Was Not Being Set on Modal Open**\n    \n    The issue was that when ... (2300 characters truncated) ...  UI interactions.\n    \n    **Final Result**\n    \n    ✅ The modal now **correctly loads and pre-selects the parent task** without extra clicks! 🎉🚀', 'Subtask', False, False, 'Completed', None, 6, 5, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 11, 15, 40, 3, 610698), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:48:47,618 DEBUG: Row (278, 'search feature for tasks list', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 3, 369833), datetime.datetime(2025, 2, 10, 8, 39, 4, 5957), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,618 DEBUG: Row (281, 'add high level plan', 0, 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 27, 1, 218606), datetime.datetime(2025, 2, 10, 8, 38, 54, 754760), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,619 DEBUG: Row (287, 'when moving a parent item to another project make sure the subtasks are moved as well', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 48, 31, 986870), datetime.datetime(2025, 2, 10, 9, 48, 31, 988859), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,619 DEBUG: Row (272, 'implement a markdown text editor like notion', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 28, 18, 300231), datetime.datetime(2025, 2, 10, 8, 28, 39, 669255), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,619 DEBUG: Row (293, 'click on title should copy the task title and id to clipboard', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 16, 33, 508209), datetime.datetime(2025, 2, 10, 10, 16, 33, 510414), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,620 DEBUG: Row (277, 'custom task workflow statuses', 0, 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- ... (780 characters truncated) ...  tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 16, 3, 352588), datetime.datetime(2025, 2, 10, 8, 38, 28, 123328), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,620 DEBUG: Row (274, 'add support for goals, initiatives, okr´s', 0, 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 46, 27, 204912), datetime.datetime(2025, 2, 10, 8, 28, 17, 663922), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,620 DEBUG: Row (280, 'logging (task and project history)', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 37, 44, 435112), datetime.datetime(2025, 2, 10, 8, 28, 28, 947805), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,620 DEBUG: Row (282, 'implement same task list in projects but filtered on project', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 17, 786154), datetime.datetime(2025, 2, 10, 9, 41, 17, 787861), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,621 DEBUG: Row (296, 'issue: contributor is lost after updating task', 0, '', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 26, 43, 881947), datetime.datetime(2025, 2, 11, 15, 37, 31, 11120), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,621 DEBUG: Row (288, 'when trying to move subtask to another project, make sure a warning is displayed', 0, 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be l ... (312 characters truncated) ... , Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 54, 36, 297869), datetime.datetime(2025, 2, 10, 8, 54, 51, 840686), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,621 DEBUG: Row (284, 'add type "issue/bug"', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 42, 27, 719439), datetime.datetime(2025, 2, 10, 9, 42, 27, 720908), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,621 DEBUG: Row (295, 'issue: drag and drop errors', 0, '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 22, 54, 461413), datetime.datetime(2025, 2, 10, 10, 22, 54, 462542), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,621 DEBUG: Row (297, 'example parent epic', 0, '', 'Epic', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 39, 51, 620509), datetime.datetime(2025, 2, 10, 10, 39, 51, 622712), None, 298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 16:48:47,621 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '- **Summary of problem and solution**\n    \n    The issue was that assigning a contributor to a task via the /tasks/<task_id>/assign_contributor API ... (2227 characters truncated) ... Outcome**\n    \n    🚀 The issue was resolved, and contributors can now be assigned successfully to tasks without triggering a CSRF validation error.', 'User Story', False, False, 'Completed', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 11, 15, 38, 50, 779710), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,621 DEBUG: Row (265, 'smooth transition for toggles', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 27, 23, 422612), datetime.datetime(2025, 2, 10, 8, 46, 55, 831743), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,622 DEBUG: Row (270, 'the newest task', 0, '', 'Subtask', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 0, 7, 34, 368035), datetime.datetime(2025, 2, 10, 1, 7, 34, 372478), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 16:48:47,622 DEBUG: Row (291, 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 9, 52, 988609), datetime.datetime(2025, 2, 10, 10, 9, 52, 997455), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 16:48:47,622 DEBUG: Row (136, 'Page scroll should stay in position when reloading', 2, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 16, 18, 21, 50, 187247), datetime.datetime(2025, 1, 16, 19, 22, 36, 214901), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,622 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,622 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,623 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,623 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,623 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,624 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,624 DEBUG: Row (133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,625 DEBUG: Row (132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,625 DEBUG: Row (134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,625 DEBUG: Row (131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,626 DEBUG: Row (135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,626 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None, 63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:48:47,626 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None, 62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 16:48:47,626 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,626 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,627 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,627 DEBUG: Row (64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,627 DEBUG: Row (67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,627 DEBUG: Row (65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,627 DEBUG: Row (63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,627 DEBUG: Row (63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,627 DEBUG: Row (68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 16:48:47,628 DEBUG: Row (69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
