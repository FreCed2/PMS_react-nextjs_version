2025-02-11 12:32:05,789 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 121, 'Develop Role Enforcement Middleware', 72, 'Implement middleware to check user roles for access control.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 187439), None)
2025-02-11 12:32:05,791 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 123, 'Backend API for Profile Management', 74, 'Create PATCH /api/profile endpoint to update user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 678781), None)
2025-02-11 12:32:05,792 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 125, 'Testing Profile Updates', 75, 'Write tests for profile update functionality.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 680382), None)
2025-02-11 12:32:05,792 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None)
2025-02-11 12:32:05,792 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None)
2025-02-11 12:32:05,792 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 24, 54, 245010), None)
2025-02-11 12:32:05,792 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 136, 'Page scroll should stay in position when reloading', 2, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 16, 18, 21, 50, 187247), datetime.datetime(2025, 1, 16, 19, 22, 36, 214901), None)
2025-02-11 12:32:05,792 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None)
2025-02-11 12:32:05,792 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None)
2025-02-11 12:32:05,792 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None)
2025-02-11 12:32:05,792 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 105, 'Profile Management', 73, 'As a user, I want to update my profile (username, email, password).', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 339830), None)
2025-02-11 12:32:05,792 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None)
2025-02-11 12:32:05,792 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 124, 'Frontend Profile Page', 76, 'Develop a profile page for editing user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 22, 36, 344057), None)
2025-02-11 12:32:05,792 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None)
2025-02-11 12:32:05,792 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None)
2025-02-11 12:32:05,793 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None)
2025-02-11 12:32:05,793 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None)
2025-02-11 12:32:05,793 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 33, 908549), None)
2025-02-11 12:32:05,793 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, 5, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 47, 274896), None)
2025-02-11 12:32:05,793 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None)
2025-02-11 12:32:05,793 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, 5, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 11, 8, 25, 7, 992524), None)
2025-02-11 12:32:05,793 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 103, 'Role Assignment', 77, 'As an administrator, I want to assign roles to users so that I can control access to certain features.', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 345302), None)
2025-02-11 12:32:05,793 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 120, 'Testing Role Assignment', 78, 'Write tests to validate role changes and restrictions.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 58, 383687), datetime.datetime(2025, 1, 16, 19, 22, 36, 347418), None)
2025-02-11 12:32:05,793 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 119, 'Backend API for Role Assignment', 79, 'Create POST /api/assign-role endpoint to manage user roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 40, 58, 383687), datetime.datetime(2025, 1, 16, 19, 22, 36, 348594), None)
2025-02-11 12:32:05,793 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 66, 'Setup OAuth scopes for Google API', 81, 'Determine the required OAuth scopes for your application and add them to the configuration.\nedit', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 350872), None)
2025-02-11 12:32:05,794 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 98, 'Introduce Role-Based Access Control', 82, 'PRD: Define roles and permissions to restrict access. Roles include admin, developer, and viewer. Implement middleware for access control checks.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 54, 9, 204981), datetime.datetime(2025, 1, 16, 19, 22, 36, 352296), None)
2025-02-11 12:32:05,794 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 44, 'Test Performance with 500 Tasks', 85, 'Ensure dropdown performance remains smooth with 500 tasks.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 1, 16, 19, 22, 36, 356013), None)
2025-02-11 12:32:05,794 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 83, 'Notifications', 83, 'Implement sending notifications to selected people triggered by events.\nCustomizing messages:\nPossibility to adjust how detailed the information sh ... (659 characters truncated) ... e message system.\n\nRead more: https://www.notion.so/lacunamedia/Create-and-send-messages-triggered-by-events-174979257fc08022b18bc76d3b28a4b3?pvs=4', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 7, 16, 10, 54, 30609), datetime.datetime(2025, 2, 5, 19, 51, 35, 872202), None)
2025-02-11 12:32:05,794 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 118, 'Database Changes for Role Assignment', 80, 'Add a role column to the users table.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 58, 383687), datetime.datetime(2025, 2, 5, 19, 51, 51, 407486), None)
2025-02-11 12:32:05,794 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 99, 'Enhance User Account Management', 84, 'PRD: Provide additional account management features for users and admins. Includes profile management, password reset functionality, and audit logging.', 'Epic', False, False, 'Not Started', None, 6, 5, 13, datetime.datetime(2025, 1, 7, 19, 54, 20, 692949), datetime.datetime(2025, 2, 5, 19, 57, 16, 985727), None)
2025-02-11 12:32:05,794 DEBUG: Row (2, 'Project Beta', datetime.date(2024, 2, 1), datetime.date(2024, 11, 30), None, 10, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)
2025-02-11 12:32:05,794 DEBUG: Row (5, 'Project Delta', datetime.date(2025, 1, 4), datetime.date(2025, 3, 8), None, 0, datetime.datetime(2025, 1, 3, 8, 16, 18, 658051), datetime.datetime(2025, 1, 3, 8, 16, 18, 658058), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)
2025-02-11 12:32:05,794 DEBUG: Row (4, 'Project Theta', datetime.date(2024, 12, 11), datetime.date(2024, 12, 27), None, 0, datetime.datetime(2024, 12, 12, 19, 26, 42, 642098), datetime.datetime(2024, 12, 12, 19, 26, 42, 642102), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)
2025-02-11 12:32:05,794 DEBUG: Row (3, 'Project Gamma', datetime.date(2024, 3, 1), datetime.date(2024, 10, 31), None, 20, datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)
2025-02-11 12:32:05,800 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,800 INFO: [generated in 0.00018s] {'coalesce_2': 0, 'project_id_1': 6}
2025-02-11 12:32:05,802 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,802 DEBUG: Row (439,)
2025-02-11 12:32:05,803 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:32:05,803 INFO: [generated in 0.00011s] {'coalesce_2': 0, 'project_id_1': 6}
2025-02-11 12:32:05,805 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,805 DEBUG: Row (0,)
2025-02-11 12:32:05,806 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,806 INFO: [cached since 0.006557s ago] {'coalesce_2': 0, 'project_id_1': 6}
2025-02-11 12:32:05,807 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,807 DEBUG: Row (439,)
2025-02-11 12:32:05,807 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:32:05,807 INFO: [cached since 0.004636s ago] {'coalesce_2': 0, 'project_id_1': 6}
2025-02-11 12:32:05,808 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,808 DEBUG: Row (0,)
2025-02-11 12:32:05,808 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,808 INFO: [cached since 0.00856s ago] {'coalesce_2': 0, 'project_id_1': 7}
2025-02-11 12:32:05,809 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,809 DEBUG: Row (0,)
2025-02-11 12:32:05,809 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:32:05,809 INFO: [cached since 0.006342s ago] {'coalesce_2': 0, 'project_id_1': 7}
2025-02-11 12:32:05,809 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,809 DEBUG: Row (0,)
2025-02-11 12:32:05,810 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,810 INFO: [cached since 0.009993s ago] {'coalesce_2': 0, 'project_id_1': 7}
2025-02-11 12:32:05,810 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,810 DEBUG: Row (0,)
2025-02-11 12:32:05,811 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:32:05,811 INFO: [cached since 0.007986s ago] {'coalesce_2': 0, 'project_id_1': 7}
2025-02-11 12:32:05,811 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,811 DEBUG: Row (0,)
2025-02-11 12:32:05,811 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,811 INFO: [cached since 0.01171s ago] {'coalesce_2': 0, 'project_id_1': 1}
2025-02-11 12:32:05,812 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,812 DEBUG: Row (0,)
2025-02-11 12:32:05,812 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:32:05,812 INFO: [cached since 0.00946s ago] {'coalesce_2': 0, 'project_id_1': 1}
2025-02-11 12:32:05,812 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,812 DEBUG: Row (0,)
2025-02-11 12:32:05,813 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,813 INFO: [cached since 0.01313s ago] {'coalesce_2': 0, 'project_id_1': 1}
2025-02-11 12:32:05,813 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,813 DEBUG: Row (0,)
2025-02-11 12:32:05,813 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:32:05,813 INFO: [cached since 0.01082s ago] {'coalesce_2': 0, 'project_id_1': 1}
2025-02-11 12:32:05,814 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,814 DEBUG: Row (0,)
2025-02-11 12:32:05,814 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,814 INFO: [cached since 0.01449s ago] {'coalesce_2': 0, 'project_id_1': 2}
2025-02-11 12:32:05,815 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,815 DEBUG: Row (0,)
2025-02-11 12:32:05,815 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:32:05,815 INFO: [cached since 0.01237s ago] {'coalesce_2': 0, 'project_id_1': 2}
2025-02-11 12:32:05,815 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,816 DEBUG: Row (0,)
2025-02-11 12:32:05,816 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,816 INFO: [cached since 0.01619s ago] {'coalesce_2': 0, 'project_id_1': 2}
2025-02-11 12:32:05,816 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,816 DEBUG: Row (0,)
2025-02-11 12:32:05,817 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:32:05,817 INFO: [cached since 0.01402s ago] {'coalesce_2': 0, 'project_id_1': 2}
2025-02-11 12:32:05,817 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,817 DEBUG: Row (0,)
2025-02-11 12:32:05,817 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,817 INFO: [cached since 0.01765s ago] {'coalesce_2': 0, 'project_id_1': 5}
2025-02-11 12:32:05,817 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,818 DEBUG: Row (0,)
2025-02-11 12:32:05,818 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:32:05,818 INFO: [cached since 0.01522s ago] {'coalesce_2': 0, 'project_id_1': 5}
2025-02-11 12:32:05,818 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,818 DEBUG: Row (0,)
2025-02-11 12:32:05,818 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,818 INFO: [cached since 0.0189s ago] {'coalesce_2': 0, 'project_id_1': 5}
2025-02-11 12:32:05,819 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,819 DEBUG: Row (0,)
2025-02-11 12:32:05,819 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:32:05,819 INFO: [cached since 0.01657s ago] {'coalesce_2': 0, 'project_id_1': 5}
2025-02-11 12:32:05,820 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,820 DEBUG: Row (0,)
2025-02-11 12:32:05,820 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,820 INFO: [cached since 0.02063s ago] {'coalesce_2': 0, 'project_id_1': 4}
2025-02-11 12:32:05,821 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,821 DEBUG: Row (0,)
2025-02-11 12:32:05,822 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:32:05,822 INFO: [cached since 0.019s ago] {'coalesce_2': 0, 'project_id_1': 4}
2025-02-11 12:32:05,822 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,822 DEBUG: Row (0,)
2025-02-11 12:32:05,822 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,822 INFO: [cached since 0.0229s ago] {'coalesce_2': 0, 'project_id_1': 4}
2025-02-11 12:32:05,823 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,823 DEBUG: Row (0,)
2025-02-11 12:32:05,823 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:32:05,823 INFO: [cached since 0.02052s ago] {'coalesce_2': 0, 'project_id_1': 4}
2025-02-11 12:32:05,823 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,823 DEBUG: Row (0,)
2025-02-11 12:32:05,824 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,824 INFO: [cached since 0.02413s ago] {'coalesce_2': 0, 'project_id_1': 3}
2025-02-11 12:32:05,824 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,824 DEBUG: Row (0,)
2025-02-11 12:32:05,824 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:32:05,824 INFO: [cached since 0.0217s ago] {'coalesce_2': 0, 'project_id_1': 3}
2025-02-11 12:32:05,825 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,825 DEBUG: Row (0,)
2025-02-11 12:32:05,825 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,825 INFO: [cached since 0.02529s ago] {'coalesce_2': 0, 'project_id_1': 3}
2025-02-11 12:32:05,825 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,825 DEBUG: Row (0,)
2025-02-11 12:32:05,825 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:32:05,826 INFO: [cached since 0.02291s ago] {'coalesce_2': 0, 'project_id_1': 3}
2025-02-11 12:32:05,826 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,826 DEBUG: Row (0,)
2025-02-11 12:32:05,827 INFO: SELECT count(*) AS count_1 
FROM (SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor) AS anon_1
2025-02-11 12:32:05,827 INFO: [generated in 0.00009s] {}
2025-02-11 12:32:05,828 DEBUG: Col ('count_1',)
2025-02-11 12:32:05,828 DEBUG: Row (5,)
2025-02-11 12:32:05,829 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project JOIN task ON project.id = task.project_id GROUP BY project.id 
HAVING sum(task.story_points * CAST(task.completed AS INTEGER)) < sum(task.story_points)
2025-02-11 12:32:05,829 INFO: [generated in 0.00012s] {}
2025-02-11 12:32:05,831 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:32:05,831 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:32:05,831 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project JOIN task ON project.id = task.project_id GROUP BY project.id 
HAVING sum(task.story_points * CAST(task.completed AS INTEGER)) >= sum(task.story_points)
2025-02-11 12:32:05,831 INFO: [generated in 0.00011s] {}
2025-02-11 12:32:05,832 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:32:05,833 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259))
2025-02-11 12:32:05,833 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 12:32:05,833 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project LEFT OUTER JOIN task ON project.id = task.project_id GROUP BY project.id 
HAVING sum(task.story_points * CAST(task.completed AS INTEGER)) IS NULL
2025-02-11 12:32:05,833 INFO: [generated in 0.00009s] {}
2025-02-11 12:32:05,834 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:32:05,834 DEBUG: Row (3, 'Project Gamma', datetime.date(2024, 3, 1), datetime.date(2024, 10, 31), None, 20, datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), datetime.datetime(2024, 12, 11, 1, 37, 19, 511738))
2025-02-11 12:32:05,834 DEBUG: Row (5, 'Project Delta', datetime.date(2025, 1, 4), datetime.date(2025, 3, 8), None, 0, datetime.datetime(2025, 1, 3, 8, 16, 18, 658051), datetime.datetime(2025, 1, 3, 8, 16, 18, 658058))
2025-02-11 12:32:05,834 DEBUG: Row (4, 'Project Theta', datetime.date(2024, 12, 11), datetime.date(2024, 12, 27), None, 0, datetime.datetime(2024, 12, 12, 19, 26, 42, 642098), datetime.datetime(2024, 12, 12, 19, 26, 42, 642102))
2025-02-11 12:32:05,834 DEBUG: Row (2, 'Project Beta', datetime.date(2024, 2, 1), datetime.date(2024, 11, 30), None, 10, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 12:32:05,835 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project
2025-02-11 12:32:05,835 INFO: [generated in 0.00007s] {}
2025-02-11 12:32:05,835 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:32:05,835 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 12:32:05,835 DEBUG: Row (2, 'Project Beta', datetime.date(2024, 2, 1), datetime.date(2024, 11, 30), None, 10, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 12:32:05,835 DEBUG: Row (3, 'Project Gamma', datetime.date(2024, 3, 1), datetime.date(2024, 10, 31), None, 20, datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), datetime.datetime(2024, 12, 11, 1, 37, 19, 511738))
2025-02-11 12:32:05,835 DEBUG: Row (4, 'Project Theta', datetime.date(2024, 12, 11), datetime.date(2024, 12, 27), None, 0, datetime.datetime(2024, 12, 12, 19, 26, 42, 642098), datetime.datetime(2024, 12, 12, 19, 26, 42, 642102))
2025-02-11 12:32:05,835 DEBUG: Row (5, 'Project Delta', datetime.date(2025, 1, 4), datetime.date(2025, 3, 8), None, 0, datetime.datetime(2025, 1, 3, 8, 16, 18, 658051), datetime.datetime(2025, 1, 3, 8, 16, 18, 658058))
2025-02-11 12:32:05,835 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259))
2025-02-11 12:32:05,835 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:32:05,836 INFO: SELECT count(*) AS count_1 
FROM (SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor) AS anon_1
2025-02-11 12:32:05,836 INFO: [cached since 0.009035s ago] {}
2025-02-11 12:32:05,836 DEBUG: Col ('count_1',)
2025-02-11 12:32:05,836 DEBUG: Row (5,)
2025-02-11 12:32:05,838 INFO: SELECT count(*) AS count_1 
FROM (SELECT DISTINCT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor JOIN project_contributor ON contributor.id = project_contributor.contributor_id) AS anon_1
2025-02-11 12:32:05,838 INFO: [generated in 0.00031s] {}
2025-02-11 12:32:05,839 DEBUG: Col ('count_1',)
2025-02-11 12:32:05,839 DEBUG: Row (2,)
2025-02-11 12:32:05,840 INFO: SELECT count(*) AS count_1 
FROM (SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor LEFT OUTER JOIN project_contributor ON contributor.id = project_contributor.contributor_id 
WHERE project_contributor.project_id IS NULL) AS anon_1
2025-02-11 12:32:05,840 INFO: [generated in 0.00009s] {}
2025-02-11 12:32:05,840 DEBUG: Col ('count_1',)
2025-02-11 12:32:05,840 DEBUG: Row (3,)
2025-02-11 12:32:05,981 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,981 INFO: [cached since 0.1812s ago] {'coalesce_2': 0, 'project_id_1': 6}
2025-02-11 12:32:05,982 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,983 DEBUG: Row (439,)
2025-02-11 12:32:05,984 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 6, 'total_story_points': 439, 'timestamp': '2025-02-11T11:32:05.984273+00:00'}
2025-02-11 12:32:05,986 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,986 INFO: [cached since 0.1864s ago] {'coalesce_2': 0, 'project_id_1': 7}
2025-02-11 12:32:05,987 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,987 DEBUG: Row (0,)
2025-02-11 12:32:05,987 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 7, 'total_story_points': 0, 'timestamp': '2025-02-11T11:32:05.987726+00:00'}
2025-02-11 12:32:05,988 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,988 INFO: [cached since 0.1889s ago] {'coalesce_2': 0, 'project_id_1': 1}
2025-02-11 12:32:05,989 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,989 DEBUG: Row (0,)
2025-02-11 12:32:05,989 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 1, 'total_story_points': 0, 'timestamp': '2025-02-11T11:32:05.989840+00:00'}
2025-02-11 12:32:05,990 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,990 INFO: [cached since 0.1902s ago] {'coalesce_2': 0, 'project_id_1': 2}
2025-02-11 12:32:05,990 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,991 DEBUG: Row (0,)
2025-02-11 12:32:05,991 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 2, 'total_story_points': 0, 'timestamp': '2025-02-11T11:32:05.991272+00:00'}
2025-02-11 12:32:05,991 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,991 INFO: [cached since 0.1916s ago] {'coalesce_2': 0, 'project_id_1': 5}
2025-02-11 12:32:05,991 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,992 DEBUG: Row (0,)
2025-02-11 12:32:05,992 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 5, 'total_story_points': 0, 'timestamp': '2025-02-11T11:32:05.992156+00:00'}
2025-02-11 12:32:05,992 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,992 INFO: [cached since 0.1924s ago] {'coalesce_2': 0, 'project_id_1': 4}
2025-02-11 12:32:05,992 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,992 DEBUG: Row (0,)
2025-02-11 12:32:05,992 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 4, 'total_story_points': 0, 'timestamp': '2025-02-11T11:32:05.992872+00:00'}
2025-02-11 12:32:05,993 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:05,993 INFO: [cached since 0.1931s ago] {'coalesce_2': 0, 'project_id_1': 3}
2025-02-11 12:32:05,993 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:05,993 DEBUG: Row (0,)
2025-02-11 12:32:05,993 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 3, 'total_story_points': 0, 'timestamp': '2025-02-11T11:32:05.993453+00:00'}
2025-02-11 12:32:05,993 INFO: ROLLBACK
2025-02-11 12:32:05,994 INFO: 127.0.0.1 - - [11/Feb/2025 12:32:05] "GET /dashboard HTTP/1.1" 200 -
2025-02-11 12:32:06,054 INFO: 127.0.0.1 - - [11/Feb/2025 12:32:06] "[36mGET /static/custom.css HTTP/1.1[0m" 304 -
2025-02-11 12:32:06,073 INFO: 127.0.0.1 - - [11/Feb/2025 12:32:06] "[36mGET /static/custom.js HTTP/1.1[0m" 304 -
2025-02-11 12:32:06,077 INFO: 127.0.0.1 - - [11/Feb/2025 12:32:06] "[36mGET /static/images/background.svg HTTP/1.1[0m" 304 -
2025-02-11 12:32:37,952 INFO: BEGIN (implicit)
2025-02-11 12:32:37,955 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.name = %(name_1)s 
 LIMIT %(param_1)s
2025-02-11 12:32:37,956 INFO: [generated in 0.00087s] {'name_1': 'PMS - Backlog', 'param_1': 1}
2025-02-11 12:32:37,958 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:32:37,958 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:32:37,959 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor
2025-02-11 12:32:37,960 INFO: [generated in 0.00032s] {}
2025-02-11 12:32:37,960 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:32:37,961 DEBUG: Row (1, 'Alice')
2025-02-11 12:32:37,961 DEBUG: Row (2, 'Bob')
2025-02-11 12:32:37,961 DEBUG: Row (3, 'Charlie')
2025-02-11 12:32:37,961 DEBUG: Row (4, 'Fredrik')
2025-02-11 12:32:37,961 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 12:32:37,963 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.name = %(name_1)s 
 LIMIT %(param_1)s
2025-02-11 12:32:37,963 INFO: [cached since 0.008403s ago] {'name_1': 'PMS - Backlog', 'param_1': 1}
2025-02-11 12:32:37,965 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:32:37,965 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:32:37,965 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:37,966 INFO: [cached since 32.17s ago] {'coalesce_2': 0, 'project_id_1': 6}
2025-02-11 12:32:37,966 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:37,966 DEBUG: Row (439,)
2025-02-11 12:32:37,967 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 6, 'total_story_points': 439, 'timestamp': '2025-02-11T11:32:37.967003+00:00'}
2025-02-11 12:32:37,968 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE %(param_1)s = task.project_id
2025-02-11 12:32:37,968 INFO: [generated in 0.00017s] {'param_1': 6}
2025-02-11 12:32:37,973 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:32:37,974 DEBUG: Row (59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 15, 491910), None)
2025-02-11 12:32:37,974 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None)
2025-02-11 12:32:37,974 DEBUG: Row (133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None)
2025-02-11 12:32:37,974 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None)
2025-02-11 12:32:37,974 DEBUG: Row (63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None)
2025-02-11 12:32:37,974 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None)
2025-02-11 12:32:37,974 DEBUG: Row (269, 'fix styling for sweetalert', 0, '', 'User Story', False, False, 'In Progress', None, 6, None, 0, datetime.datetime(2025, 2, 8, 15, 54, 56, 717846), datetime.datetime(2025, 2, 10, 8, 39, 32, 172437), None)
2025-02-11 12:32:37,975 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 12:32:37,975 DEBUG: Row (107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 30, 747962), None)
2025-02-11 12:32:37,975 DEBUG: Row (112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None)
2025-02-11 12:32:37,975 DEBUG: Row (60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None)
2025-02-11 12:32:37,975 DEBUG: Row (110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None)
2025-02-11 12:32:37,975 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None)
2025-02-11 12:32:37,975 DEBUG: Row (111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None)
2025-02-11 12:32:37,975 DEBUG: Row (131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None)
2025-02-11 12:32:37,975 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None)
2025-02-11 12:32:37,975 DEBUG: Row (64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None)
2025-02-11 12:32:37,976 DEBUG: Row (67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None)
2025-02-11 12:32:37,976 DEBUG: Row (113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None)
2025-02-11 12:32:37,976 DEBUG: Row (58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None)
2025-02-11 12:32:37,976 DEBUG: Row (57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None)
2025-02-11 12:32:37,976 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None)
2025-02-11 12:32:37,976 DEBUG: Row (56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None)
2025-02-11 12:32:37,976 DEBUG: Row (114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None)
2025-02-11 12:32:37,976 DEBUG: Row (273, 'disable parent task selector in epics', 0, 'and add text, Epic can´t have parent tasks', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 0, 45, 20, 740910), datetime.datetime(2025, 2, 10, 8, 39, 17, 639890), None)
2025-02-11 12:32:37,976 DEBUG: Row (106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None)
2025-02-11 12:32:37,976 DEBUG: Row (132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None)
2025-02-11 12:32:37,977 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None)
2025-02-11 12:32:37,977 DEBUG: Row (65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None)
2025-02-11 12:32:37,977 DEBUG: Row (68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None)
2025-02-11 12:32:37,977 DEBUG: Row (69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None)
2025-02-11 12:32:37,977 DEBUG: Row (108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None)
2025-02-11 12:32:37,977 DEBUG: Row (282, 'implement same task list in projects but filtered on project', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 17, 786154), datetime.datetime(2025, 2, 10, 9, 41, 17, 787861), None)
2025-02-11 12:32:37,977 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None)
2025-02-11 12:32:37,977 DEBUG: Row (250, 'Preserve User Preferences', None, 'Persist the user’s chosen view state between sessions.', 'Subtask', False, False, 'Not Started', 242, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), datetime.datetime(2025, 2, 5, 16, 33, 21, 995140), None)
2025-02-11 12:32:37,977 DEBUG: Row (109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None)
2025-02-11 12:32:37,977 DEBUG: Row (50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 22, 274304), None)
2025-02-11 12:32:37,977 DEBUG: Row (45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None)
2025-02-11 12:32:37,977 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 10, 9, 12, 47, 626993), None)
2025-02-11 12:32:37,978 DEBUG: Row (285, 'add text truncation to project names in task list', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 45, 47, 27805), datetime.datetime(2025, 2, 10, 9, 45, 47, 29729), None)
2025-02-11 12:32:37,978 DEBUG: Row (51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None)
2025-02-11 12:32:37,978 DEBUG: Row (46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None)
2025-02-11 12:32:37,978 DEBUG: Row (295, 'issue: drag and drop errors', 0, '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 22, 54, 461413), datetime.datetime(2025, 2, 10, 10, 22, 54, 462542), None)
2025-02-11 12:32:37,978 DEBUG: Row (244, 'Scroll to Updated Task', None, 'Automatically scroll to the updated task in the list if it’s out of view.', 'Subtask', False, False, 'Completed', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 56, 52, 818501), datetime.datetime(2025, 2, 5, 16, 33, 38, 895813), None)
2025-02-11 12:32:37,978 DEBUG: Row (128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None)
2025-02-11 12:32:37,978 DEBUG: Row (129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None)
2025-02-11 12:32:37,979 DEBUG: Row (55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None)
2025-02-11 12:32:37,979 DEBUG: Row (296, 'issue: contributor is lost after updating task', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 26, 43, 881947), datetime.datetime(2025, 2, 10, 10, 26, 43, 884004), None)
2025-02-11 12:32:37,979 DEBUG: Row (54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None)
2025-02-11 12:32:37,979 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None)
2025-02-11 12:32:37,979 DEBUG: Row (241, 'Provide User Feedback', None, 'As a user, I want to receive immediate feedback after updating a task’s status so that I know the update was successful.', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 55, 19, 826398), datetime.datetime(2025, 2, 5, 12, 55, 19, 826398), None)
2025-02-11 12:32:37,979 DEBUG: Row (242, 'User Control Over Views', None, 'As a user, I want to toggle between hierarchical and flat views so that I can switch sorting preferences based on my workflow.', 'User Story', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 2, 5, 12, 55, 50, 108011), datetime.datetime(2025, 2, 5, 12, 55, 50, 108011), None)
2025-02-11 12:32:37,979 DEBUG: Row (246, 'Toast Notification', None, 'Display a toast notification confirming the task status update.', 'Subtask', False, False, 'Not Started', 241, 6, 5, 2, datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), None)
2025-02-11 12:32:37,979 DEBUG: Row (247, 'Add Temporary Badge', None, 'Add a temporary badge or visual indicator to the updated task.', 'Subtask', False, False, 'Not Started', 241, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), None)
2025-02-11 12:32:37,980 DEBUG: Row (248, 'Implement Toggle Button', None, 'Add a toggle button to switch between hierarchical and flat views.', 'Subtask', False, False, 'Not Started', 242, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), None)
2025-02-11 12:32:37,980 DEBUG: Row (249, 'Define View States', None, 'Clearly label and define the view states for hierarchical and flat sorting.', 'Subtask', False, False, 'Not Started', 242, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), None)
2025-02-11 12:32:37,980 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 10, 10, 11, 12, 274809), None)
2025-02-11 12:32:37,980 DEBUG: Row (290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None)
2025-02-11 12:32:37,980 DEBUG: Row (243, 'Highlight Updated Task', None, 'Highlight the updated task in the UI to provide immediate visual feedback.', 'Subtask', False, False, 'Completed', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 56, 52, 818501), datetime.datetime(2025, 2, 5, 16, 33, 46, 11135), None)
2025-02-11 12:32:37,980 DEBUG: Row (245, 'Apply Dynamic Sorting and Filtering', None, 'Ensure the task list dynamically updates its sorting and filtering after a status change.', 'Subtask', False, False, 'In Progress', 240, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 56, 52, 818501), datetime.datetime(2025, 2, 5, 16, 35, 16, 991226), None)
2025-02-11 12:32:37,980 DEBUG: Row (240, 'Update Task Workflow', None, 'As a user, I want to update the status of a task so that it reflects the changes in the UI dynamically without reloading the page.', 'User Story', False, False, 'In Progress', None, 6, 5, 8, datetime.datetime(2025, 2, 5, 12, 54, 55, 61344), datetime.datetime(2025, 2, 5, 19, 2, 8, 832430), None)
2025-02-11 12:32:37,980 DEBUG: Row (134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None)
2025-02-11 12:32:37,980 DEBUG: Row (294, 'issue: task table filters not working', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 19, 21, 22598), datetime.datetime(2025, 2, 10, 10, 19, 21, 24676), None)
2025-02-11 12:32:37,980 DEBUG: Row (135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None)
2025-02-11 12:32:37,981 DEBUG: Row (102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None)
2025-02-11 12:32:37,981 DEBUG: Row (117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None)
2025-02-11 12:32:37,981 DEBUG: Row (116, 'Frontend Logout Button', 33, 'Add a logout button to the UI and handle session clearing.', 'Subtask', False, False, 'Not Started', None, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 2, 9, 12, 31, 17, 939784), None)
2025-02-11 12:32:37,981 DEBUG: Row (95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None)
2025-02-11 12:32:37,981 DEBUG: Row (115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None)
2025-02-11 12:32:37,981 DEBUG: Row (127, 'Backend API for Password Reset', 68, 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'Subtask', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 2, 10, 23, 59, 50, 734037), None)
2025-02-11 12:32:37,981 DEBUG: Row (126, 'Email Configuration for Password Reset', 69, 'Configure email service to send password reset links.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 334340), None)
2025-02-11 12:32:37,981 DEBUG: Row (94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None)
2025-02-11 12:32:37,981 DEBUG: Row (104, 'Middleware for Role Enforcement', 70, 'As a system, I want to enforce role-based access to specific routes.', 'User Story', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 23, 40, 346816), None)
2025-02-11 12:32:37,981 DEBUG: Row (96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None)
2025-02-11 12:32:37,981 DEBUG: Row (122, 'Testing Role Enforcement', 71, 'Write tests to ensure proper access control based on roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 185693), None)
2025-02-11 12:32:37,982 DEBUG: Row (257, 'Update Task API Integration', 0, "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'Subtask', False, False, 'Not Started', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 22, 55, 49, 566819), datetime.datetime(2025, 2, 5, 22, 18, 17, 807154), None)
2025-02-11 12:32:37,982 DEBUG: Row (121, 'Develop Role Enforcement Middleware', 72, 'Implement middleware to check user roles for access control.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 187439), None)
2025-02-11 12:32:37,982 DEBUG: Row (123, 'Backend API for Profile Management', 74, 'Create PATCH /api/profile endpoint to update user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 678781), None)
2025-02-11 12:32:37,982 DEBUG: Row (125, 'Testing Profile Updates', 75, 'Write tests for profile update functionality.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 680382), None)
2025-02-11 12:32:37,982 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None)
2025-02-11 12:32:37,982 DEBUG: Row (91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None)
2025-02-11 12:32:37,982 DEBUG: Row (53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 24, 54, 245010), None)
2025-02-11 12:32:37,982 DEBUG: Row (136, 'Page scroll should stay in position when reloading', 2, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 16, 18, 21, 50, 187247), datetime.datetime(2025, 1, 16, 19, 22, 36, 214901), None)
2025-02-11 12:32:37,982 DEBUG: Row (93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None)
2025-02-11 12:32:37,982 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None)
2025-02-11 12:32:37,982 DEBUG: Row (89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None)
2025-02-11 12:32:37,982 DEBUG: Row (105, 'Profile Management', 73, 'As a user, I want to update my profile (username, email, password).', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 339830), None)
2025-02-11 12:32:37,983 DEBUG: Row (88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None)
2025-02-11 12:32:37,983 DEBUG: Row (124, 'Frontend Profile Page', 76, 'Develop a profile page for editing user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 22, 36, 344057), None)
2025-02-11 12:32:37,983 DEBUG: Row (92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None)
2025-02-11 12:32:37,983 DEBUG: Row (90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None)
2025-02-11 12:32:37,983 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None)
2025-02-11 12:32:37,983 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None)
2025-02-11 12:32:37,983 DEBUG: Row (43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 33, 908549), None)
2025-02-11 12:32:37,983 DEBUG: Row (42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, 5, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 47, 274896), None)
2025-02-11 12:32:37,983 DEBUG: Row (52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None)
2025-02-11 12:32:37,984 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, 5, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 11, 8, 25, 7, 992524), None)
2025-02-11 12:32:37,984 DEBUG: Row (103, 'Role Assignment', 77, 'As an administrator, I want to assign roles to users so that I can control access to certain features.', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 345302), None)
2025-02-11 12:32:37,984 DEBUG: Row (120, 'Testing Role Assignment', 78, 'Write tests to validate role changes and restrictions.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 58, 383687), datetime.datetime(2025, 1, 16, 19, 22, 36, 347418), None)
2025-02-11 12:32:37,984 DEBUG: Row (119, 'Backend API for Role Assignment', 79, 'Create POST /api/assign-role endpoint to manage user roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 40, 58, 383687), datetime.datetime(2025, 1, 16, 19, 22, 36, 348594), None)
2025-02-11 12:32:37,984 DEBUG: Row (66, 'Setup OAuth scopes for Google API', 81, 'Determine the required OAuth scopes for your application and add them to the configuration.\nedit', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 350872), None)
2025-02-11 12:32:37,984 DEBUG: Row (98, 'Introduce Role-Based Access Control', 82, 'PRD: Define roles and permissions to restrict access. Roles include admin, developer, and viewer. Implement middleware for access control checks.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 54, 9, 204981), datetime.datetime(2025, 1, 16, 19, 22, 36, 352296), None)
2025-02-11 12:32:37,984 DEBUG: Row (44, 'Test Performance with 500 Tasks', 85, 'Ensure dropdown performance remains smooth with 500 tasks.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 1, 16, 19, 22, 36, 356013), None)
2025-02-11 12:32:37,984 DEBUG: Row (83, 'Notifications', 83, 'Implement sending notifications to selected people triggered by events.\nCustomizing messages:\nPossibility to adjust how detailed the information sh ... (659 characters truncated) ... e message system.\n\nRead more: https://www.notion.so/lacunamedia/Create-and-send-messages-triggered-by-events-174979257fc08022b18bc76d3b28a4b3?pvs=4', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 7, 16, 10, 54, 30609), datetime.datetime(2025, 2, 5, 19, 51, 35, 872202), None)
2025-02-11 12:32:37,985 DEBUG: Row (118, 'Database Changes for Role Assignment', 80, 'Add a role column to the users table.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 58, 383687), datetime.datetime(2025, 2, 5, 19, 51, 51, 407486), None)
2025-02-11 12:32:37,985 DEBUG: Row (99, 'Enhance User Account Management', 84, 'PRD: Provide additional account management features for users and admins. Includes profile management, password reset functionality, and audit logging.', 'Epic', False, False, 'Not Started', None, 6, 5, 13, datetime.datetime(2025, 1, 7, 19, 54, 20, 692949), datetime.datetime(2025, 2, 5, 19, 57, 16, 985727), None)
2025-02-11 12:32:38,105 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:38,105 INFO: [cached since 32.31s ago] {'coalesce_2': 0, 'project_id_1': 6}
2025-02-11 12:32:38,106 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:38,106 DEBUG: Row (439,)
2025-02-11 12:32:38,106 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 6, 'total_story_points': 439, 'timestamp': '2025-02-11T11:32:38.106412+00:00'}
2025-02-11 12:32:38,106 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:32:38,106 INFO: [cached since 32.31s ago] {'coalesce_2': 0, 'project_id_1': 6}
2025-02-11 12:32:38,107 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:38,107 DEBUG: Row (439,)
2025-02-11 12:32:38,107 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:32:38,107 INFO: [cached since 32.31s ago] {'coalesce_2': 0, 'project_id_1': 6}
2025-02-11 12:32:38,108 DEBUG: Col ('coalesce_1',)
2025-02-11 12:32:38,108 DEBUG: Row (0,)
2025-02-11 12:32:38,108 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Completion Percentage, Data: {'project_id': 6, 'completion_percentage': 0.0}
2025-02-11 12:32:38,108 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 12:32:38,108 INFO: [generated in 0.00006s] {'param_1': 6}
2025-02-11 12:32:38,109 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:32:38,109 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 12:32:38,109 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE %(param_1)s = task.contributor_id
2025-02-11 12:32:38,109 INFO: [generated in 0.00007s] {'param_1': 5}
2025-02-11 12:32:38,110 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:32:38,110 DEBUG: Row (59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 15, 491910), None)
2025-02-11 12:32:38,110 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 12:32:38,110 DEBUG: Row (60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None)
2025-02-11 12:32:38,110 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None)
2025-02-11 12:32:38,110 DEBUG: Row (58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None)
2025-02-11 12:32:38,110 DEBUG: Row (57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None)
2025-02-11 12:32:38,110 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None)
2025-02-11 12:32:38,110 DEBUG: Row (56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None)
2025-02-11 12:32:38,110 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None)
2025-02-11 12:32:38,110 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None)
2025-02-11 12:32:38,111 DEBUG: Row (250, 'Preserve User Preferences', None, 'Persist the user’s chosen view state between sessions.', 'Subtask', False, False, 'Not Started', 242, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), datetime.datetime(2025, 2, 5, 16, 33, 21, 995140), None)
2025-02-11 12:32:38,111 DEBUG: Row (50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 22, 274304), None)
2025-02-11 12:32:38,111 DEBUG: Row (244, 'Scroll to Updated Task', None, 'Automatically scroll to the updated task in the list if it’s out of view.', 'Subtask', False, False, 'Completed', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 56, 52, 818501), datetime.datetime(2025, 2, 5, 16, 33, 38, 895813), None)
2025-02-11 12:32:38,111 DEBUG: Row (55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None)
2025-02-11 12:32:38,111 DEBUG: Row (54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None)
2025-02-11 12:32:38,111 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None)
2025-02-11 12:32:38,111 DEBUG: Row (241, 'Provide User Feedback', None, 'As a user, I want to receive immediate feedback after updating a task’s status so that I know the update was successful.', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 55, 19, 826398), datetime.datetime(2025, 2, 5, 12, 55, 19, 826398), None)
2025-02-11 12:32:38,111 DEBUG: Row (242, 'User Control Over Views', None, 'As a user, I want to toggle between hierarchical and flat views so that I can switch sorting preferences based on my workflow.', 'User Story', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 2, 5, 12, 55, 50, 108011), datetime.datetime(2025, 2, 5, 12, 55, 50, 108011), None)
2025-02-11 12:32:38,111 DEBUG: Row (246, 'Toast Notification', None, 'Display a toast notification confirming the task status update.', 'Subtask', False, False, 'Not Started', 241, 6, 5, 2, datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), None)
2025-02-11 12:32:38,111 DEBUG: Row (247, 'Add Temporary Badge', None, 'Add a temporary badge or visual indicator to the updated task.', 'Subtask', False, False, 'Not Started', 241, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), None)
2025-02-11 12:32:38,111 DEBUG: Row (248, 'Implement Toggle Button', None, 'Add a toggle button to switch between hierarchical and flat views.', 'Subtask', False, False, 'Not Started', 242, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), None)
2025-02-11 12:32:38,111 DEBUG: Row (249, 'Define View States', None, 'Clearly label and define the view states for hierarchical and flat sorting.', 'Subtask', False, False, 'Not Started', 242, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), None)
2025-02-11 12:32:38,111 DEBUG: Row (243, 'Highlight Updated Task', None, 'Highlight the updated task in the UI to provide immediate visual feedback.', 'Subtask', False, False, 'Completed', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 56, 52, 818501), datetime.datetime(2025, 2, 5, 16, 33, 46, 11135), None)
2025-02-11 12:32:38,111 DEBUG: Row (245, 'Apply Dynamic Sorting and Filtering', None, 'Ensure the task list dynamically updates its sorting and filtering after a status change.', 'Subtask', False, False, 'In Progress', 240, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 56, 52, 818501), datetime.datetime(2025, 2, 5, 16, 35, 16, 991226), None)
2025-02-11 12:32:38,111 DEBUG: Row (240, 'Update Task Workflow', None, 'As a user, I want to update the status of a task so that it reflects the changes in the UI dynamically without reloading the page.', 'User Story', False, False, 'In Progress', None, 6, 5, 8, datetime.datetime(2025, 2, 5, 12, 54, 55, 61344), datetime.datetime(2025, 2, 5, 19, 2, 8, 832430), None)
2025-02-11 12:32:38,111 DEBUG: Row (95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None)
2025-02-11 12:32:38,111 DEBUG: Row (127, 'Backend API for Password Reset', 68, 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'Subtask', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 2, 10, 23, 59, 50, 734037), None)
2025-02-11 12:32:38,111 DEBUG: Row (126, 'Email Configuration for Password Reset', 69, 'Configure email service to send password reset links.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 334340), None)
2025-02-11 12:32:38,111 DEBUG: Row (94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None)
2025-02-11 12:32:38,111 DEBUG: Row (104, 'Middleware for Role Enforcement', 70, 'As a system, I want to enforce role-based access to specific routes.', 'User Story', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 23, 40, 346816), None)
2025-02-11 12:32:38,111 DEBUG: Row (96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None)
2025-02-11 12:32:38,111 DEBUG: Row (122, 'Testing Role Enforcement', 71, 'Write tests to ensure proper access control based on roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 185693), None)
2025-02-11 12:32:38,111 DEBUG: Row (257, 'Update Task API Integration', 0, "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'Subtask', False, False, 'Not Started', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 22, 55, 49, 566819), datetime.datetime(2025, 2, 5, 22, 18, 17, 807154), None)
2025-02-11 12:32:38,112 DEBUG: Row (121, 'Develop Role Enforcement Middleware', 72, 'Implement middleware to check user roles for access control.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 187439), None)
2025-02-11 12:32:38,112 DEBUG: Row (123, 'Backend API for Profile Management', 74, 'Create PATCH /api/profile endpoint to update user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 678781), None)
2025-02-11 12:32:38,112 DEBUG: Row (125, 'Testing Profile Updates', 75, 'Write tests for profile update functionality.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 680382), None)
2025-02-11 12:32:38,112 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None)
2025-02-11 12:32:38,112 DEBUG: Row (91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None)
2025-02-11 12:32:38,112 DEBUG: Row (53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 24, 54, 245010), None)
2025-02-11 12:32:38,112 DEBUG: Row (93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None)
2025-02-11 12:32:38,112 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None)
2025-02-11 12:32:38,112 DEBUG: Row (89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None)
2025-02-11 12:32:38,112 DEBUG: Row (105, 'Profile Management', 73, 'As a user, I want to update my profile (username, email, password).', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 339830), None)
2025-02-11 12:32:38,112 DEBUG: Row (88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None)
2025-02-11 12:32:38,112 DEBUG: Row (124, 'Frontend Profile Page', 76, 'Develop a profile page for editing user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 22, 36, 344057), None)
2025-02-11 12:32:38,112 DEBUG: Row (92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None)
2025-02-11 12:32:38,112 DEBUG: Row (90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None)
2025-02-11 12:32:38,112 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None)
2025-02-11 12:32:38,112 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None)
2025-02-11 12:32:38,112 DEBUG: Row (43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 33, 908549), None)
2025-02-11 12:32:38,112 DEBUG: Row (42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, 5, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 47, 274896), None)
2025-02-11 12:32:38,112 DEBUG: Row (52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None)
2025-02-11 12:32:38,112 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, 5, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 11, 8, 25, 7, 992524), None)
2025-02-11 12:32:38,112 DEBUG: Row (103, 'Role Assignment', 77, 'As an administrator, I want to assign roles to users so that I can control access to certain features.', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 345302), None)
2025-02-11 12:32:38,112 DEBUG: Row (120, 'Testing Role Assignment', 78, 'Write tests to validate role changes and restrictions.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 58, 383687), datetime.datetime(2025, 1, 16, 19, 22, 36, 347418), None)
2025-02-11 12:32:38,112 DEBUG: Row (119, 'Backend API for Role Assignment', 79, 'Create POST /api/assign-role endpoint to manage user roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 40, 58, 383687), datetime.datetime(2025, 1, 16, 19, 22, 36, 348594), None)
2025-02-11 12:32:38,112 DEBUG: Row (66, 'Setup OAuth scopes for Google API', 81, 'Determine the required OAuth scopes for your application and add them to the configuration.\nedit', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 350872), None)
2025-02-11 12:32:38,112 DEBUG: Row (98, 'Introduce Role-Based Access Control', 82, 'PRD: Define roles and permissions to restrict access. Roles include admin, developer, and viewer. Implement middleware for access control checks.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 54, 9, 204981), datetime.datetime(2025, 1, 16, 19, 22, 36, 352296), None)
2025-02-11 12:32:38,113 DEBUG: Row (44, 'Test Performance with 500 Tasks', 85, 'Ensure dropdown performance remains smooth with 500 tasks.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 1, 16, 19, 22, 36, 356013), None)
2025-02-11 12:32:38,113 DEBUG: Row (83, 'Notifications', 83, 'Implement sending notifications to selected people triggered by events.\nCustomizing messages:\nPossibility to adjust how detailed the information sh ... (659 characters truncated) ... e message system.\n\nRead more: https://www.notion.so/lacunamedia/Create-and-send-messages-triggered-by-events-174979257fc08022b18bc76d3b28a4b3?pvs=4', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 7, 16, 10, 54, 30609), datetime.datetime(2025, 2, 5, 19, 51, 35, 872202), None)
2025-02-11 12:32:38,113 DEBUG: Row (118, 'Database Changes for Role Assignment', 80, 'Add a role column to the users table.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 58, 383687), datetime.datetime(2025, 2, 5, 19, 51, 51, 407486), None)
2025-02-11 12:32:38,113 DEBUG: Row (99, 'Enhance User Account Management', 84, 'PRD: Provide additional account management features for users and admins. Includes profile management, password reset functionality, and audit logging.', 'Epic', False, False, 'Not Started', None, 6, 5, 13, datetime.datetime(2025, 1, 7, 19, 54, 20, 692949), datetime.datetime(2025, 2, 5, 19, 57, 16, 985727), None)
2025-02-11 12:32:38,114 INFO: ROLLBACK
2025-02-11 12:32:38,114 INFO: 127.0.0.1 - - [11/Feb/2025 12:32:38] "GET /project/PMS%20-%20Backlog HTTP/1.1" 200 -
2025-02-11 12:32:38,155 INFO: 127.0.0.1 - - [11/Feb/2025 12:32:38] "[36mGET /static/custom.css HTTP/1.1[0m" 304 -
2025-02-11 12:32:38,158 INFO: 127.0.0.1 - - [11/Feb/2025 12:32:38] "[36mGET /static/custom.js HTTP/1.1[0m" 304 -
2025-02-11 12:32:38,179 INFO: 127.0.0.1 - - [11/Feb/2025 12:32:38] "[36mGET /static/images/background.svg HTTP/1.1[0m" 304 -
2025-02-11 12:34:08,920 INFO: Entering list_tasks route...
2025-02-11 12:34:08,922 DEBUG: Filters used: {'is_archived': False}
2025-02-11 12:34:08,924 DEBUG: Applying filters: {'is_archived': False}
2025-02-11 12:34:08,939 DEBUG: Generated query: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name, project_1.id AS project_1_id, project_1.name AS project_1_name, project_1.start_date AS project_1_start_date, project_1.end_date AS project_1_end_date, project_1.scope AS project_1_scope, project_1.completed_story_points AS project_1_completed_story_points, project_1.created_at AS project_1_created_at, project_1.updated_at AS project_1_updated_at, contributor_2.id AS contributor_2_id, contributor_2.name AS contributor_2_name 
FROM task LEFT OUTER JOIN task AS task_1 ON task.id = task_1.parent_id LEFT OUTER JOIN project AS project_1 ON project_1.id = task.project_id LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project_1.id = project_contributor_1.project_id LEFT OUTER JOIN contributor AS contributor_2 ON contributor_2.id = task.contributor_id 
WHERE task.is_archived = false ORDER BY task.sort_order
2025-02-11 12:34:08,940 INFO: BEGIN (implicit)
2025-02-11 12:34:08,942 INFO: SELECT anon_1.task_id AS anon_1_task_id, anon_1.task_name AS anon_1_task_name, anon_1.task_sort_order AS anon_1_task_sort_order, anon_1.task_description AS anon_1_task_description, anon_1.task_task_type AS anon_1_task_task_type, anon_1.task_is_archived AS anon_1_task_is_archived, anon_1.task_completed AS anon_1_task_completed, anon_1.task_status AS anon_1_task_status, anon_1.task_parent_id AS anon_1_task_parent_id, anon_1.task_project_id AS anon_1_task_project_id, anon_1.task_contributor_id AS anon_1_task_contributor_id, anon_1.task_story_points AS anon_1_task_story_points, anon_1.task_created_at AS anon_1_task_created_at, anon_1.task_updated_at AS anon_1_task_updated_at, anon_1.task_completed_date AS anon_1_task_completed_date, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name, project_1.id AS project_1_id, project_1.name AS project_1_name, project_1.start_date AS project_1_start_date, project_1.end_date AS project_1_end_date, project_1.scope AS project_1_scope, project_1.completed_story_points AS project_1_completed_story_points, project_1.created_at AS project_1_created_at, project_1.updated_at AS project_1_updated_at, contributor_2.id AS contributor_2_id, contributor_2.name AS contributor_2_name 
FROM (SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.is_archived = false ORDER BY task.sort_order 
 LIMIT %(param_1)s OFFSET %(param_2)s) AS anon_1 LEFT OUTER JOIN task AS task_1 ON anon_1.task_id = task_1.parent_id LEFT OUTER JOIN project AS project_1 ON project_1.id = anon_1.task_project_id LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project_1.id = project_contributor_1.project_id LEFT OUTER JOIN contributor AS contributor_2 ON contributor_2.id = anon_1.task_contributor_id ORDER BY anon_1.task_sort_order
2025-02-11 12:34:08,942 INFO: [cached since 2516s ago] {'param_1': 110, 'param_2': 0}
2025-02-11 12:34:08,951 DEBUG: Col ('anon_1_task_id', 'anon_1_task_name', 'anon_1_task_sort_order', 'anon_1_task_description', 'anon_1_task_task_type', 'anon_1_task_is_archived', 'anon_1_task_completed', 'anon_1_task_status', 'anon_1_task_parent_id', 'anon_1_task_project_id', 'anon_1_task_contributor_id', 'anon_1_task_story_points', 'anon_1_task_created_at', 'anon_1_task_updated_at', 'anon_1_task_completed_date', 'task_1_id', 'task_1_name', 'task_1_sort_order', 'task_1_description', 'task_1_task_type', 'task_1_is_archived', 'task_1_completed', 'task_1_status', 'task_1_parent_id', 'task_1_project_id', 'task_1_contributor_id', 'task_1_story_points', 'task_1_created_at', 'task_1_updated_at', 'task_1_completed_date', 'contributor_1_id', 'contributor_1_name', 'project_1_id', 'project_1_name', 'project_1_start_date', 'project_1_end_date', 'project_1_scope', 'project_1_completed_story_points', 'project_1_created_at', 'project_1_updated_at', 'contributor_2_id', 'contributor_2_name')
2025-02-11 12:34:08,953 DEBUG: Row (290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,954 DEBUG: Row (298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None, 299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 12:34:08,954 DEBUG: Row (275, 'add sprints, cycles', 0, 'Make naming customizable', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 48, 52, 680022), datetime.datetime(2025, 2, 10, 8, 38, 37, 622196), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,955 DEBUG: Row (276, 'add support for priority', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 49, 26, 189497), datetime.datetime(2025, 2, 10, 8, 28, 47, 447612), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,955 DEBUG: Row (264, 'close all / open all childtasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 25, 20, 101418), datetime.datetime(2025, 2, 10, 8, 47, 14, 915970), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,955 DEBUG: Row (285, 'add text truncation to project names in task list', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 45, 47, 27805), datetime.datetime(2025, 2, 10, 9, 45, 47, 29729), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,955 DEBUG: Row (257, 'Update Task API Integration', 0, "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'Subtask', False, False, 'Not Started', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 22, 55, 49, 566819), datetime.datetime(2025, 2, 5, 22, 18, 17, 807154), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,955 DEBUG: Row (294, 'issue: task table filters not working', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 19, 21, 22598), datetime.datetime(2025, 2, 10, 10, 19, 21, 24676), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,955 DEBUG: Row (267, 'improvements to toggles and nested tasks', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 29, 12, 464594), datetime.datetime(2025, 2, 10, 8, 47, 24, 581680), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,955 DEBUG: Row (271, 'make sure dynamically added rows has the exact same styling and includes every element', 0, 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 21, 7, 108431), datetime.datetime(2025, 2, 10, 8, 38, 47, 340105), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,956 DEBUG: Row (283, 'fix update title', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 58, 769700), datetime.datetime(2025, 2, 10, 8, 46, 47, 282087), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,956 DEBUG: Row (273, 'disable parent task selector in epics', 0, 'and add text, Epic can´t have parent tasks', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 0, 45, 20, 740910), datetime.datetime(2025, 2, 10, 8, 39, 17, 639890), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,956 DEBUG: Row (269, 'fix styling for sweetalert', 0, '', 'User Story', False, False, 'In Progress', None, 6, None, 0, datetime.datetime(2025, 2, 8, 15, 54, 56, 717846), datetime.datetime(2025, 2, 10, 8, 39, 32, 172437), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,956 DEBUG: Row (286, 'add support for labels/tags', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 46, 23, 985620), datetime.datetime(2025, 2, 10, 9, 46, 23, 987564), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,956 DEBUG: Row (299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 12:34:08,957 DEBUG: Row (266, 'highlight the nested tasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 28, 30, 382949), datetime.datetime(2025, 2, 10, 8, 47, 4, 382929), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,957 DEBUG: Row (279, 'github integration', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 38, 238202), datetime.datetime(2025, 2, 10, 8, 39, 24, 168451), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,957 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 10, 9, 12, 47, 626993), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,957 DEBUG: Row (278, 'search feature for tasks list', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 3, 369833), datetime.datetime(2025, 2, 10, 8, 39, 4, 5957), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,957 DEBUG: Row (281, 'add high level plan', 0, 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 27, 1, 218606), datetime.datetime(2025, 2, 10, 8, 38, 54, 754760), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,958 DEBUG: Row (287, 'when moving a parent item to another project make sure the subtasks are moved as well', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 48, 31, 986870), datetime.datetime(2025, 2, 10, 9, 48, 31, 988859), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,958 DEBUG: Row (272, 'implement a markdown text editor like notion', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 28, 18, 300231), datetime.datetime(2025, 2, 10, 8, 28, 39, 669255), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,958 DEBUG: Row (293, 'click on title should copy the task title and id to clipboard', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 16, 33, 508209), datetime.datetime(2025, 2, 10, 10, 16, 33, 510414), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,958 DEBUG: Row (277, 'custom task workflow statuses', 0, 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- ... (780 characters truncated) ...  tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 16, 3, 352588), datetime.datetime(2025, 2, 10, 8, 38, 28, 123328), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,958 DEBUG: Row (274, 'add support for goals, initiatives, okr´s', 0, 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 46, 27, 204912), datetime.datetime(2025, 2, 10, 8, 28, 17, 663922), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,958 DEBUG: Row (280, 'logging (task and project history)', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 37, 44, 435112), datetime.datetime(2025, 2, 10, 8, 28, 28, 947805), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,958 DEBUG: Row (282, 'implement same task list in projects but filtered on project', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 17, 786154), datetime.datetime(2025, 2, 10, 9, 41, 17, 787861), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,958 DEBUG: Row (296, 'issue: contributor is lost after updating task', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 26, 43, 881947), datetime.datetime(2025, 2, 10, 10, 26, 43, 884004), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,959 DEBUG: Row (288, 'when trying to move subtask to another project, make sure a warning is displayed', 0, 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be l ... (312 characters truncated) ... , Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 54, 36, 297869), datetime.datetime(2025, 2, 10, 8, 54, 51, 840686), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,959 DEBUG: Row (284, 'add type "issue/bug"', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 42, 27, 719439), datetime.datetime(2025, 2, 10, 9, 42, 27, 720908), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,959 DEBUG: Row (295, 'issue: drag and drop errors', 0, '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 22, 54, 461413), datetime.datetime(2025, 2, 10, 10, 22, 54, 462542), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,959 DEBUG: Row (297, 'example parent epic', 0, '', 'Epic', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 39, 51, 620509), datetime.datetime(2025, 2, 10, 10, 39, 51, 622712), None, 298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 12:34:08,959 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 10, 10, 11, 12, 274809), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,959 DEBUG: Row (265, 'smooth transition for toggles', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 27, 23, 422612), datetime.datetime(2025, 2, 10, 8, 46, 55, 831743), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,959 DEBUG: Row (270, 'the newest task', 0, '', 'Subtask', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 0, 7, 34, 368035), datetime.datetime(2025, 2, 10, 1, 7, 34, 372478), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 12:34:08,959 DEBUG: Row (291, 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 9, 52, 988609), datetime.datetime(2025, 2, 10, 10, 9, 52, 997455), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:34:08,959 DEBUG: Row (136, 'Page scroll should stay in position when reloading', 2, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 16, 18, 21, 50, 187247), datetime.datetime(2025, 1, 16, 19, 22, 36, 214901), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,960 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,960 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,960 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,961 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,961 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,962 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,962 DEBUG: Row (133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,963 DEBUG: Row (132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,963 DEBUG: Row (134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,963 DEBUG: Row (131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,964 DEBUG: Row (135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,964 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None, 63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,964 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None, 62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,965 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,965 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,965 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,965 DEBUG: Row (64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,965 DEBUG: Row (67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,965 DEBUG: Row (65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,965 DEBUG: Row (63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,965 DEBUG: Row (63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,966 DEBUG: Row (68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,966 DEBUG: Row (69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,966 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,966 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,966 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,967 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,967 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,967 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 30, 747962), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,968 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,968 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,968 DEBUG: Row (107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 30, 747962), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,968 DEBUG: Row (108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,969 DEBUG: Row (112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,969 DEBUG: Row (109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,969 DEBUG: Row (110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,970 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,970 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,970 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,970 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,970 DEBUG: Row (111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,970 DEBUG: Row (113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,970 DEBUG: Row (114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,971 DEBUG: Row (106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,971 DEBUG: Row (106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,971 DEBUG: Row (128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,971 DEBUG: Row (129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,971 DEBUG: Row (102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,972 DEBUG: Row (102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,972 DEBUG: Row (117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,972 DEBUG: Row (116, 'Frontend Logout Button', 33, 'Add a logout button to the UI and handle session clearing.', 'Subtask', False, False, 'Not Started', None, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 2, 9, 12, 31, 17, 939784), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,973 DEBUG: Row (115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,973 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,973 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,973 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,973 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,973 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,973 DEBUG: Row (45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None, 51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,974 DEBUG: Row (50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 22, 274304), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,974 DEBUG: Row (51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,974 DEBUG: Row (46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None, 54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:34:08,974 DEBUG: Row (54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,974 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None, 56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,974 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None, 55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,974 DEBUG: Row (56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,974 DEBUG: Row (55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,974 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None, 58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,975 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None, 57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,975 DEBUG: Row (57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,975 DEBUG: Row (58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,975 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None, 60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,975 DEBUG: Row (59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 15, 491910), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,975 DEBUG: Row (60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,975 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, 5, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 11, 8, 25, 7, 992524), None, 52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,975 DEBUG: Row (52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,975 DEBUG: Row (53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 24, 54, 245010), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,975 DEBUG: Row (42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, 5, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 47, 274896), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,976 DEBUG: Row (43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 33, 908549), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,976 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,976 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,976 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,977 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,977 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,977 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,977 DEBUG: Row (90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,978 DEBUG: Row (88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,978 DEBUG: Row (89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,978 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,978 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,978 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,978 DEBUG: Row (93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,978 DEBUG: Row (91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,978 DEBUG: Row (92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,978 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,979 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,979 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,979 DEBUG: Row (96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,979 DEBUG: Row (94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,979 DEBUG: Row (95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,979 DEBUG: Row (127, 'Backend API for Password Reset', 68, 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'Subtask', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 2, 10, 23, 59, 50, 734037), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,979 DEBUG: Row (126, 'Email Configuration for Password Reset', 69, 'Configure email service to send password reset links.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 334340), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,979 DEBUG: Row (104, 'Middleware for Role Enforcement', 70, 'As a system, I want to enforce role-based access to specific routes.', 'User Story', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 23, 40, 346816), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,979 DEBUG: Row (122, 'Testing Role Enforcement', 71, 'Write tests to ensure proper access control based on roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 185693), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,980 DEBUG: Row (121, 'Develop Role Enforcement Middleware', 72, 'Implement middleware to check user roles for access control.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 187439), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,980 DEBUG: Row (105, 'Profile Management', 73, 'As a user, I want to update my profile (username, email, password).', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 339830), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,980 DEBUG: Row (123, 'Backend API for Profile Management', 74, 'Create PATCH /api/profile endpoint to update user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 678781), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,980 DEBUG: Row (125, 'Testing Profile Updates', 75, 'Write tests for profile update functionality.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 680382), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:34:08,985 INFO: SELECT count(*) AS count_1 
FROM (SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.is_archived = false) AS anon_1
2025-02-11 12:34:08,985 INFO: [cached since 2517s ago] {}
2025-02-11 12:34:08,986 DEBUG: Col ('count_1',)
2025-02-11 12:34:08,986 DEBUG: Row (131,)
2025-02-11 12:34:08,988 INFO: SELECT DISTINCT task.task_type AS task_task_type 
FROM task
2025-02-11 12:34:08,988 INFO: [cached since 2517s ago] {}
2025-02-11 12:34:08,988 DEBUG: Col ('task_task_type',)
2025-02-11 12:34:08,988 DEBUG: Row ('Epic',)
2025-02-11 12:34:08,989 DEBUG: Row ('Subtask',)
2025-02-11 12:34:08,989 DEBUG: Row ('User Story',)
2025-02-11 12:34:08,989 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project
2025-02-11 12:34:08,989 INFO: [cached since 2517s ago] {}
2025-02-11 12:34:08,989 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:34:08,989 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 12:34:08,989 DEBUG: Row (2, 'Project Beta', datetime.date(2024, 2, 1), datetime.date(2024, 11, 30), None, 10, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 12:34:08,990 DEBUG: Row (3, 'Project Gamma', datetime.date(2024, 3, 1), datetime.date(2024, 10, 31), None, 20, datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), datetime.datetime(2024, 12, 11, 1, 37, 19, 511738))
2025-02-11 12:34:08,990 DEBUG: Row (4, 'Project Theta', datetime.date(2024, 12, 11), datetime.date(2024, 12, 27), None, 0, datetime.datetime(2024, 12, 12, 19, 26, 42, 642098), datetime.datetime(2024, 12, 12, 19, 26, 42, 642102))
2025-02-11 12:34:08,990 DEBUG: Row (5, 'Project Delta', datetime.date(2025, 1, 4), datetime.date(2025, 3, 8), None, 0, datetime.datetime(2025, 1, 3, 8, 16, 18, 658051), datetime.datetime(2025, 1, 3, 8, 16, 18, 658058))
2025-02-11 12:34:08,990 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259))
2025-02-11 12:34:08,990 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:34:08,991 DEBUG: Tasks passed to template: [{'id': 290, 'name': 'issue: error when changing task type and', 'description': 'issue: error when changing task type and parent task before saving', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:00:03.417734', 'updated_at': '2025-02-10T09:15:09.284969'}, {'id': 298, 'name': 'example user story with parent epic 297', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 297, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:41:01.907455', 'updated_at': '2025-02-10T14:59:04.142570'}, {'id': 275, 'name': 'add sprints, cycles', 'description': 'Make naming customizable', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:48:52.680022', 'updated_at': '2025-02-10T08:38:37.622196'}, {'id': 276, 'name': 'add support for priority', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:49:26.189497', 'updated_at': '2025-02-10T08:28:47.447612'}, {'id': 264, 'name': 'close all / open all childtasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:25:20.101418', 'updated_at': '2025-02-10T08:47:14.915970'}, {'id': 285, 'name': 'add text truncation to project names in task list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:45:47.027805', 'updated_at': '2025-02-10T09:45:47.029729'}, {'id': 257, 'name': 'Update Task API Integration', 'description': "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 240, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-02-05T22:55:49.566819', 'updated_at': '2025-02-05T22:18:17.807154'}, {'id': 294, 'name': 'issue: task table filters not working', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:19:21.022598', 'updated_at': '2025-02-10T10:19:21.024676'}, {'id': 267, 'name': 'improvements to toggles and nested tasks', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:29:12.464594', 'updated_at': '2025-02-10T08:47:24.581680'}, {'id': 271, 'name': 'make sure dynamically added rows has the exact same styling and includes every element', 'description': 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:21:07.108431', 'updated_at': '2025-02-10T08:38:47.340105'}, {'id': 283, 'name': 'fix update title', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:58.769700', 'updated_at': '2025-02-10T08:46:47.282087'}, {'id': 273, 'name': 'disable parent task selector in epics', 'description': 'and add text, Epic can´t have parent tasks', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:45:20.740910', 'updated_at': '2025-02-10T08:39:17.639890'}, {'id': 269, 'name': 'fix styling for sweetalert', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'In Progress', 'created_at': '2025-02-08T15:54:56.717846', 'updated_at': '2025-02-10T08:39:32.172437'}, {'id': 286, 'name': 'add support for labels/tags', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:46:23.985620', 'updated_at': '2025-02-10T09:46:23.987564'}, {'id': 299, 'name': 'example sub task with parent user story 298', 'description': 'Test update 1\nTest update 2\nTest update 3', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 298, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:42:38.905700', 'updated_at': '2025-02-10T23:23:08.671464'}, {'id': 266, 'name': 'highlight the nested tasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:28:30.382949', 'updated_at': '2025-02-10T08:47:04.382929'}, {'id': 279, 'name': 'github integration', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:38.238202', 'updated_at': '2025-02-10T08:39:24.168451'}, {'id': 289, 'name': 'issue: parent task is lost when updating task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:56:25.273984', 'updated_at': '2025-02-10T09:12:47.626993'}, {'id': 278, 'name': 'search feature for tasks list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:03.369833', 'updated_at': '2025-02-10T08:39:04.005957'}, {'id': 281, 'name': 'add high level plan', 'description': 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:27:01.218606', 'updated_at': '2025-02-10T08:38:54.754760'}, {'id': 287, 'name': 'when moving a parent item to another project make sure the subtasks are moved as well', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:48:31.986870', 'updated_at': '2025-02-10T09:48:31.988859'}, {'id': 272, 'name': 'implement a markdown text editor like notion', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:28:18.300231', 'updated_at': '2025-02-10T08:28:39.669255'}, {'id': 293, 'name': 'click on title should copy the task title and id to clipboard', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:16:33.508209', 'updated_at': '2025-02-10T10:16:33.510414'}, {'id': 277, 'name': 'custom task workflow statuses', 'description': 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- Custom status\n-- Custom status\n- In Progress\n-- Custom status\n-- Custom status\n-- Custom status\n- Completed\n-- Custom status\n-- Custom status\n\n2. How can we track a task through different stages and save the sequence of events or stages the task has gone through?\nI´m thinking it could be good for mapping out processes, identifying bottlenecks and provide valuable insights while improving and streamlining workflows.\n- Stages\n- Contacts taken\n- Respons time \n- Time to action after responses\n- Dependencies\n\nNeed to be able to record every action related to this action.\nCommunication integrations\n- Slack\n- Email\n- Text messages\n- Phonecalls\n- Calendar events, meetings\n- Zoom, Google meet, Teams etc..\n\n\n2. Set custom statuses per project (can use tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:16:03.352588', 'updated_at': '2025-02-10T08:38:28.123328'}, {'id': 274, 'name': 'add support for goals, initiatives, okr´s', 'description': 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:46:27.204912', 'updated_at': '2025-02-10T08:28:17.663922'}, {'id': 280, 'name': 'logging (task and project history)', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:37:44.435112', 'updated_at': '2025-02-10T08:28:28.947805'}, {'id': 282, 'name': 'implement same task list in projects but filtered on project', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:17.786154', 'updated_at': '2025-02-10T09:41:17.787861'}, {'id': 296, 'name': 'issue: contributor is lost after updating task', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:26:43.881947', 'updated_at': '2025-02-10T10:26:43.884004'}, {'id': 288, 'name': 'when trying to move subtask to another project, make sure a warning is displayed', 'description': 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be lost"\nOR\n\nIs it possible, and is it desireable to keep parent child relationships across projects?\nSo that a parent can be in one project but the child tasks can be in different projects?\n\nLets say \nParent epic is \n"Internationalisation"\nChild user stories are\n- Timezones\n- Language\n- Currency\n- Day, Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:54:36.297869', 'updated_at': '2025-02-10T08:54:51.840686'}, {'id': 284, 'name': 'add type "issue/bug"', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:42:27.719439', 'updated_at': '2025-02-10T09:42:27.720908'}, {'id': 295, 'name': 'issue: drag and drop errors', 'description': '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:22:54.461413', 'updated_at': '2025-02-10T10:22:54.462542'}, {'id': 297, 'name': 'example parent epic', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:39:51.620509', 'updated_at': '2025-02-10T10:39:51.622712'}, {'id': 292, 'name': 'issue: assigning contributor does not work', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:11:12.273779', 'updated_at': '2025-02-10T10:11:12.274809'}, {'id': 265, 'name': 'smooth transition for toggles', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:27:23.422612', 'updated_at': '2025-02-10T08:46:55.831743'}, {'id': 270, 'name': 'the newest task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:07:34.368035', 'updated_at': '2025-02-10T01:07:34.372478'}, {'id': 291, 'name': 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:09:52.988609', 'updated_at': '2025-02-10T10:09:52.997455'}, {'id': 136, 'name': 'Page scroll should stay in position when reloading', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-16T18:21:50.187247', 'updated_at': '2025-01-16T19:22:36.214901'}, {'id': 130, 'name': 'Implement the Map of Task Relationships solution for drag-and-drop', 'description': 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.093022', 'updated_at': '2025-01-16T19:22:36.216705'}, {'id': 133, 'name': 'Step 4: Enhance Logging in models.py', 'description': 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nupdating the Task model in the following ways:\n\n1.\tLog Changes to parent_id:\n\t•\tLog changes to parent_id during updates, including old and new values.\n\t2.\tValidate Hierarchy with Logging:\n\t•\tLog detailed messages when validating hierarchy changes, especially for circular dependency checks.\n\nHere’s how the models.py can be updated:\n```\nfrom datetime import datetime, timezone\nfrom sqlalchemy import func, cast, CheckConstraint\nfrom sqlalchemy.orm import validates\nfrom app.extensions.db import db\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\nclass Task(db.Model):\n    __tablename__ = "task"\n    \n    # Other columns...\n\n    parent_id = db.Column(\n        db.Integer, db.ForeignKey("task.id"), index=True, nullable=True\n    )\n\n    # Relationships\n    parent = db.relationship(\n        "Task", remote_side=[id], back_populates="children", lazy="select"\n    )\n    children = db.relationship(\n        "Task", back_populates="parent", lazy="select"\n    )\n\n    \n\n\n    @staticmethod\n    def _validate_no_circular_references(new_parent_id):\n        """\n        Validates that there are no circular references in the task hierarchy.\n\n        Args:\n            new_parent_id (int): The new parent ID to validate.\n\n        Raises:\n            ValueError: If a circular reference is detected.\n        """\n        visited = set()\n        current_parent_id = new_parent_id\n\n        logger.info(f"Validating circular references for parent ID: {new_parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error(\n                    f"Circular reference detected: Parent ID {current_parent_id} already visited."\n                )\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            # Fetch the next parent_id in the hierarchy\n            parent = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not parent:\n                break  # Exit if no parent is found\n            current_parent_id = parent.parent_id\n\n        logger.info("No circular reference detected.")\n\n    @validates(\'parent_id\', \'task_type\')\n    def validate_task_changes(self, key, value):\n        """\n        Validates changes to \'parent_id\' and \'task_type\'.\n        Ensures hierarchy validity and checks for circular references.\n        """\n        logger.debug(f"Validating {key} change for Task {self.id}: {value}")\n\n        if key == \'parent_id\':\n            # Log changes to parent_id\n            if self.id and value != self.parent_id:\n                logger.info(f"Task {self.id}: Updating \'parent_id\' from {self.parent_id} to {value}")\n\n            # Prevent a task from being its own parent\n            if value and value == self.id:\n                logger.error("A task cannot be its own parent.")\n                raise ValueError("A task cannot be its own parent.")\n\n            # Check for circular references\n            if value:\n                Task.check_circular_reference(self.id, value)\n\n        elif key == \'task_type\':\n            # Log changes to task_type\n            if self.id and value != self.task_type:\n                logger.info(f"Task {self.id}: Updating \'task_type\' from {self.task_type} to {value}")\n\n        # Check hierarchy rules without triggering further validation\n        if key in [\'parent_id\', \'task_type\']:\n            self._validate_hierarchy_change(key, value)\n\n        logger.info(f"Validation passed for {key}: {value}")\n        return value\n\n    def _validate_hierarchy_change(self, key, value):\n        """\n        Validates hierarchy rules for the task based on `task_type` and `parent_id`.\n        """\n        if key == \'parent_id\' and value:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=value).first()\n            if not parent_task:\n                raise ValueError("Parent task does not exist.")\n\n            logger.debug(f"Validating hierarchy: Task {self.id}, Parent Type: {parent_task.task_type}")\n            if self.task_type == "User Story" and parent_task.task_type != "Epic":\n                raise ValueError("User Stories must have an Epic as a parent.")\n            if self.task_type == "Subtask" and parent_task.task_type != "User Story":\n                raise ValueError("Subtasks must have a User Story as a parent.")\n\n        elif key == \'task_type\' and self.parent_id:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=self.parent_id).first()\n            if parent_task:\n                logger.debug(f"Validating hierarchy: Task Type: {value}, Parent Type: {parent_task.task_type}")\n                if value == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError("User Stories must have an Epic as a parent.")\n                if value == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError("Subtasks must have a User Story as a parent.")\n\n        logger.info(f"Hierarchy validation passed for Task {self.id if self.id else \'New Task\'}.")\n\n    @staticmethod\n    def check_circular_reference(task_id, parent_id):\n        """\n        Iteratively checks for circular references in the task hierarchy.\n        Prevents stack overflow on deep hierarchies.\n        """\n        visited = set()\n        current_parent_id = parent_id\n\n        logger.info(f"Checking circular reference for Task {task_id} with Parent ID: {parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error("Circular reference detected!")\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            if current_parent_id == task_id:\n                logger.error("A task cannot be its own ancestor.")\n                raise ValueError("A task cannot be its own ancestor.")\n\n            # Fetch the next parent_id in the hierarchy\n            task = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not task:\n                break\n            current_parent_id = task.parent_id\n\n        logger.info("Circular reference check passed.")\n```\nKey Enhancements:\n\t1.\tlog_and_validate_parent_id_change:\n\t•\tLogs the old and new parent_id whenever it changes.\n\t•\tEnsures no circular references are introduced.\n\t2.\t_validate_no_circular_references:\n\t•\tValidates the parent_id field to prevent circular dependencies.\n\t•\tLogs progress and raises detailed errors if violations occur.\n\t3.\tlog_and_validate_task_type_change:\n\t•\tLogs changes to task_type with the old and new values.\n\t•\tRevalidates hierarchy rules when task_type changes.\n\t4.\tDetailed Logging for Circular Reference Validation:\n\t•\t_validate_no_circular_references and check_circular_reference methods log every step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:44:08.340041', 'updated_at': '2025-01-16T19:22:36.219710'}, {'id': 132, 'name': 'Step 1: Update tasks_table_interactions.js', 'description': '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the map for efficient parent-child relationship lookups instead of DOM traversal.\n\n```\nexport const TaskManager = {\n    init: function (csrfToken) {\n        this.csrfToken = csrfToken;\n        this.initTaskParentMap(); // Initialize the map\n        this.initDragAndDrop(); // Initialize drag-and-drop functionality\n    },\n\n    // Initialize a global map for task relationships\n    taskParentMap: new Map(),\n\n    // Build the taskParentMap from the DOM\n    initTaskParentMap: function () {\n        console.log("Initializing Task Parent Map...");\n        const rows = document.querySelectorAll("tr[data-task-id]");\n\n        rows.forEach((row) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = parseInt(row.dataset.parentId, 10) || null;\n            this.taskParentMap.set(taskId, parentId);\n        });\n\n        console.log("Task Parent Map initialized:", Array.from(this.taskParentMap.entries()));\n    },\n\n    // Update the map dynamically after drag-and-drop\n    updateTaskParentMap: function (taskId, parentId) {\n        console.log(`Updating Task Parent Map: Task ${taskId} -> Parent ${parentId}`);\n        this.taskParentMap.set(taskId, parentId);\n    },\n\n    initDragAndDrop: function () {\n        if (window.isDragAndDropInitialized) {\n            console.log("Drag-and-drop is already initialized.");\n            return;\n        }\n\n        console.log("Initializing drag-and-drop within TaskManager...");\n\n        const tableBody = document.querySelector("tbody");\n        if (!tableBody) {\n            console.warn("Task table body not found for drag-and-drop initialization");\n            return;\n        }\n\n        // Initialize Sortable.js for drag-and-drop functionality\n        Sortable.create(tableBody, {\n            handle: ".task-row", // Only draggable via `.task-row` elements\n            animation: 150, // Smooth animation\n            filter: ".task-open-link", // Prevent dragging on task links\n            preventOnFilter: true, // Prevent drag if filtered element is clicked\n            onEnd: async (event) => {\n                try {\n                    console.log("Drag-and-drop operation started...");\n                    const rows = Array.from(event.from.querySelectorAll(".task-row"));\n                    const reorderedTasks = [];\n\n                    rows.forEach((row, index) => {\n                        const taskId = parseInt(row.dataset.taskId, 10);\n                        let parentId = null;\n\n                        // Get the parent ID from the map or fallback to the dataset\n                        if (row.classList.contains("subtask-row")) {\n                            const parentRow = row.previousElementSibling;\n                            parentId = parentRow\n                                ? parseInt(parentRow.dataset.taskId, 10)\n                                : this.taskParentMap.get(taskId) || null;\n                        }\n\n                        // Update the taskParentMap dynamically\n                        this.updateTaskParentMap(taskId, parentId);\n\n                        reorderedTasks.push({\n                            id: taskId,\n                            sort_order: index + 1,\n                            parent_id: parentId,\n                        });\n                    });\n\n                    console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n                    console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n                    // Send the payload to the backend\n                    const response = await fetch("/tasks/reorder_subtasks", {\n                        method: "POST",\n                        headers: {\n                            "Content-Type": "application/json",\n                            "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n                        },\n                        body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n                    });\n\n                    if (!response.ok) {\n                        const errorData = await response.json();\n                        console.error("Error reordering tasks:", errorData);\n                        alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n                        return;\n                    }\n\n                    const data = await response.json();\n                    console.log("Task reordering successful:", data);\n\n                } catch (error) {\n                    console.error("Error during drag-and-drop operation:", error);\n                    alert("An unexpected error occurred while reordering tasks.");\n                }\n            },\n        });\n\n        window.isDragAndDropInitialized = true;\n        console.log("Drag-and-drop initialized successfully.");\n    },\n};\n```\n\nKey Updates:\n\t1.\tPrecomputed Map (taskParentMap):\n\t•\tThe initTaskParentMap function initializes the map by iterating over DOM elements and mapping each task’s ID to its parent ID.\n\t•\tThe updateTaskParentMap dynamically updates the map when tasks are reordered.\n\t2.\tEfficient Parent Lookup:\n\t•\tThe parentId is derived from the precomputed map rather than DOM traversal.\n\t3.\tBackend Payload:\n\t•\tA structured payload (reorderedTasks) is sent to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:44:08.338301', 'updated_at': '2025-02-06T21:59:17.417466'}, {'id': 134, 'name': 'Step 2: Update the Backend in routes.py', 'description': 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\nPlan for step 2:\n\t1.\tVerify the payload structure:\n\t•\tEnsure that the payload includes all necessary fields (id, sort_order, parent_id) for each task.\n\t•\tValidate that the parent-child relationships in the precomputed map (taskParentMap) are reflected correctly in the payload.\n\t2.\tSubmit the payload to the backend:\n\t•\tEnhance the fetch request in the onEnd function of initDragAndDrop to log detailed submission data.\n\t•\tConfirm the payload integrity in the browser console before submission.\n\t3.\tUpdate backend logging:\n\t•\tAdd logging to /reorder_subtasks in routes.py to confirm receipt of the correct payload and process parent-child updates.\n\t•\tLog before and after database updates for better debugging.\n\n-----\nUpdated tasks_table_interactions.js\n\nReplace this section:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    let parentId = null;\n```\nWith:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    const parentId = this.taskParentMap.get(taskId) || null;\n```\nThe this.taskParentMap provides a precomputed and dynamic mapping of taskId to parentId. By using this map, we avoid relying on DOM traversal logic (row.closest or row.previousElementSibling) during drag-and-drop operations, which can sometimes be unreliable or cumbersome.\n\nFull Revised onEnd section:\n```\nonEnd: async (event) => {\n    try {\n        console.log("Drag-and-drop operation started...");\n        const rows = Array.from(event.from.querySelectorAll(".task-row"));\n        const reorderedTasks = [];\n\n        rows.forEach((row, index) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = this.taskParentMap.get(taskId) || null;\n\n            // Update the taskParentMap dynamically\n            this.updateTaskParentMap(taskId, parentId);\n\n            reorderedTasks.push({\n                id: taskId,\n                sort_order: index + 1,\n                parent_id: parentId,\n            });\n        });\n\n        console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n        console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n        // Send the payload to the backend\n        const response = await fetch("/tasks/reorder_subtasks", {\n            method: "POST",\n            headers: {\n                "Content-Type": "application/json",\n                "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n            },\n            body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            console.error("Error reordering tasks:", errorData);\n            alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n            return;\n        }\n\n        const data = await response.json();\n        console.log("Task reordering successful:", data);\n\n    } catch (error) {\n        console.error("Error during drag-and-drop operation:", error);\n        alert("An unexpected error occurred while reordering tasks.");\n    }\n}\n```\n---------------------------------\nEnsure updates include:\n\t•\tBetter Logging: Adding logs for key events such as database changes and validation results.\n\t•\tInput Validation: Ensure all required fields (id, sort_order, parent_id) exist in the payload.\n\t•\tPost-Commit Validation: Confirm database updates after the commit.\n\t•\tImproved Error Handling: Include specific error messages and consistent rollback mechanisms.\n\nBelow is the revised reorder_subtasks route with descriptive comments for each section:\n```\n@bp.route("/reorder_subtasks", methods=["POST"])\ndef reorder_subtasks():\n    """\n    Reorder subtasks globally or reassign them to a different parent.\n\n    Steps:\n    - Parse and validate input from the frontend.\n    - Update parent-child relationships and sort order in the database.\n    - Commit changes and return a success response.\n    - Handle errors gracefully and provide detailed logs for debugging.\n    """\n    logger.info("Entering reorder_subtasks route...")\n    logger.info(f"Received payload for reordering tasks: {request.json}")\n\n    try:\n        # Step 1: Parse input\n        parent_id = request.json.get("parent_id", None)  # Optional parent ID for the tasks being reordered\n        ordered_tasks = request.json.get("ordered_tasks", [])\n\n        logger.debug(f"Parsed parent_id: {parent_id}")\n        logger.debug(f"Parsed ordered_tasks: {ordered_tasks}")\n\n        # Step 2: Validate input\n        if not isinstance(ordered_tasks, list) or not all(\n            isinstance(task, dict) and "id" in task and "sort_order" in task and "parent_id" in task\n            for task in ordered_tasks\n        ):\n            logger.error(f"Invalid input received for ordered_tasks: {ordered_tasks}")\n            return jsonify({\n                "error": "Invalid input format for \'ordered_tasks\'. Each task must include \'id\', \'sort_order\', and \'parent_id\'."\n            }), 400\n\n        # Step 3: Validate parent task (if applicable)\n        if parent_id is not None:\n            parent_task = Task.query.get(parent_id)\n            if not parent_task:\n                logger.error(f"Parent task with ID {parent_id} not found.")\n                return jsonify({"error": f"Parent ID {parent_id} is invalid or does not exist."}), 400\n\n        logger.info("Input validation passed. Proceeding with task updates...")\n\n        # Step 4: Process updates for each subtask\n        updated_subtasks = []  # Keep track of updated subtasks for post-commit validation\n\n        for task_data in ordered_tasks:\n            subtask_id = task_data["id"]\n            sort_order = task_data["sort_order"]\n            new_parent_id = task_data["parent_id"]\n\n            # Fetch the subtask from the database\n            subtask = Task.query.get(subtask_id)\n            if not subtask:\n                logger.warning(f"Subtask ID {subtask_id} not found. Skipping...")\n                continue\n\n            # Log and update parent_id if it changes\n            if new_parent_id is not None and new_parent_id != subtask.parent_id:\n                logger.info(f"Reassigning subtask {subtask.id} to new parent {new_parent_id}")\n                subtask.parent_id = new_parent_id\n\n            # Update sort order\n            subtask.sort_order = sort_order\n            logger.debug(f"Updated subtask {subtask.id}: parent_id={subtask.parent_id}, sort_order={subtask.sort_order}")\n\n            # Add to the list of updated subtasks for validation\n            updated_subtasks.append(subtask)\n\n        # Step 5: Commit changes to the database\n        try:\n            db.session.commit()\n            logger.info(f"Subtasks reordered successfully: {[task[\'id\'] for task in ordered_tasks]}")\n        except Exception as e:\n            logger.error(f"Error committing changes to the database: {str(e)}")\n            db.session.rollback()\n            return jsonify({"error": "Failed to save changes to the database. Please try again."}), 500\n\n        # Step 6: Post-commit validation\n        for subtask in updated_subtasks:\n            logger.debug(f"Post-commit parent_id for task {subtask.id}: {subtask.parent_id}")\n            logger.debug(f"Post-commit sort_order for task {subtask.id}: {subtask.sort_order}")\n\n        # Step 7: Return success response\n        return jsonify({\n            "success": True,\n            "message": "Subtasks reordered successfully.",\n            "updated_subtasks": [subtask.id for subtask in updated_subtasks]\n        }), 200\n\n    except Exception as e:\n        # Step 8: Handle unexpected errors\n        logger.error(f"Error while reordering subtasks: {str(e)}", exc_info=True)\n        db.session.rollback()\n        return jsonify({"error": "An unexpected error occurred while reordering subtasks."}), 500\n```\nKey Changes and Descriptive Comments\n\t1.\tInput Parsing:\n\t•\tExtracts parent_id and ordered_tasks from the request payload.\n\t•\tLogs the parsed values for debugging.\n\t2.\tInput Validation:\n\t•\tEnsures ordered_tasks is a list of dictionaries with the required keys.\n\t•\tValidates parent_id if provided, ensuring the parent task exists in the database.\n\t3.\tUpdate Processing:\n\t•\tIterates through ordered_tasks, updating each task’s parent_id and sort_order.\n\t•\tLogs changes for each task.\n\t4.\tDatabase Commit:\n\t•\tCommits all updates in a single transaction.\n\t•\tLogs success or rolls back changes in case of an error.\n\t5.\tPost-Commit Validation:\n\t•\tVerifies that the parent_id and sort_order changes were successfully saved to the database.\n\t6.\tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:46:29.348853', 'updated_at': '2025-02-06T21:59:21.617065'}, {'id': 131, 'name': 'Step 5: Update utils.py', 'description': 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nChanges to Make:\n\t1.\tEnhance Task Filtering:\n\t•\tEnsure the filters handle parent-child relationships explicitly.\n\t•\tAdd options to include or exclude subtasks in queries.\n\t2.\tUtility Function for Debugging Parent-Child Relationships:\n\t•\tProvide a function to generate a map or list of parent-child relationships for debugging purposes.\n\t3.\tValidation Functions:\n\t•\tAdd a utility function to validate parent-child relationships and ensure no circular dependencies.\n\nUpdated utils.py Code:\n```\nimport logging\nfrom sqlalchemy import func\nfrom sqlalchemy.orm import joinedload\nfrom app.extensions.db import db\nfrom app.tasks.models import Task\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\n\nclass TaskService:\n    @staticmethod\n    def filter_tasks(filters=None, include_subtasks=True, page=None, per_page=None):\n        """\n        Dynamically filters tasks with an option to include or exclude subtasks.\n\n        Args:\n            filters (dict): Filtering criteria.\n            include_subtasks (bool): Whether to include subtasks in the query.\n            page (int, optional): Page number for pagination.\n            per_page (int, optional): Items per page for pagination.\n\n        Returns:\n            Query or Pagination: A SQLAlchemy query object or paginated results.\n        """\n        query = Task.query.options(\n            db.joinedload(Task.project).joinedload(Project.contributors),\n            db.joinedload(Task.contributor),\n            db.joinedload(Task.children),\n        ).order_by(Task.sort_order)\n\n        if filters:\n            logger.debug(f"Applying filters: {filters}")\n\n            # Apply standard filters\n            if "is_archived" in filters:\n                query = query.filter(Task.is_archived == filters["is_archived"])\n            if "project_id" in filters:\n                query = query.filter(Task.project_id == filters["project_id"])\n            if "task_type" in filters:\n                if isinstance(filters["task_type"], list):\n                    query = query.filter(Task.task_type.in_(filters["task_type"]))\n                else:\n                    query = query.filter(Task.task_type == filters["task_type"])\n            if "completion_status" in filters:\n                completion_map = {"completed": True, "in_progress": False}\n                if filters["completion_status"] in completion_map:\n                    query = query.filter(Task.completed == completion_map[filters["completion_status"]])\n\n            # Optionally exclude subtasks\n            if not include_subtasks:\n                query = query.filter(Task.task_type != "Subtask")\n\n        logger.debug(f"Generated query: {query}")\n\n        # Pagination\n        if page and per_page:\n            return query.paginate(page=page, per_page=per_page, error_out=False)\n        return query\n\n    @staticmethod\n    def debug_parent_child_relationships(project_id=None):\n        """\n        Generates a debug map of parent-child relationships for all tasks.\n\n        Args:\n            project_id (int, optional): Restrict to tasks from a specific project.\n\n        Returns:\n            dict: A dictionary mapping parent IDs to their child task IDs.\n        """\n        query = Task.query\n        if project_id:\n            query = query.filter(Task.project_id == project_id)\n\n        tasks = query.options(\n            db.load_only(Task.id, Task.parent_id)\n        ).all()\n\n        relationship_map = {}\n        for task in tasks:\n            if task.parent_id not in relationship_map:\n                relationship_map[task.parent_id] = []\n            relationship_map[task.parent_id].append(task.id)\n\n        logger.debug(f"Parent-Child Relationship Map: {relationship_map}")\n        return relationship_map\n\n    @staticmethod\n    def validate_parent_child_relationships():\n        """\n        Validates all parent-child relationships in the database to ensure they conform to hierarchy rules.\n\n        Raises:\n            ValueError: If invalid relationships are detected.\n        """\n        tasks = Task.query.options(db.joinedload(Task.parent)).all()\n\n        for task in tasks:\n            if task.parent_id:\n                parent_task = task.parent\n                if not parent_task:\n                    raise ValueError(f"Task {task.id} has an invalid parent ID {task.parent_id}.")\n\n                # Validate hierarchy rules\n                if task.task_type == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError(f"User Story {task.id} must have an Epic as its parent.")\n                if task.task_type == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError(f"Subtask {task.id} must have a User Story as its parent.")\n\n        logger.info("All parent-child relationships are valid.")\n\n    @staticmethod\n    def get_all_task_ids_with_parents():\n        """\n        Returns a flat list of tasks with their parent IDs for debugging.\n\n        Returns:\n            list: A list of tuples (task_id, parent_id).\n        """\n        tasks = Task.query.with_entities(Task.id, Task.parent_id).all()\n        logger.debug(f"Task IDs with Parent IDs: {tasks}")\n        return tasks\n```\n\n\nExplanation of Changes:\n\t1.\tfilter_tasks Enhancements:\n\t•\tAdded include_subtasks parameter to optionally exclude subtasks from the query.\n\t2.\tdebug_parent_child_relationships:\n\t•\tCreates a parent-child relationship map for debugging purposes.\n\t3.\tvalidate_parent_child_relationships:\n\t•\tIterates through all tasks to validate parent-child hierarchy and ensures no invalid relationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.091824', 'updated_at': '2025-01-16T19:22:36.236691'}, {'id': 135, 'name': 'Step 3: Update list.html', 'description': 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already includes everything needed. No required changes.\n\nHere´s the relevant section of list.html:\n\n```\n<tr id="task-{{ task.id }}"\n                class="task-row {% if task.task_type == \'Subtask\' %}subtask-row{% elif task.task_type == \'User Story\' %}user-story-row{% elif task.task_type == \'Epic\' %}epic-row{% endif %}"\n                style="background-color: \n                {% if task.task_type == \'Subtask\' %}\n                    rgba(200, 230, 255, 0.5); /* Light blue for Subtask */\n                {% elif task.task_type == \'User Story\' %}\n                    rgba(255, 255, 200, 0.5); /* Light yellow for User Story */\n                {% elif task.task_type == \'Epic\' %}\n                    rgba(255, 200, 200, 0.5); /* Light red for Epic */\n                {% else %}\n                    rgba(240, 240, 240, 1); /* Default light gray */\n                {% endif %};"\n                data-task-id="{{ task.id }}"\n                data-parent-id="{{ task.parent_id or \'\' }}"\n                data-level="{{ depth }}">\n                <td><input type="checkbox" name="batch_update" value="{{ task.id }}"></td>\n                <td>\n                    {% if tasks|selectattr("parent_id", "equalto", task.id)|list %}\n                    <button class="btn btn-sm toggle-details" data-task-id="{{ task.id }}" aria-label="Toggle details for task {{ task.name }}">\n                        <i class="bi bi-chevron-right"></i>\n                    </button>\n                    {% endif %}\n                </td>\n                <td class="fw-medium fs-6 \n                {% if task.task_type == \'Epic\' %}\n                    epic-cell\n                {% elif task.task_type == \'User Story\' %}\n                    user-story-cell\n                {% elif task.task_type == \'Subtask\' %}\n                    subtask-cell\n                {% endif %}" \n                style="padding-left: {{ depth|default(0) * 20 }}px; position: relative;">\n                <span class="bi fs-6\n                {% if task.task_type == \'Epic\' %}\n                    bi-circle-fill\n                {% elif task.task_type == \'User Story\' %}\n                    bi-circle-half\n                {% elif task.task_type == \'Subtask\' %}\n                    bi-circle\n                {% endif %}">\n                </span>\n                {{ task.name }}\n                <small class="text-muted fw-light">\n                    (Parent-ID: {{ task.parent_id or \'None\' }})\n                </small>\n                <!-- Open Link -->\n                <a href="#" class="task-open-link" data-task-id="{{ task.id }}">\n                    <i class="bi bi-arrows-angle-expand" style="font-size: 0.8rem; color: white;"></i>\n                    Open\n                </a>\n            </td>\n                <td class="fw-light fs-6">\n                    <small class>\n                    LAC-{{ task.id }}\n                    </small>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light text-bg-secondary">\n                        {{ task.project if task.project else "Unknown Project" }}\n                    </span>\n                </td>\n                <td class="fs-6" data-contributor-column>{{ task.assigned_to if task.assigned_to else "Unassigned" }}</td>\n                <td class="fs-6">{{ task.story_points }}</td>\n                <td class="fs-6">\n                    <span class="badge rounded-pill fw-light text-bg-light">\n                        {{ task.task_type }}\n                    </span>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light {% if task.completed %}text-bg-success{% else %}text-bg-warning{% endif %}">\n                        {{ "Completed" if task.completed else "In Progress" }}\n                    </span>\n                </td>\n                <td>\n                    <!-- Delete Icon -->\n                    <button class="btn btn-dark btn-sm delete-task-btn" style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .2rem; --bs-btn-font-size: .75rem;" data-task-id="{{ task.id }}" aria-label="Deletes task {{ task.id }}">\n                        <i class="bi bi-trash"></i>\n                    </button>\n                </td>\n            </tr>\n            {% for child in tasks if child.parent_id == task.id %}\n                {{ render_task(child, tasks, depth + 1) }}\n            {% endfor %}\n            {% endmacro %}\n            \n            <!-- Render top-level tasks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:46:29.349784', 'updated_at': '2025-01-16T19:22:36.238473'}, {'id': 82, 'name': 'Implement Third-Party Authentication', 'description': 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitHub Login involves integrating OAuth 2.0, which both services support. The complexity depends on your app’s existing setup, frameworks, and experience with third-party authentication. Below is a breakdown:\n\nKey Steps for Implementing Google or GitHub Login\n\t1.\tSet Up OAuth Credentials:\n\t•\tRegister your application in the Google Cloud Console or GitHub Developer Settings.\n\t•\tObtain the client ID and client secret.\n\t2.\tInstall Required Libraries:\n\t•\tUse a library for OAuth (e.g., flask-oauthlib, python-social-auth, or authlib).\n\t•\tPopular frameworks like Flask and Django already have robust integrations for OAuth providers.\n\t3.\tBackend Configuration:\n\t•\tImplement an endpoint to handle the OAuth flow (/auth/login/google or /auth/login/github).\n\t•\tConfigure your app to send users to Google or GitHub’s authentication page.\n\t•\tHandle the OAuth callback to exchange the authorization code for an access token.\n\t•\tVerify the token and fetch user information (e.g., email, name).\n\t4.\tLink OAuth to User Registration:\n\t•\tOn successful login, create or retrieve a user in your database.\n\t•\tStore the user’s details like email, OAuth provider ID, and access token.\n\t5.\tFrontend Integration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T12:15:54.291625', 'updated_at': '2025-01-16T19:22:36.239866'}, {'id': 62, 'name': 'Add OAuth integration for Google Login', 'description': 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.241200'}, {'id': 64, 'name': 'Setup project credentials for Google API', 'description': 'Generate client ID and secret from Google API Console for your application.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.242497'}, {'id': 67, 'name': 'Test Google OAuth flow', 'description': 'Verify the OAuth flow using test accounts and check the token exchange.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.243780'}, {'id': 65, 'name': 'Implement backend endpoints for Google OAuth', 'description': 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.244932'}, {'id': 63, 'name': 'Add OAuth integration for GitHub Login', 'description': 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.246358'}, {'id': 68, 'name': 'Register application in GitHub Developer Console', 'description': 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.247746'}, {'id': 69, 'name': 'Handle callback from GitHub', 'description': 'Implement the callback endpoint to process the authorization code from GitHub.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.248912'}, {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}, {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}, {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:30.747962'}, {'id': 108, 'name': '1.1.2 Backend API for Registration', 'description': '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:33.067643'}, {'id': 112, 'name': '1.2.2 Frontend Login Page', 'description': 'Develop a frontend form for user login with email and password inputs.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.683644'}, {'id': 109, 'name': '1.1.3 Create Frontend Registration Page', 'description': 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.684988'}, {'id': 110, 'name': '1.1.4 Unit Tests for Registration', 'description': 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.686902'}, {'id': 101, 'name': '1.2 User Login', 'description': 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:25:53.687936'}, {'id': 111, 'name': '1.2.1 Backend API for Login', 'description': 'Create POST /api/login endpoint to handle user login.\njjsjj', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.689096'}, {'id': 113, 'name': '1.2.3 Session Management', 'description': 'Implement secure session handling using cookies or JWT.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:20.968680'}, {'id': 114, 'name': '1.2.4 Unit Tests for Login', 'description': 'Write tests for successful and failed login attempts.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:22:36.265866'}, {'id': 106, 'name': 'Password Reset', 'description': 'As a user, I want to reset my password securely using email.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.267247'}, {'id': 128, 'name': 'Frontend Password Reset Page', 'description': 'Develop a page for users to enter a new password using a valid token.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.269158'}, {'id': 129, 'name': 'Testing Password Reset', 'description': 'Write tests for email delivery, token validation, and password updates.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.270849'}, {'id': 102, 'name': 'Logout', 'description': 'As a user, I want to log out so that I can end my session securely.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.272605'}, {'id': 117, 'name': 'Tests for Logout', 'description': 'Verify session invalidation and redirection to the login page.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.274575'}, {'id': 116, 'name': 'Frontend Logout Button', 'description': 'Add a logout button to the UI and handle session clearing.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-02-09T12:31:17.939784'}, {'id': 115, 'name': 'Backend API for Logout', 'description': 'Create POST /api/logout endpoint to invalidate user sessions.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.277547'}, {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}, {'id': 45, 'name': 'Display Default Value in Dropdown', 'description': 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.280493'}, {'id': 50, 'name': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'In Progress', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:22.274304'}, {'id': 51, 'name': 'Set Default Value', 'description': 'Set the default value in the dropdown based on the retrieved data.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 45, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 1, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.283309'}, {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882'}, {'id': 54, 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 46, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:29.251047'}, {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:26:23.067490'}, {'id': 56, 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:16.233517'}, {'id': 55, 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:08.099271'}, {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:59.651639'}, {'id': 57, 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:51.310240'}, {'id': 58, 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:43.569501'}, {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:36.133259'}, {'id': 59, 'name': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:15.491910'}, {'id': 60, 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 49, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:28.367797'}, {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-11T08:25:07.992524'}, {'id': 52, 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 41, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:01.469601'}, {'id': 53, 'name': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:24:54.245010'}, {'id': 42, 'name': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:47.274896'}, {'id': 43, 'name': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:33.908549'}, {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-02-11T08:24:26.494016'}, {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-02-11T08:24:21.069473'}, {'id': 90, 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:13.204884'}, {'id': 88, 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:05.873554'}, {'id': 89, 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:23:58.436495'}, {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-02-11T08:23:51.269557'}, {'id': 93, 'name': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:42.771565'}, {'id': 91, 'name': 'Update database schema for task ownership', 'description': 'Add a column or relationship to assign a single owner per task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:33.670381'}, {'id': 92, 'name': 'Develop backend API for assigning task owner', 'description': 'Create endpoints to assign or update the owner of a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T09:19:44.027744'}, {'id': 87, 'name': 'Create and customize contributor roles', 'description': 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:43.600461', 'updated_at': '2025-02-11T08:23:23.402442'}, {'id': 96, 'name': 'Allow admin users to create and customize contributor roles via frontend', 'description': 'Provide UI functionality for admins to manage contributor roles dynamically.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:23:13.139282'}, {'id': 94, 'name': 'Add database support for contributor roles', 'description': 'Introduce a roles table and link contributors to specific roles for tasks.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:56.181530'}, {'id': 95, 'name': 'Develop backend API for managing contributor roles', 'description': 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:02.276492'}, {'id': 127, 'name': 'Backend API for Password Reset', 'description': 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-02-10T23:59:50.734037'}, {'id': 126, 'name': 'Email Configuration for Password Reset', 'description': 'Configure email service to send password reset links.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.334340'}, {'id': 104, 'name': 'Middleware for Role Enforcement', 'description': 'As a system, I want to enforce role-based access to specific routes.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:23:40.346816'}, {'id': 122, 'name': 'Testing Role Enforcement', 'description': 'Write tests to ensure proper access control based on roles.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.185693'}, {'id': 121, 'name': 'Develop Role Enforcement Middleware', 'description': 'Implement middleware to check user roles for access control.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.187439'}, {'id': 105, 'name': 'Profile Management', 'description': 'As a user, I want to update my profile (username, email, password).', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.339830'}, {'id': 123, 'name': 'Backend API for Profile Management', 'description': 'Create PATCH /api/profile endpoint to update user details.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.678781'}, {'id': 125, 'name': 'Testing Profile Updates', 'description': 'Write tests for profile update functionality.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.680382'}]
2025-02-11 12:34:08,993 DEBUG: Task types: ['all', 'Epic', 'Subtask', 'User Story']
2025-02-11 12:34:08,993 DEBUG: Projects: [<Project Project Alpha (ID: 1)>, <Project Project Beta (ID: 2)>, <Project Project Gamma (ID: 3)>, <Project Project Theta (ID: 4)>, <Project Project Delta (ID: 5)>, <Project PMS - Feature Requests (ID: 7)>, <Project PMS - Backlog (ID: 6)>]
2025-02-11 12:34:08,994 DEBUG: Tasks response: [{'id': 290, 'name': 'issue: error when changing task type and', 'description': 'issue: error when changing task type and parent task before saving', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:00:03.417734', 'updated_at': '2025-02-10T09:15:09.284969'}, {'id': 298, 'name': 'example user story with parent epic 297', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 297, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:41:01.907455', 'updated_at': '2025-02-10T14:59:04.142570'}, {'id': 275, 'name': 'add sprints, cycles', 'description': 'Make naming customizable', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:48:52.680022', 'updated_at': '2025-02-10T08:38:37.622196'}, {'id': 276, 'name': 'add support for priority', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:49:26.189497', 'updated_at': '2025-02-10T08:28:47.447612'}, {'id': 264, 'name': 'close all / open all childtasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:25:20.101418', 'updated_at': '2025-02-10T08:47:14.915970'}, {'id': 285, 'name': 'add text truncation to project names in task list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:45:47.027805', 'updated_at': '2025-02-10T09:45:47.029729'}, {'id': 257, 'name': 'Update Task API Integration', 'description': "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 240, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-02-05T22:55:49.566819', 'updated_at': '2025-02-05T22:18:17.807154'}, {'id': 294, 'name': 'issue: task table filters not working', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:19:21.022598', 'updated_at': '2025-02-10T10:19:21.024676'}, {'id': 267, 'name': 'improvements to toggles and nested tasks', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:29:12.464594', 'updated_at': '2025-02-10T08:47:24.581680'}, {'id': 271, 'name': 'make sure dynamically added rows has the exact same styling and includes every element', 'description': 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:21:07.108431', 'updated_at': '2025-02-10T08:38:47.340105'}, {'id': 283, 'name': 'fix update title', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:58.769700', 'updated_at': '2025-02-10T08:46:47.282087'}, {'id': 273, 'name': 'disable parent task selector in epics', 'description': 'and add text, Epic can´t have parent tasks', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:45:20.740910', 'updated_at': '2025-02-10T08:39:17.639890'}, {'id': 269, 'name': 'fix styling for sweetalert', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'In Progress', 'created_at': '2025-02-08T15:54:56.717846', 'updated_at': '2025-02-10T08:39:32.172437'}, {'id': 286, 'name': 'add support for labels/tags', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:46:23.985620', 'updated_at': '2025-02-10T09:46:23.987564'}, {'id': 299, 'name': 'example sub task with parent user story 298', 'description': 'Test update 1\nTest update 2\nTest update 3', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 298, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:42:38.905700', 'updated_at': '2025-02-10T23:23:08.671464'}, {'id': 266, 'name': 'highlight the nested tasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:28:30.382949', 'updated_at': '2025-02-10T08:47:04.382929'}, {'id': 279, 'name': 'github integration', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:38.238202', 'updated_at': '2025-02-10T08:39:24.168451'}, {'id': 289, 'name': 'issue: parent task is lost when updating task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:56:25.273984', 'updated_at': '2025-02-10T09:12:47.626993'}, {'id': 278, 'name': 'search feature for tasks list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:03.369833', 'updated_at': '2025-02-10T08:39:04.005957'}, {'id': 281, 'name': 'add high level plan', 'description': 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:27:01.218606', 'updated_at': '2025-02-10T08:38:54.754760'}, {'id': 287, 'name': 'when moving a parent item to another project make sure the subtasks are moved as well', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:48:31.986870', 'updated_at': '2025-02-10T09:48:31.988859'}, {'id': 272, 'name': 'implement a markdown text editor like notion', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:28:18.300231', 'updated_at': '2025-02-10T08:28:39.669255'}, {'id': 293, 'name': 'click on title should copy the task title and id to clipboard', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:16:33.508209', 'updated_at': '2025-02-10T10:16:33.510414'}, {'id': 277, 'name': 'custom task workflow statuses', 'description': 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- Custom status\n-- Custom status\n- In Progress\n-- Custom status\n-- Custom status\n-- Custom status\n- Completed\n-- Custom status\n-- Custom status\n\n2. How can we track a task through different stages and save the sequence of events or stages the task has gone through?\nI´m thinking it could be good for mapping out processes, identifying bottlenecks and provide valuable insights while improving and streamlining workflows.\n- Stages\n- Contacts taken\n- Respons time \n- Time to action after responses\n- Dependencies\n\nNeed to be able to record every action related to this action.\nCommunication integrations\n- Slack\n- Email\n- Text messages\n- Phonecalls\n- Calendar events, meetings\n- Zoom, Google meet, Teams etc..\n\n\n2. Set custom statuses per project (can use tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:16:03.352588', 'updated_at': '2025-02-10T08:38:28.123328'}, {'id': 274, 'name': 'add support for goals, initiatives, okr´s', 'description': 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:46:27.204912', 'updated_at': '2025-02-10T08:28:17.663922'}, {'id': 280, 'name': 'logging (task and project history)', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:37:44.435112', 'updated_at': '2025-02-10T08:28:28.947805'}, {'id': 282, 'name': 'implement same task list in projects but filtered on project', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:17.786154', 'updated_at': '2025-02-10T09:41:17.787861'}, {'id': 296, 'name': 'issue: contributor is lost after updating task', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:26:43.881947', 'updated_at': '2025-02-10T10:26:43.884004'}, {'id': 288, 'name': 'when trying to move subtask to another project, make sure a warning is displayed', 'description': 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be lost"\nOR\n\nIs it possible, and is it desireable to keep parent child relationships across projects?\nSo that a parent can be in one project but the child tasks can be in different projects?\n\nLets say \nParent epic is \n"Internationalisation"\nChild user stories are\n- Timezones\n- Language\n- Currency\n- Day, Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:54:36.297869', 'updated_at': '2025-02-10T08:54:51.840686'}, {'id': 284, 'name': 'add type "issue/bug"', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:42:27.719439', 'updated_at': '2025-02-10T09:42:27.720908'}, {'id': 295, 'name': 'issue: drag and drop errors', 'description': '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:22:54.461413', 'updated_at': '2025-02-10T10:22:54.462542'}, {'id': 297, 'name': 'example parent epic', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:39:51.620509', 'updated_at': '2025-02-10T10:39:51.622712'}, {'id': 292, 'name': 'issue: assigning contributor does not work', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:11:12.273779', 'updated_at': '2025-02-10T10:11:12.274809'}, {'id': 265, 'name': 'smooth transition for toggles', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:27:23.422612', 'updated_at': '2025-02-10T08:46:55.831743'}, {'id': 270, 'name': 'the newest task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:07:34.368035', 'updated_at': '2025-02-10T01:07:34.372478'}, {'id': 291, 'name': 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:09:52.988609', 'updated_at': '2025-02-10T10:09:52.997455'}, {'id': 136, 'name': 'Page scroll should stay in position when reloading', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-16T18:21:50.187247', 'updated_at': '2025-01-16T19:22:36.214901'}, {'id': 130, 'name': 'Implement the Map of Task Relationships solution for drag-and-drop', 'description': 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.093022', 'updated_at': '2025-01-16T19:22:36.216705'}, {'id': 133, 'name': 'Step 4: Enhance Logging in models.py', 'description': 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nupdating the Task model in the following ways:\n\n1.\tLog Changes to parent_id:\n\t•\tLog changes to parent_id during updates, including old and new values.\n\t2.\tValidate Hierarchy with Logging:\n\t•\tLog detailed messages when validating hierarchy changes, especially for circular dependency checks.\n\nHere’s how the models.py can be updated:\n```\nfrom datetime import datetime, timezone\nfrom sqlalchemy import func, cast, CheckConstraint\nfrom sqlalchemy.orm import validates\nfrom app.extensions.db import db\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\nclass Task(db.Model):\n    __tablename__ = "task"\n    \n    # Other columns...\n\n    parent_id = db.Column(\n        db.Integer, db.ForeignKey("task.id"), index=True, nullable=True\n    )\n\n    # Relationships\n    parent = db.relationship(\n        "Task", remote_side=[id], back_populates="children", lazy="select"\n    )\n    children = db.relationship(\n        "Task", back_populates="parent", lazy="select"\n    )\n\n    \n\n\n    @staticmethod\n    def _validate_no_circular_references(new_parent_id):\n        """\n        Validates that there are no circular references in the task hierarchy.\n\n        Args:\n            new_parent_id (int): The new parent ID to validate.\n\n        Raises:\n            ValueError: If a circular reference is detected.\n        """\n        visited = set()\n        current_parent_id = new_parent_id\n\n        logger.info(f"Validating circular references for parent ID: {new_parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error(\n                    f"Circular reference detected: Parent ID {current_parent_id} already visited."\n                )\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            # Fetch the next parent_id in the hierarchy\n            parent = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not parent:\n                break  # Exit if no parent is found\n            current_parent_id = parent.parent_id\n\n        logger.info("No circular reference detected.")\n\n    @validates(\'parent_id\', \'task_type\')\n    def validate_task_changes(self, key, value):\n        """\n        Validates changes to \'parent_id\' and \'task_type\'.\n        Ensures hierarchy validity and checks for circular references.\n        """\n        logger.debug(f"Validating {key} change for Task {self.id}: {value}")\n\n        if key == \'parent_id\':\n            # Log changes to parent_id\n            if self.id and value != self.parent_id:\n                logger.info(f"Task {self.id}: Updating \'parent_id\' from {self.parent_id} to {value}")\n\n            # Prevent a task from being its own parent\n            if value and value == self.id:\n                logger.error("A task cannot be its own parent.")\n                raise ValueError("A task cannot be its own parent.")\n\n            # Check for circular references\n            if value:\n                Task.check_circular_reference(self.id, value)\n\n        elif key == \'task_type\':\n            # Log changes to task_type\n            if self.id and value != self.task_type:\n                logger.info(f"Task {self.id}: Updating \'task_type\' from {self.task_type} to {value}")\n\n        # Check hierarchy rules without triggering further validation\n        if key in [\'parent_id\', \'task_type\']:\n            self._validate_hierarchy_change(key, value)\n\n        logger.info(f"Validation passed for {key}: {value}")\n        return value\n\n    def _validate_hierarchy_change(self, key, value):\n        """\n        Validates hierarchy rules for the task based on `task_type` and `parent_id`.\n        """\n        if key == \'parent_id\' and value:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=value).first()\n            if not parent_task:\n                raise ValueError("Parent task does not exist.")\n\n            logger.debug(f"Validating hierarchy: Task {self.id}, Parent Type: {parent_task.task_type}")\n            if self.task_type == "User Story" and parent_task.task_type != "Epic":\n                raise ValueError("User Stories must have an Epic as a parent.")\n            if self.task_type == "Subtask" and parent_task.task_type != "User Story":\n                raise ValueError("Subtasks must have a User Story as a parent.")\n\n        elif key == \'task_type\' and self.parent_id:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=self.parent_id).first()\n            if parent_task:\n                logger.debug(f"Validating hierarchy: Task Type: {value}, Parent Type: {parent_task.task_type}")\n                if value == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError("User Stories must have an Epic as a parent.")\n                if value == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError("Subtasks must have a User Story as a parent.")\n\n        logger.info(f"Hierarchy validation passed for Task {self.id if self.id else \'New Task\'}.")\n\n    @staticmethod\n    def check_circular_reference(task_id, parent_id):\n        """\n        Iteratively checks for circular references in the task hierarchy.\n        Prevents stack overflow on deep hierarchies.\n        """\n        visited = set()\n        current_parent_id = parent_id\n\n        logger.info(f"Checking circular reference for Task {task_id} with Parent ID: {parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error("Circular reference detected!")\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            if current_parent_id == task_id:\n                logger.error("A task cannot be its own ancestor.")\n                raise ValueError("A task cannot be its own ancestor.")\n\n            # Fetch the next parent_id in the hierarchy\n            task = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not task:\n                break\n            current_parent_id = task.parent_id\n\n        logger.info("Circular reference check passed.")\n```\nKey Enhancements:\n\t1.\tlog_and_validate_parent_id_change:\n\t•\tLogs the old and new parent_id whenever it changes.\n\t•\tEnsures no circular references are introduced.\n\t2.\t_validate_no_circular_references:\n\t•\tValidates the parent_id field to prevent circular dependencies.\n\t•\tLogs progress and raises detailed errors if violations occur.\n\t3.\tlog_and_validate_task_type_change:\n\t•\tLogs changes to task_type with the old and new values.\n\t•\tRevalidates hierarchy rules when task_type changes.\n\t4.\tDetailed Logging for Circular Reference Validation:\n\t•\t_validate_no_circular_references and check_circular_reference methods log every step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:44:08.340041', 'updated_at': '2025-01-16T19:22:36.219710'}, {'id': 132, 'name': 'Step 1: Update tasks_table_interactions.js', 'description': '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the map for efficient parent-child relationship lookups instead of DOM traversal.\n\n```\nexport const TaskManager = {\n    init: function (csrfToken) {\n        this.csrfToken = csrfToken;\n        this.initTaskParentMap(); // Initialize the map\n        this.initDragAndDrop(); // Initialize drag-and-drop functionality\n    },\n\n    // Initialize a global map for task relationships\n    taskParentMap: new Map(),\n\n    // Build the taskParentMap from the DOM\n    initTaskParentMap: function () {\n        console.log("Initializing Task Parent Map...");\n        const rows = document.querySelectorAll("tr[data-task-id]");\n\n        rows.forEach((row) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = parseInt(row.dataset.parentId, 10) || null;\n            this.taskParentMap.set(taskId, parentId);\n        });\n\n        console.log("Task Parent Map initialized:", Array.from(this.taskParentMap.entries()));\n    },\n\n    // Update the map dynamically after drag-and-drop\n    updateTaskParentMap: function (taskId, parentId) {\n        console.log(`Updating Task Parent Map: Task ${taskId} -> Parent ${parentId}`);\n        this.taskParentMap.set(taskId, parentId);\n    },\n\n    initDragAndDrop: function () {\n        if (window.isDragAndDropInitialized) {\n            console.log("Drag-and-drop is already initialized.");\n            return;\n        }\n\n        console.log("Initializing drag-and-drop within TaskManager...");\n\n        const tableBody = document.querySelector("tbody");\n        if (!tableBody) {\n            console.warn("Task table body not found for drag-and-drop initialization");\n            return;\n        }\n\n        // Initialize Sortable.js for drag-and-drop functionality\n        Sortable.create(tableBody, {\n            handle: ".task-row", // Only draggable via `.task-row` elements\n            animation: 150, // Smooth animation\n            filter: ".task-open-link", // Prevent dragging on task links\n            preventOnFilter: true, // Prevent drag if filtered element is clicked\n            onEnd: async (event) => {\n                try {\n                    console.log("Drag-and-drop operation started...");\n                    const rows = Array.from(event.from.querySelectorAll(".task-row"));\n                    const reorderedTasks = [];\n\n                    rows.forEach((row, index) => {\n                        const taskId = parseInt(row.dataset.taskId, 10);\n                        let parentId = null;\n\n                        // Get the parent ID from the map or fallback to the dataset\n                        if (row.classList.contains("subtask-row")) {\n                            const parentRow = row.previousElementSibling;\n                            parentId = parentRow\n                                ? parseInt(parentRow.dataset.taskId, 10)\n                                : this.taskParentMap.get(taskId) || null;\n                        }\n\n                        // Update the taskParentMap dynamically\n                        this.updateTaskParentMap(taskId, parentId);\n\n                        reorderedTasks.push({\n                            id: taskId,\n                            sort_order: index + 1,\n                            parent_id: parentId,\n                        });\n                    });\n\n                    console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n                    console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n                    // Send the payload to the backend\n                    const response = await fetch("/tasks/reorder_subtasks", {\n                        method: "POST",\n                        headers: {\n                            "Content-Type": "application/json",\n                            "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n                        },\n                        body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n                    });\n\n                    if (!response.ok) {\n                        const errorData = await response.json();\n                        console.error("Error reordering tasks:", errorData);\n                        alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n                        return;\n                    }\n\n                    const data = await response.json();\n                    console.log("Task reordering successful:", data);\n\n                } catch (error) {\n                    console.error("Error during drag-and-drop operation:", error);\n                    alert("An unexpected error occurred while reordering tasks.");\n                }\n            },\n        });\n\n        window.isDragAndDropInitialized = true;\n        console.log("Drag-and-drop initialized successfully.");\n    },\n};\n```\n\nKey Updates:\n\t1.\tPrecomputed Map (taskParentMap):\n\t•\tThe initTaskParentMap function initializes the map by iterating over DOM elements and mapping each task’s ID to its parent ID.\n\t•\tThe updateTaskParentMap dynamically updates the map when tasks are reordered.\n\t2.\tEfficient Parent Lookup:\n\t•\tThe parentId is derived from the precomputed map rather than DOM traversal.\n\t3.\tBackend Payload:\n\t•\tA structured payload (reorderedTasks) is sent to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:44:08.338301', 'updated_at': '2025-02-06T21:59:17.417466'}, {'id': 134, 'name': 'Step 2: Update the Backend in routes.py', 'description': 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\nPlan for step 2:\n\t1.\tVerify the payload structure:\n\t•\tEnsure that the payload includes all necessary fields (id, sort_order, parent_id) for each task.\n\t•\tValidate that the parent-child relationships in the precomputed map (taskParentMap) are reflected correctly in the payload.\n\t2.\tSubmit the payload to the backend:\n\t•\tEnhance the fetch request in the onEnd function of initDragAndDrop to log detailed submission data.\n\t•\tConfirm the payload integrity in the browser console before submission.\n\t3.\tUpdate backend logging:\n\t•\tAdd logging to /reorder_subtasks in routes.py to confirm receipt of the correct payload and process parent-child updates.\n\t•\tLog before and after database updates for better debugging.\n\n-----\nUpdated tasks_table_interactions.js\n\nReplace this section:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    let parentId = null;\n```\nWith:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    const parentId = this.taskParentMap.get(taskId) || null;\n```\nThe this.taskParentMap provides a precomputed and dynamic mapping of taskId to parentId. By using this map, we avoid relying on DOM traversal logic (row.closest or row.previousElementSibling) during drag-and-drop operations, which can sometimes be unreliable or cumbersome.\n\nFull Revised onEnd section:\n```\nonEnd: async (event) => {\n    try {\n        console.log("Drag-and-drop operation started...");\n        const rows = Array.from(event.from.querySelectorAll(".task-row"));\n        const reorderedTasks = [];\n\n        rows.forEach((row, index) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = this.taskParentMap.get(taskId) || null;\n\n            // Update the taskParentMap dynamically\n            this.updateTaskParentMap(taskId, parentId);\n\n            reorderedTasks.push({\n                id: taskId,\n                sort_order: index + 1,\n                parent_id: parentId,\n            });\n        });\n\n        console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n        console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n        // Send the payload to the backend\n        const response = await fetch("/tasks/reorder_subtasks", {\n            method: "POST",\n            headers: {\n                "Content-Type": "application/json",\n                "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n            },\n            body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            console.error("Error reordering tasks:", errorData);\n            alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n            return;\n        }\n\n        const data = await response.json();\n        console.log("Task reordering successful:", data);\n\n    } catch (error) {\n        console.error("Error during drag-and-drop operation:", error);\n        alert("An unexpected error occurred while reordering tasks.");\n    }\n}\n```\n---------------------------------\nEnsure updates include:\n\t•\tBetter Logging: Adding logs for key events such as database changes and validation results.\n\t•\tInput Validation: Ensure all required fields (id, sort_order, parent_id) exist in the payload.\n\t•\tPost-Commit Validation: Confirm database updates after the commit.\n\t•\tImproved Error Handling: Include specific error messages and consistent rollback mechanisms.\n\nBelow is the revised reorder_subtasks route with descriptive comments for each section:\n```\n@bp.route("/reorder_subtasks", methods=["POST"])\ndef reorder_subtasks():\n    """\n    Reorder subtasks globally or reassign them to a different parent.\n\n    Steps:\n    - Parse and validate input from the frontend.\n    - Update parent-child relationships and sort order in the database.\n    - Commit changes and return a success response.\n    - Handle errors gracefully and provide detailed logs for debugging.\n    """\n    logger.info("Entering reorder_subtasks route...")\n    logger.info(f"Received payload for reordering tasks: {request.json}")\n\n    try:\n        # Step 1: Parse input\n        parent_id = request.json.get("parent_id", None)  # Optional parent ID for the tasks being reordered\n        ordered_tasks = request.json.get("ordered_tasks", [])\n\n        logger.debug(f"Parsed parent_id: {parent_id}")\n        logger.debug(f"Parsed ordered_tasks: {ordered_tasks}")\n\n        # Step 2: Validate input\n        if not isinstance(ordered_tasks, list) or not all(\n            isinstance(task, dict) and "id" in task and "sort_order" in task and "parent_id" in task\n            for task in ordered_tasks\n        ):\n            logger.error(f"Invalid input received for ordered_tasks: {ordered_tasks}")\n            return jsonify({\n                "error": "Invalid input format for \'ordered_tasks\'. Each task must include \'id\', \'sort_order\', and \'parent_id\'."\n            }), 400\n\n        # Step 3: Validate parent task (if applicable)\n        if parent_id is not None:\n            parent_task = Task.query.get(parent_id)\n            if not parent_task:\n                logger.error(f"Parent task with ID {parent_id} not found.")\n                return jsonify({"error": f"Parent ID {parent_id} is invalid or does not exist."}), 400\n\n        logger.info("Input validation passed. Proceeding with task updates...")\n\n        # Step 4: Process updates for each subtask\n        updated_subtasks = []  # Keep track of updated subtasks for post-commit validation\n\n        for task_data in ordered_tasks:\n            subtask_id = task_data["id"]\n            sort_order = task_data["sort_order"]\n            new_parent_id = task_data["parent_id"]\n\n            # Fetch the subtask from the database\n            subtask = Task.query.get(subtask_id)\n            if not subtask:\n                logger.warning(f"Subtask ID {subtask_id} not found. Skipping...")\n                continue\n\n            # Log and update parent_id if it changes\n            if new_parent_id is not None and new_parent_id != subtask.parent_id:\n                logger.info(f"Reassigning subtask {subtask.id} to new parent {new_parent_id}")\n                subtask.parent_id = new_parent_id\n\n            # Update sort order\n            subtask.sort_order = sort_order\n            logger.debug(f"Updated subtask {subtask.id}: parent_id={subtask.parent_id}, sort_order={subtask.sort_order}")\n\n            # Add to the list of updated subtasks for validation\n            updated_subtasks.append(subtask)\n\n        # Step 5: Commit changes to the database\n        try:\n            db.session.commit()\n            logger.info(f"Subtasks reordered successfully: {[task[\'id\'] for task in ordered_tasks]}")\n        except Exception as e:\n            logger.error(f"Error committing changes to the database: {str(e)}")\n            db.session.rollback()\n            return jsonify({"error": "Failed to save changes to the database. Please try again."}), 500\n\n        # Step 6: Post-commit validation\n        for subtask in updated_subtasks:\n            logger.debug(f"Post-commit parent_id for task {subtask.id}: {subtask.parent_id}")\n            logger.debug(f"Post-commit sort_order for task {subtask.id}: {subtask.sort_order}")\n\n        # Step 7: Return success response\n        return jsonify({\n            "success": True,\n            "message": "Subtasks reordered successfully.",\n            "updated_subtasks": [subtask.id for subtask in updated_subtasks]\n        }), 200\n\n    except Exception as e:\n        # Step 8: Handle unexpected errors\n        logger.error(f"Error while reordering subtasks: {str(e)}", exc_info=True)\n        db.session.rollback()\n        return jsonify({"error": "An unexpected error occurred while reordering subtasks."}), 500\n```\nKey Changes and Descriptive Comments\n\t1.\tInput Parsing:\n\t•\tExtracts parent_id and ordered_tasks from the request payload.\n\t•\tLogs the parsed values for debugging.\n\t2.\tInput Validation:\n\t•\tEnsures ordered_tasks is a list of dictionaries with the required keys.\n\t•\tValidates parent_id if provided, ensuring the parent task exists in the database.\n\t3.\tUpdate Processing:\n\t•\tIterates through ordered_tasks, updating each task’s parent_id and sort_order.\n\t•\tLogs changes for each task.\n\t4.\tDatabase Commit:\n\t•\tCommits all updates in a single transaction.\n\t•\tLogs success or rolls back changes in case of an error.\n\t5.\tPost-Commit Validation:\n\t•\tVerifies that the parent_id and sort_order changes were successfully saved to the database.\n\t6.\tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:46:29.348853', 'updated_at': '2025-02-06T21:59:21.617065'}, {'id': 131, 'name': 'Step 5: Update utils.py', 'description': 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nChanges to Make:\n\t1.\tEnhance Task Filtering:\n\t•\tEnsure the filters handle parent-child relationships explicitly.\n\t•\tAdd options to include or exclude subtasks in queries.\n\t2.\tUtility Function for Debugging Parent-Child Relationships:\n\t•\tProvide a function to generate a map or list of parent-child relationships for debugging purposes.\n\t3.\tValidation Functions:\n\t•\tAdd a utility function to validate parent-child relationships and ensure no circular dependencies.\n\nUpdated utils.py Code:\n```\nimport logging\nfrom sqlalchemy import func\nfrom sqlalchemy.orm import joinedload\nfrom app.extensions.db import db\nfrom app.tasks.models import Task\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\n\nclass TaskService:\n    @staticmethod\n    def filter_tasks(filters=None, include_subtasks=True, page=None, per_page=None):\n        """\n        Dynamically filters tasks with an option to include or exclude subtasks.\n\n        Args:\n            filters (dict): Filtering criteria.\n            include_subtasks (bool): Whether to include subtasks in the query.\n            page (int, optional): Page number for pagination.\n            per_page (int, optional): Items per page for pagination.\n\n        Returns:\n            Query or Pagination: A SQLAlchemy query object or paginated results.\n        """\n        query = Task.query.options(\n            db.joinedload(Task.project).joinedload(Project.contributors),\n            db.joinedload(Task.contributor),\n            db.joinedload(Task.children),\n        ).order_by(Task.sort_order)\n\n        if filters:\n            logger.debug(f"Applying filters: {filters}")\n\n            # Apply standard filters\n            if "is_archived" in filters:\n                query = query.filter(Task.is_archived == filters["is_archived"])\n            if "project_id" in filters:\n                query = query.filter(Task.project_id == filters["project_id"])\n            if "task_type" in filters:\n                if isinstance(filters["task_type"], list):\n                    query = query.filter(Task.task_type.in_(filters["task_type"]))\n                else:\n                    query = query.filter(Task.task_type == filters["task_type"])\n            if "completion_status" in filters:\n                completion_map = {"completed": True, "in_progress": False}\n                if filters["completion_status"] in completion_map:\n                    query = query.filter(Task.completed == completion_map[filters["completion_status"]])\n\n            # Optionally exclude subtasks\n            if not include_subtasks:\n                query = query.filter(Task.task_type != "Subtask")\n\n        logger.debug(f"Generated query: {query}")\n\n        # Pagination\n        if page and per_page:\n            return query.paginate(page=page, per_page=per_page, error_out=False)\n        return query\n\n    @staticmethod\n    def debug_parent_child_relationships(project_id=None):\n        """\n        Generates a debug map of parent-child relationships for all tasks.\n\n        Args:\n            project_id (int, optional): Restrict to tasks from a specific project.\n\n        Returns:\n            dict: A dictionary mapping parent IDs to their child task IDs.\n        """\n        query = Task.query\n        if project_id:\n            query = query.filter(Task.project_id == project_id)\n\n        tasks = query.options(\n            db.load_only(Task.id, Task.parent_id)\n        ).all()\n\n        relationship_map = {}\n        for task in tasks:\n            if task.parent_id not in relationship_map:\n                relationship_map[task.parent_id] = []\n            relationship_map[task.parent_id].append(task.id)\n\n        logger.debug(f"Parent-Child Relationship Map: {relationship_map}")\n        return relationship_map\n\n    @staticmethod\n    def validate_parent_child_relationships():\n        """\n        Validates all parent-child relationships in the database to ensure they conform to hierarchy rules.\n\n        Raises:\n            ValueError: If invalid relationships are detected.\n        """\n        tasks = Task.query.options(db.joinedload(Task.parent)).all()\n\n        for task in tasks:\n            if task.parent_id:\n                parent_task = task.parent\n                if not parent_task:\n                    raise ValueError(f"Task {task.id} has an invalid parent ID {task.parent_id}.")\n\n                # Validate hierarchy rules\n                if task.task_type == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError(f"User Story {task.id} must have an Epic as its parent.")\n                if task.task_type == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError(f"Subtask {task.id} must have a User Story as its parent.")\n\n        logger.info("All parent-child relationships are valid.")\n\n    @staticmethod\n    def get_all_task_ids_with_parents():\n        """\n        Returns a flat list of tasks with their parent IDs for debugging.\n\n        Returns:\n            list: A list of tuples (task_id, parent_id).\n        """\n        tasks = Task.query.with_entities(Task.id, Task.parent_id).all()\n        logger.debug(f"Task IDs with Parent IDs: {tasks}")\n        return tasks\n```\n\n\nExplanation of Changes:\n\t1.\tfilter_tasks Enhancements:\n\t•\tAdded include_subtasks parameter to optionally exclude subtasks from the query.\n\t2.\tdebug_parent_child_relationships:\n\t•\tCreates a parent-child relationship map for debugging purposes.\n\t3.\tvalidate_parent_child_relationships:\n\t•\tIterates through all tasks to validate parent-child hierarchy and ensures no invalid relationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.091824', 'updated_at': '2025-01-16T19:22:36.236691'}, {'id': 135, 'name': 'Step 3: Update list.html', 'description': 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already includes everything needed. No required changes.\n\nHere´s the relevant section of list.html:\n\n```\n<tr id="task-{{ task.id }}"\n                class="task-row {% if task.task_type == \'Subtask\' %}subtask-row{% elif task.task_type == \'User Story\' %}user-story-row{% elif task.task_type == \'Epic\' %}epic-row{% endif %}"\n                style="background-color: \n                {% if task.task_type == \'Subtask\' %}\n                    rgba(200, 230, 255, 0.5); /* Light blue for Subtask */\n                {% elif task.task_type == \'User Story\' %}\n                    rgba(255, 255, 200, 0.5); /* Light yellow for User Story */\n                {% elif task.task_type == \'Epic\' %}\n                    rgba(255, 200, 200, 0.5); /* Light red for Epic */\n                {% else %}\n                    rgba(240, 240, 240, 1); /* Default light gray */\n                {% endif %};"\n                data-task-id="{{ task.id }}"\n                data-parent-id="{{ task.parent_id or \'\' }}"\n                data-level="{{ depth }}">\n                <td><input type="checkbox" name="batch_update" value="{{ task.id }}"></td>\n                <td>\n                    {% if tasks|selectattr("parent_id", "equalto", task.id)|list %}\n                    <button class="btn btn-sm toggle-details" data-task-id="{{ task.id }}" aria-label="Toggle details for task {{ task.name }}">\n                        <i class="bi bi-chevron-right"></i>\n                    </button>\n                    {% endif %}\n                </td>\n                <td class="fw-medium fs-6 \n                {% if task.task_type == \'Epic\' %}\n                    epic-cell\n                {% elif task.task_type == \'User Story\' %}\n                    user-story-cell\n                {% elif task.task_type == \'Subtask\' %}\n                    subtask-cell\n                {% endif %}" \n                style="padding-left: {{ depth|default(0) * 20 }}px; position: relative;">\n                <span class="bi fs-6\n                {% if task.task_type == \'Epic\' %}\n                    bi-circle-fill\n                {% elif task.task_type == \'User Story\' %}\n                    bi-circle-half\n                {% elif task.task_type == \'Subtask\' %}\n                    bi-circle\n                {% endif %}">\n                </span>\n                {{ task.name }}\n                <small class="text-muted fw-light">\n                    (Parent-ID: {{ task.parent_id or \'None\' }})\n                </small>\n                <!-- Open Link -->\n                <a href="#" class="task-open-link" data-task-id="{{ task.id }}">\n                    <i class="bi bi-arrows-angle-expand" style="font-size: 0.8rem; color: white;"></i>\n                    Open\n                </a>\n            </td>\n                <td class="fw-light fs-6">\n                    <small class>\n                    LAC-{{ task.id }}\n                    </small>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light text-bg-secondary">\n                        {{ task.project if task.project else "Unknown Project" }}\n                    </span>\n                </td>\n                <td class="fs-6" data-contributor-column>{{ task.assigned_to if task.assigned_to else "Unassigned" }}</td>\n                <td class="fs-6">{{ task.story_points }}</td>\n                <td class="fs-6">\n                    <span class="badge rounded-pill fw-light text-bg-light">\n                        {{ task.task_type }}\n                    </span>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light {% if task.completed %}text-bg-success{% else %}text-bg-warning{% endif %}">\n                        {{ "Completed" if task.completed else "In Progress" }}\n                    </span>\n                </td>\n                <td>\n                    <!-- Delete Icon -->\n                    <button class="btn btn-dark btn-sm delete-task-btn" style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .2rem; --bs-btn-font-size: .75rem;" data-task-id="{{ task.id }}" aria-label="Deletes task {{ task.id }}">\n                        <i class="bi bi-trash"></i>\n                    </button>\n                </td>\n            </tr>\n            {% for child in tasks if child.parent_id == task.id %}\n                {{ render_task(child, tasks, depth + 1) }}\n            {% endfor %}\n            {% endmacro %}\n            \n            <!-- Render top-level tasks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:46:29.349784', 'updated_at': '2025-01-16T19:22:36.238473'}, {'id': 82, 'name': 'Implement Third-Party Authentication', 'description': 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitHub Login involves integrating OAuth 2.0, which both services support. The complexity depends on your app’s existing setup, frameworks, and experience with third-party authentication. Below is a breakdown:\n\nKey Steps for Implementing Google or GitHub Login\n\t1.\tSet Up OAuth Credentials:\n\t•\tRegister your application in the Google Cloud Console or GitHub Developer Settings.\n\t•\tObtain the client ID and client secret.\n\t2.\tInstall Required Libraries:\n\t•\tUse a library for OAuth (e.g., flask-oauthlib, python-social-auth, or authlib).\n\t•\tPopular frameworks like Flask and Django already have robust integrations for OAuth providers.\n\t3.\tBackend Configuration:\n\t•\tImplement an endpoint to handle the OAuth flow (/auth/login/google or /auth/login/github).\n\t•\tConfigure your app to send users to Google or GitHub’s authentication page.\n\t•\tHandle the OAuth callback to exchange the authorization code for an access token.\n\t•\tVerify the token and fetch user information (e.g., email, name).\n\t4.\tLink OAuth to User Registration:\n\t•\tOn successful login, create or retrieve a user in your database.\n\t•\tStore the user’s details like email, OAuth provider ID, and access token.\n\t5.\tFrontend Integration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T12:15:54.291625', 'updated_at': '2025-01-16T19:22:36.239866'}, {'id': 62, 'name': 'Add OAuth integration for Google Login', 'description': 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.241200'}, {'id': 64, 'name': 'Setup project credentials for Google API', 'description': 'Generate client ID and secret from Google API Console for your application.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.242497'}, {'id': 67, 'name': 'Test Google OAuth flow', 'description': 'Verify the OAuth flow using test accounts and check the token exchange.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.243780'}, {'id': 65, 'name': 'Implement backend endpoints for Google OAuth', 'description': 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.244932'}, {'id': 63, 'name': 'Add OAuth integration for GitHub Login', 'description': 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.246358'}, {'id': 68, 'name': 'Register application in GitHub Developer Console', 'description': 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.247746'}, {'id': 69, 'name': 'Handle callback from GitHub', 'description': 'Implement the callback endpoint to process the authorization code from GitHub.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.248912'}, {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}, {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}, {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:30.747962'}, {'id': 108, 'name': '1.1.2 Backend API for Registration', 'description': '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:33.067643'}, {'id': 112, 'name': '1.2.2 Frontend Login Page', 'description': 'Develop a frontend form for user login with email and password inputs.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.683644'}, {'id': 109, 'name': '1.1.3 Create Frontend Registration Page', 'description': 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.684988'}, {'id': 110, 'name': '1.1.4 Unit Tests for Registration', 'description': 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.686902'}, {'id': 101, 'name': '1.2 User Login', 'description': 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:25:53.687936'}, {'id': 111, 'name': '1.2.1 Backend API for Login', 'description': 'Create POST /api/login endpoint to handle user login.\njjsjj', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.689096'}, {'id': 113, 'name': '1.2.3 Session Management', 'description': 'Implement secure session handling using cookies or JWT.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:20.968680'}, {'id': 114, 'name': '1.2.4 Unit Tests for Login', 'description': 'Write tests for successful and failed login attempts.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:22:36.265866'}, {'id': 106, 'name': 'Password Reset', 'description': 'As a user, I want to reset my password securely using email.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.267247'}, {'id': 128, 'name': 'Frontend Password Reset Page', 'description': 'Develop a page for users to enter a new password using a valid token.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.269158'}, {'id': 129, 'name': 'Testing Password Reset', 'description': 'Write tests for email delivery, token validation, and password updates.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.270849'}, {'id': 102, 'name': 'Logout', 'description': 'As a user, I want to log out so that I can end my session securely.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.272605'}, {'id': 117, 'name': 'Tests for Logout', 'description': 'Verify session invalidation and redirection to the login page.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.274575'}, {'id': 116, 'name': 'Frontend Logout Button', 'description': 'Add a logout button to the UI and handle session clearing.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-02-09T12:31:17.939784'}, {'id': 115, 'name': 'Backend API for Logout', 'description': 'Create POST /api/logout endpoint to invalidate user sessions.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.277547'}, {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}, {'id': 45, 'name': 'Display Default Value in Dropdown', 'description': 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.280493'}, {'id': 50, 'name': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'In Progress', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:22.274304'}, {'id': 51, 'name': 'Set Default Value', 'description': 'Set the default value in the dropdown based on the retrieved data.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 45, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 1, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.283309'}, {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882'}, {'id': 54, 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 46, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:29.251047'}, {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:26:23.067490'}, {'id': 56, 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:16.233517'}, {'id': 55, 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:08.099271'}, {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:59.651639'}, {'id': 57, 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:51.310240'}, {'id': 58, 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:43.569501'}, {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:36.133259'}, {'id': 59, 'name': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:15.491910'}, {'id': 60, 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 49, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:28.367797'}, {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-11T08:25:07.992524'}, {'id': 52, 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 41, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:01.469601'}, {'id': 53, 'name': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:24:54.245010'}, {'id': 42, 'name': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:47.274896'}, {'id': 43, 'name': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:33.908549'}, {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-02-11T08:24:26.494016'}, {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-02-11T08:24:21.069473'}, {'id': 90, 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:13.204884'}, {'id': 88, 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:05.873554'}, {'id': 89, 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:23:58.436495'}, {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-02-11T08:23:51.269557'}, {'id': 93, 'name': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:42.771565'}, {'id': 91, 'name': 'Update database schema for task ownership', 'description': 'Add a column or relationship to assign a single owner per task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:33.670381'}, {'id': 92, 'name': 'Develop backend API for assigning task owner', 'description': 'Create endpoints to assign or update the owner of a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T09:19:44.027744'}, {'id': 87, 'name': 'Create and customize contributor roles', 'description': 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:43.600461', 'updated_at': '2025-02-11T08:23:23.402442'}, {'id': 96, 'name': 'Allow admin users to create and customize contributor roles via frontend', 'description': 'Provide UI functionality for admins to manage contributor roles dynamically.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:23:13.139282'}, {'id': 94, 'name': 'Add database support for contributor roles', 'description': 'Introduce a roles table and link contributors to specific roles for tasks.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:56.181530'}, {'id': 95, 'name': 'Develop backend API for managing contributor roles', 'description': 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:02.276492'}, {'id': 127, 'name': 'Backend API for Password Reset', 'description': 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-02-10T23:59:50.734037'}, {'id': 126, 'name': 'Email Configuration for Password Reset', 'description': 'Configure email service to send password reset links.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.334340'}, {'id': 104, 'name': 'Middleware for Role Enforcement', 'description': 'As a system, I want to enforce role-based access to specific routes.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:23:40.346816'}, {'id': 122, 'name': 'Testing Role Enforcement', 'description': 'Write tests to ensure proper access control based on roles.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.185693'}, {'id': 121, 'name': 'Develop Role Enforcement Middleware', 'description': 'Implement middleware to check user roles for access control.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.187439'}, {'id': 105, 'name': 'Profile Management', 'description': 'As a user, I want to update my profile (username, email, password).', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.339830'}, {'id': 123, 'name': 'Backend API for Profile Management', 'description': 'Create PATCH /api/profile endpoint to update user details.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.678781'}, {'id': 125, 'name': 'Testing Profile Updates', 'description': 'Write tests for profile update functionality.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.680382'}]
2025-02-11 12:34:09,038 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 12:34:09,038 INFO: [cached since 2517s ago] {'param_1': 2}
2025-02-11 12:34:09,039 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:34:09,039 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 12:34:09,039 INFO: [cached since 2517s ago] {'param_1': 3}
2025-02-11 12:34:09,040 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:34:09,040 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 12:34:09,040 INFO: [cached since 2517s ago] {'param_1': 4}
2025-02-11 12:34:09,041 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:34:09,041 DEBUG: Row (4, 'Fredrik')
2025-02-11 12:34:09,041 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 12:34:09,041 INFO: [cached since 2517s ago] {'param_1': 5}
2025-02-11 12:34:09,041 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:34:09,042 INFO: ROLLBACK
2025-02-11 12:34:09,043 INFO: 127.0.0.1 - - [11/Feb/2025 12:34:09] "GET /tasks/ HTTP/1.1" 200 -
2025-02-11 12:34:09,073 INFO: 127.0.0.1 - - [11/Feb/2025 12:34:09] "[36mGET /static/custom.css HTTP/1.1[0m" 304 -
2025-02-11 12:34:09,078 INFO: 127.0.0.1 - - [11/Feb/2025 12:34:09] "[36mGET /static/js/filters.js HTTP/1.1[0m" 304 -
2025-02-11 12:34:09,080 INFO: 127.0.0.1 - - [11/Feb/2025 12:34:09] "[36mGET /static/js/tasks_table_interactions.js HTTP/1.1[0m" 304 -
2025-02-11 12:34:09,082 INFO: 127.0.0.1 - - [11/Feb/2025 12:34:09] "[36mGET /static/js/modals.js HTTP/1.1[0m" 304 -
2025-02-11 12:34:09,089 INFO: 127.0.0.1 - - [11/Feb/2025 12:34:09] "[36mGET /static/images/background.svg HTTP/1.1[0m" 304 -
2025-02-11 12:34:59,590 INFO: Fetching task details for Task ID 107.
2025-02-11 12:34:59,591 INFO: Fetching task with ID 107.
2025-02-11 12:34:59,594 INFO: BEGIN (implicit)
2025-02-11 12:34:59,594 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:34:59,594 INFO: [cached since 2560s ago] {'pk_1': 107}
2025-02-11 12:34:59,595 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:34:59,596 DEBUG: Row (107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 30, 747962), None)
2025-02-11 12:34:59,596 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12ca23e90>, 'sort_order': 19, 'task_type': 'Subtask', 'contributor_id': None, 'id': 107, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 25, 30, 747962), 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'parent_id': 100, 'story_points': 3, 'completed_date': None}
2025-02-11 12:34:59,598 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 12:34:59,598 INFO: [cached since 2560s ago] {'pk_1': 6}
2025-02-11 12:34:59,599 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:34:59,599 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:34:59,600 INFO: Task ID 107 fetched with parent ID: 100
2025-02-11 12:34:59,600 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:34:59,601 INFO: [cached since 2560s ago] {'pk_1': 100}
2025-02-11 12:34:59,602 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:34:59,603 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None)
2025-02-11 12:34:59,603 INFO: Task with ID 107 fetched successfully.
2025-02-11 12:34:59,604 DEBUG: Fetched Task Data: {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:30.747962', 'contributor_name': 'Unassigned', 'parent': {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}}
2025-02-11 12:34:59,604 INFO: Task details fetched successfully for Task ID 107.
2025-02-11 12:34:59,605 INFO: ROLLBACK
2025-02-11 12:34:59,605 INFO: 127.0.0.1 - - [11/Feb/2025 12:34:59] "GET /api/tasks/107 HTTP/1.1" 200 -
2025-02-11 12:35:00,127 INFO: Fetching task details for Task ID 100.
2025-02-11 12:35:00,127 INFO: Fetching task with ID 100.
2025-02-11 12:35:00,128 INFO: BEGIN (implicit)
2025-02-11 12:35:00,129 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:35:00,129 INFO: [cached since 2560s ago] {'pk_1': 100}
2025-02-11 12:35:00,131 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:35:00,131 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None)
2025-02-11 12:35:00,132 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12ca23b90>, 'sort_order': 18, 'task_type': 'User Story', 'contributor_id': None, 'id': 100, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'parent_id': 97, 'story_points': 8, 'completed_date': None}
2025-02-11 12:35:00,132 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 12:35:00,132 INFO: [cached since 2560s ago] {'pk_1': 6}
2025-02-11 12:35:00,133 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:35:00,134 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:35:00,134 INFO: Task ID 100 fetched with parent ID: 97
2025-02-11 12:35:00,135 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:35:00,136 INFO: [cached since 2560s ago] {'pk_1': 97}
2025-02-11 12:35:00,139 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:35:00,140 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None)
2025-02-11 12:35:00,140 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 12:35:00,140 INFO: [cached since 2560s ago] {'pk_1': 5}
2025-02-11 12:35:00,141 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:35:00,141 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 12:35:00,142 INFO: Task with ID 100 fetched successfully.
2025-02-11 12:35:00,142 DEBUG: Fetched Task Data: {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812', 'contributor_name': 'Unassigned', 'parent': {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}}
2025-02-11 12:35:00,142 INFO: Task details fetched successfully for Task ID 100.
2025-02-11 12:35:00,142 INFO: ROLLBACK
2025-02-11 12:35:00,143 INFO: 127.0.0.1 - - [11/Feb/2025 12:35:00] "GET /api/tasks/100 HTTP/1.1" 200 -
2025-02-11 12:35:00,855 INFO: Fetching task details for Task ID 107.
2025-02-11 12:35:00,855 INFO: Fetching task with ID 107.
2025-02-11 12:35:00,857 INFO: BEGIN (implicit)
2025-02-11 12:35:00,857 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:35:00,857 INFO: [cached since 2561s ago] {'pk_1': 107}
2025-02-11 12:35:00,858 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:35:00,859 DEBUG: Row (107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 30, 747962), None)
2025-02-11 12:35:00,859 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12ca23dd0>, 'sort_order': 19, 'task_type': 'Subtask', 'contributor_id': None, 'id': 107, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 25, 30, 747962), 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'parent_id': 100, 'story_points': 3, 'completed_date': None}
2025-02-11 12:35:00,860 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 12:35:00,860 INFO: [cached since 2561s ago] {'pk_1': 6}
2025-02-11 12:35:00,862 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:35:00,862 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:35:00,863 INFO: Task ID 107 fetched with parent ID: 100
2025-02-11 12:35:00,863 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:35:00,863 INFO: [cached since 2561s ago] {'pk_1': 100}
2025-02-11 12:35:00,864 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:35:00,865 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None)
2025-02-11 12:35:00,865 INFO: Task with ID 107 fetched successfully.
2025-02-11 12:35:00,865 DEBUG: Fetched Task Data: {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:30.747962', 'contributor_name': 'Unassigned', 'parent': {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}}
2025-02-11 12:35:00,865 INFO: Task details fetched successfully for Task ID 107.
2025-02-11 12:35:00,866 INFO: ROLLBACK
2025-02-11 12:35:00,867 INFO: 127.0.0.1 - - [11/Feb/2025 12:35:00] "GET /api/tasks/107 HTTP/1.1" 200 -
2025-02-11 12:35:01,072 INFO: Fetching task details for Task ID 100.
2025-02-11 12:35:01,072 INFO: Fetching task with ID 100.
2025-02-11 12:35:01,072 INFO: BEGIN (implicit)
2025-02-11 12:35:01,073 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:35:01,073 INFO: [cached since 2561s ago] {'pk_1': 100}
2025-02-11 12:35:01,074 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:35:01,075 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None)
2025-02-11 12:35:01,075 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12ca23e30>, 'sort_order': 18, 'task_type': 'User Story', 'contributor_id': None, 'id': 100, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'parent_id': 97, 'story_points': 8, 'completed_date': None}
2025-02-11 12:35:01,076 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 12:35:01,076 INFO: [cached since 2561s ago] {'pk_1': 6}
2025-02-11 12:35:01,076 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:35:01,077 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:35:01,077 INFO: Task ID 100 fetched with parent ID: 97
2025-02-11 12:35:01,078 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:35:01,078 INFO: [cached since 2561s ago] {'pk_1': 97}
2025-02-11 12:35:01,079 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:35:01,080 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None)
2025-02-11 12:35:01,081 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 12:35:01,081 INFO: [cached since 2561s ago] {'pk_1': 5}
2025-02-11 12:35:01,082 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:35:01,082 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 12:35:01,082 INFO: Task with ID 100 fetched successfully.
2025-02-11 12:35:01,083 DEBUG: Fetched Task Data: {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812', 'contributor_name': 'Unassigned', 'parent': {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}}
2025-02-11 12:35:01,084 INFO: Task details fetched successfully for Task ID 100.
2025-02-11 12:35:01,085 INFO: ROLLBACK
2025-02-11 12:35:01,085 INFO: 127.0.0.1 - - [11/Feb/2025 12:35:01] "GET /api/tasks/100 HTTP/1.1" 200 -
2025-02-11 12:36:09,457 INFO: Fetching task details for Task ID 107.
2025-02-11 12:36:09,458 INFO: Fetching task with ID 107.
2025-02-11 12:36:09,459 INFO: BEGIN (implicit)
2025-02-11 12:36:09,460 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:36:09,460 INFO: [cached since 2629s ago] {'pk_1': 107}
2025-02-11 12:36:09,462 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:36:09,464 DEBUG: Row (107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 30, 747962), None)
2025-02-11 12:36:09,465 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x1074afe30>, 'sort_order': 19, 'task_type': 'Subtask', 'contributor_id': None, 'id': 107, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 25, 30, 747962), 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'parent_id': 100, 'story_points': 3, 'completed_date': None}
2025-02-11 12:36:09,466 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 12:36:09,466 INFO: [cached since 2629s ago] {'pk_1': 6}
2025-02-11 12:36:09,467 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:36:09,467 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:36:09,467 INFO: Task ID 107 fetched with parent ID: 100
2025-02-11 12:36:09,468 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:36:09,468 INFO: [cached since 2629s ago] {'pk_1': 100}
2025-02-11 12:36:09,470 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:36:09,470 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None)
2025-02-11 12:36:09,471 INFO: Task with ID 107 fetched successfully.
2025-02-11 12:36:09,471 DEBUG: Fetched Task Data: {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:30.747962', 'contributor_name': 'Unassigned', 'parent': {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}}
2025-02-11 12:36:09,471 INFO: Task details fetched successfully for Task ID 107.
2025-02-11 12:36:09,472 INFO: ROLLBACK
2025-02-11 12:36:09,473 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:09] "GET /api/tasks/107 HTTP/1.1" 200 -
2025-02-11 12:36:09,988 INFO: Fetching task details for Task ID 100.
2025-02-11 12:36:09,988 INFO: Fetching task with ID 100.
2025-02-11 12:36:09,989 INFO: BEGIN (implicit)
2025-02-11 12:36:09,990 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:36:09,990 INFO: [cached since 2630s ago] {'pk_1': 100}
2025-02-11 12:36:09,991 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:36:09,992 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None)
2025-02-11 12:36:09,993 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12ca23cb0>, 'sort_order': 18, 'task_type': 'User Story', 'contributor_id': None, 'id': 100, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'parent_id': 97, 'story_points': 8, 'completed_date': None}
2025-02-11 12:36:09,995 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 12:36:09,995 INFO: [cached since 2630s ago] {'pk_1': 6}
2025-02-11 12:36:09,997 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:36:09,997 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:36:09,998 INFO: Task ID 100 fetched with parent ID: 97
2025-02-11 12:36:09,999 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:36:09,999 INFO: [cached since 2630s ago] {'pk_1': 97}
2025-02-11 12:36:10,000 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:36:10,001 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None)
2025-02-11 12:36:10,003 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 12:36:10,003 INFO: [cached since 2629s ago] {'pk_1': 5}
2025-02-11 12:36:10,004 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:36:10,004 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 12:36:10,004 INFO: Task with ID 100 fetched successfully.
2025-02-11 12:36:10,004 DEBUG: Fetched Task Data: {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812', 'contributor_name': 'Unassigned', 'parent': {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}}
2025-02-11 12:36:10,004 INFO: Task details fetched successfully for Task ID 100.
2025-02-11 12:36:10,005 INFO: ROLLBACK
2025-02-11 12:36:10,005 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:10] "GET /api/tasks/100 HTTP/1.1" 200 -
2025-02-11 12:36:10,718 INFO: Fetching task details for Task ID 107.
2025-02-11 12:36:10,719 INFO: Fetching task with ID 107.
2025-02-11 12:36:10,720 INFO: BEGIN (implicit)
2025-02-11 12:36:10,720 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:36:10,720 INFO: [cached since 2631s ago] {'pk_1': 107}
2025-02-11 12:36:10,721 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:36:10,722 DEBUG: Row (107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 30, 747962), None)
2025-02-11 12:36:10,722 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12ca22ed0>, 'sort_order': 19, 'task_type': 'Subtask', 'contributor_id': None, 'id': 107, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 25, 30, 747962), 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'parent_id': 100, 'story_points': 3, 'completed_date': None}
2025-02-11 12:36:10,722 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 12:36:10,723 INFO: [cached since 2631s ago] {'pk_1': 6}
2025-02-11 12:36:10,723 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:36:10,723 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:36:10,724 INFO: Task ID 107 fetched with parent ID: 100
2025-02-11 12:36:10,724 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:36:10,724 INFO: [cached since 2631s ago] {'pk_1': 100}
2025-02-11 12:36:10,725 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:36:10,726 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None)
2025-02-11 12:36:10,726 INFO: Task with ID 107 fetched successfully.
2025-02-11 12:36:10,726 DEBUG: Fetched Task Data: {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:30.747962', 'contributor_name': 'Unassigned', 'parent': {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}}
2025-02-11 12:36:10,727 INFO: Task details fetched successfully for Task ID 107.
2025-02-11 12:36:10,727 INFO: ROLLBACK
2025-02-11 12:36:10,728 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:10] "GET /api/tasks/107 HTTP/1.1" 200 -
2025-02-11 12:36:10,935 INFO: Fetching task details for Task ID 100.
2025-02-11 12:36:10,935 INFO: Fetching task with ID 100.
2025-02-11 12:36:10,936 INFO: BEGIN (implicit)
2025-02-11 12:36:10,936 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:36:10,936 INFO: [cached since 2631s ago] {'pk_1': 100}
2025-02-11 12:36:10,937 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:36:10,938 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None)
2025-02-11 12:36:10,938 DEBUG: Raw task object: {'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x12ca200b0>, 'sort_order': 18, 'task_type': 'User Story', 'contributor_id': None, 'id': 100, 'is_archived': False, 'completed': False, 'created_at': datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), 'status': 'Not Started', 'project_id': 6, 'updated_at': datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'parent_id': 97, 'story_points': 8, 'completed_date': None}
2025-02-11 12:36:10,939 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.id = %(pk_1)s
2025-02-11 12:36:10,939 INFO: [cached since 2631s ago] {'pk_1': 6}
2025-02-11 12:36:10,939 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:36:10,940 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:36:10,940 INFO: Task ID 100 fetched with parent ID: 97
2025-02-11 12:36:10,941 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:36:10,941 INFO: [cached since 2631s ago] {'pk_1': 97}
2025-02-11 12:36:10,942 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:36:10,943 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None)
2025-02-11 12:36:10,943 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 12:36:10,944 INFO: [cached since 2630s ago] {'pk_1': 5}
2025-02-11 12:36:10,944 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:36:10,945 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 12:36:10,945 INFO: Task with ID 100 fetched successfully.
2025-02-11 12:36:10,946 DEBUG: Fetched Task Data: {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812', 'contributor_name': 'Unassigned', 'parent': {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}}
2025-02-11 12:36:10,946 INFO: Task details fetched successfully for Task ID 100.
2025-02-11 12:36:10,947 INFO: ROLLBACK
2025-02-11 12:36:10,948 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:10] "GET /api/tasks/100 HTTP/1.1" 200 -
2025-02-11 12:36:18,004 INFO: Assigning contributor to task ID 107
2025-02-11 12:36:18,005 INFO: Received data: {'contributor_id': 5}
2025-02-11 12:36:18,005 INFO: Contributor ID received: 5
2025-02-11 12:36:18,006 INFO: BEGIN (implicit)
2025-02-11 12:36:18,006 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:36:18,006 INFO: [cached since 2638s ago] {'pk_1': 107}
2025-02-11 12:36:18,007 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:36:18,007 DEBUG: Row (107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 30, 747962), None)
2025-02-11 12:36:18,008 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 12:36:18,008 INFO: [cached since 2187s ago] {'pk_1': 5}
2025-02-11 12:36:18,010 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:36:18,010 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 12:36:18,011 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name 
FROM project LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project.id = project_contributor_1.project_id 
WHERE project.id = %(pk_1)s
2025-02-11 12:36:18,011 INFO: [cached since 2187s ago] {'pk_1': 6}
2025-02-11 12:36:18,013 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'contributor_1_id', 'contributor_1_name')
2025-02-11 12:36:18,013 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:18,015 INFO: UPDATE task SET contributor_id=%(contributor_id)s, updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 12:36:18,015 INFO: [cached since 2187s ago] {'contributor_id': 5, 'updated_at': datetime.datetime(2025, 2, 11, 11, 36, 18, 15248, tzinfo=datetime.timezone.utc), 'task_id': 107}
2025-02-11 12:36:18,022 INFO: COMMIT
2025-02-11 12:36:18,024 INFO: BEGIN (implicit)
2025-02-11 12:36:18,025 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 12:36:18,025 INFO: [cached since 2187s ago] {'pk_1': 5}
2025-02-11 12:36:18,026 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:36:18,026 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 12:36:18,027 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:36:18,027 INFO: [cached since 2187s ago] {'pk_1': 107}
2025-02-11 12:36:18,029 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:36:18,029 DEBUG: Row (107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 2, 11, 12, 36, 18, 15248), None)
2025-02-11 12:36:18,030 INFO: ROLLBACK
2025-02-11 12:36:18,030 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:18] "POST /tasks/107/assign_contributor HTTP/1.1" 200 -
2025-02-11 12:36:20,221 INFO: save_task triggered
2025-02-11 12:36:20,222 INFO: Payload received: {'title': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_id': '107', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 3, 'parent_id': 100, 'contributor_id': None, 'sort_order': 0}
2025-02-11 12:36:20,222 INFO: Update request for Task ID: 107
2025-02-11 12:36:20,223 INFO: BEGIN (implicit)
2025-02-11 12:36:20,223 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:36:20,223 INFO: [cached since 2640s ago] {'pk_1': '107'}
2025-02-11 12:36:20,224 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:36:20,225 DEBUG: Row (107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 2, 11, 12, 36, 18, 15248), None)
2025-02-11 12:36:20,225 DEBUG: Received update payload for Task ID 107: {'title': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_id': '107', 'project_id': '6', 'task_type': 'Subtask', 'story_points': 3, 'parent_id': 100, 'contributor_id': None, 'sort_order': 0}
2025-02-11 12:36:20,225 DEBUG: Validating parent_id change for Task 107: 100
2025-02-11 12:36:20,225 INFO: Checking circular reference for Task 107 with Parent ID: 100
2025-02-11 12:36:20,227 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 12:36:20,227 INFO: [cached since 2051s ago] {'id_1': 100, 'param_1': 1}
2025-02-11 12:36:20,229 DEBUG: Col ('task_parent_id',)
2025-02-11 12:36:20,229 DEBUG: Row (97,)
2025-02-11 12:36:20,230 INFO: SELECT task.parent_id AS task_parent_id 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 12:36:20,230 INFO: [cached since 2051s ago] {'id_1': 97, 'param_1': 1}
2025-02-11 12:36:20,231 DEBUG: Col ('task_parent_id',)
2025-02-11 12:36:20,231 DEBUG: Row (None,)
2025-02-11 12:36:20,231 INFO: Circular reference check passed.
2025-02-11 12:36:20,232 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 12:36:20,232 INFO: [cached since 2051s ago] {'id_1': 100, 'param_1': 1}
2025-02-11 12:36:20,232 DEBUG: Col ('task_task_type',)
2025-02-11 12:36:20,233 DEBUG: Row ('User Story',)
2025-02-11 12:36:20,233 DEBUG: Validating hierarchy: Task 107, Parent Type: User Story
2025-02-11 12:36:20,233 INFO: Hierarchy validation passed for Task 107.
2025-02-11 12:36:20,233 INFO: Validation passed for parent_id: 100
2025-02-11 12:36:20,233 DEBUG: Validating task_type change for Task 107: Subtask
2025-02-11 12:36:20,236 INFO: SELECT task.task_type AS task_task_type 
FROM task 
WHERE task.id = %(id_1)s 
 LIMIT %(param_1)s
2025-02-11 12:36:20,236 INFO: [cached since 2051s ago] {'id_1': 100, 'param_1': 1}
2025-02-11 12:36:20,237 DEBUG: Col ('task_task_type',)
2025-02-11 12:36:20,237 DEBUG: Row ('User Story',)
2025-02-11 12:36:20,237 DEBUG: Validating hierarchy: Task Type: Subtask, Parent Type: User Story
2025-02-11 12:36:20,237 INFO: Hierarchy validation passed for Task 107.
2025-02-11 12:36:20,238 INFO: Validation passed for task_type: Subtask
2025-02-11 12:36:20,238 INFO: UPDATE task SET updated_at=%(updated_at)s WHERE task.id = %(task_id)s
2025-02-11 12:36:20,238 INFO: [cached since 2051s ago] {'updated_at': datetime.datetime(2025, 2, 11, 11, 36, 20, 238219), 'task_id': 107}
2025-02-11 12:36:20,239 INFO: COMMIT
2025-02-11 12:36:20,240 INFO: Task ID 107 updated successfully.
2025-02-11 12:36:20,240 INFO: BEGIN (implicit)
2025-02-11 12:36:20,241 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.id = %(pk_1)s
2025-02-11 12:36:20,241 INFO: [cached since 2189s ago] {'pk_1': 107}
2025-02-11 12:36:20,242 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:36:20,242 DEBUG: Row (107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 2, 11, 11, 36, 20, 238219), None)
2025-02-11 12:36:20,243 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor 
WHERE contributor.id = %(pk_1)s
2025-02-11 12:36:20,243 INFO: [cached since 2640s ago] {'pk_1': 5}
2025-02-11 12:36:20,243 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:36:20,243 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 12:36:20,244 INFO: ROLLBACK
2025-02-11 12:36:20,244 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:20] "POST /api/tasks HTTP/1.1" 200 -
2025-02-11 12:36:23,277 INFO: Entering list_tasks route...
2025-02-11 12:36:23,277 DEBUG: Filters used: {'is_archived': False}
2025-02-11 12:36:23,279 DEBUG: Applying filters: {'is_archived': False}
2025-02-11 12:36:23,288 DEBUG: Generated query: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name, project_1.id AS project_1_id, project_1.name AS project_1_name, project_1.start_date AS project_1_start_date, project_1.end_date AS project_1_end_date, project_1.scope AS project_1_scope, project_1.completed_story_points AS project_1_completed_story_points, project_1.created_at AS project_1_created_at, project_1.updated_at AS project_1_updated_at, contributor_2.id AS contributor_2_id, contributor_2.name AS contributor_2_name 
FROM task LEFT OUTER JOIN task AS task_1 ON task.id = task_1.parent_id LEFT OUTER JOIN project AS project_1 ON project_1.id = task.project_id LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project_1.id = project_contributor_1.project_id LEFT OUTER JOIN contributor AS contributor_2 ON contributor_2.id = task.contributor_id 
WHERE task.is_archived = false ORDER BY task.sort_order
2025-02-11 12:36:23,288 INFO: BEGIN (implicit)
2025-02-11 12:36:23,289 INFO: SELECT anon_1.task_id AS anon_1_task_id, anon_1.task_name AS anon_1_task_name, anon_1.task_sort_order AS anon_1_task_sort_order, anon_1.task_description AS anon_1_task_description, anon_1.task_task_type AS anon_1_task_task_type, anon_1.task_is_archived AS anon_1_task_is_archived, anon_1.task_completed AS anon_1_task_completed, anon_1.task_status AS anon_1_task_status, anon_1.task_parent_id AS anon_1_task_parent_id, anon_1.task_project_id AS anon_1_task_project_id, anon_1.task_contributor_id AS anon_1_task_contributor_id, anon_1.task_story_points AS anon_1_task_story_points, anon_1.task_created_at AS anon_1_task_created_at, anon_1.task_updated_at AS anon_1_task_updated_at, anon_1.task_completed_date AS anon_1_task_completed_date, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name, project_1.id AS project_1_id, project_1.name AS project_1_name, project_1.start_date AS project_1_start_date, project_1.end_date AS project_1_end_date, project_1.scope AS project_1_scope, project_1.completed_story_points AS project_1_completed_story_points, project_1.created_at AS project_1_created_at, project_1.updated_at AS project_1_updated_at, contributor_2.id AS contributor_2_id, contributor_2.name AS contributor_2_name 
FROM (SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.is_archived = false ORDER BY task.sort_order 
 LIMIT %(param_1)s OFFSET %(param_2)s) AS anon_1 LEFT OUTER JOIN task AS task_1 ON anon_1.task_id = task_1.parent_id LEFT OUTER JOIN project AS project_1 ON project_1.id = anon_1.task_project_id LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project_1.id = project_contributor_1.project_id LEFT OUTER JOIN contributor AS contributor_2 ON contributor_2.id = anon_1.task_contributor_id ORDER BY anon_1.task_sort_order
2025-02-11 12:36:23,289 INFO: [cached since 2651s ago] {'param_1': 110, 'param_2': 0}
2025-02-11 12:36:23,293 DEBUG: Col ('anon_1_task_id', 'anon_1_task_name', 'anon_1_task_sort_order', 'anon_1_task_description', 'anon_1_task_task_type', 'anon_1_task_is_archived', 'anon_1_task_completed', 'anon_1_task_status', 'anon_1_task_parent_id', 'anon_1_task_project_id', 'anon_1_task_contributor_id', 'anon_1_task_story_points', 'anon_1_task_created_at', 'anon_1_task_updated_at', 'anon_1_task_completed_date', 'task_1_id', 'task_1_name', 'task_1_sort_order', 'task_1_description', 'task_1_task_type', 'task_1_is_archived', 'task_1_completed', 'task_1_status', 'task_1_parent_id', 'task_1_project_id', 'task_1_contributor_id', 'task_1_story_points', 'task_1_created_at', 'task_1_updated_at', 'task_1_completed_date', 'contributor_1_id', 'contributor_1_name', 'project_1_id', 'project_1_name', 'project_1_start_date', 'project_1_end_date', 'project_1_scope', 'project_1_completed_story_points', 'project_1_created_at', 'project_1_updated_at', 'contributor_2_id', 'contributor_2_name')
2025-02-11 12:36:23,294 DEBUG: Row (290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,294 DEBUG: Row (298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None, 299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 12:36:23,295 DEBUG: Row (275, 'add sprints, cycles', 0, 'Make naming customizable', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 48, 52, 680022), datetime.datetime(2025, 2, 10, 8, 38, 37, 622196), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,295 DEBUG: Row (276, 'add support for priority', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 49, 26, 189497), datetime.datetime(2025, 2, 10, 8, 28, 47, 447612), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,295 DEBUG: Row (264, 'close all / open all childtasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 25, 20, 101418), datetime.datetime(2025, 2, 10, 8, 47, 14, 915970), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,295 DEBUG: Row (285, 'add text truncation to project names in task list', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 45, 47, 27805), datetime.datetime(2025, 2, 10, 9, 45, 47, 29729), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,295 DEBUG: Row (257, 'Update Task API Integration', 0, "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'Subtask', False, False, 'Not Started', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 22, 55, 49, 566819), datetime.datetime(2025, 2, 5, 22, 18, 17, 807154), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,295 DEBUG: Row (294, 'issue: task table filters not working', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 19, 21, 22598), datetime.datetime(2025, 2, 10, 10, 19, 21, 24676), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,295 DEBUG: Row (267, 'improvements to toggles and nested tasks', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 29, 12, 464594), datetime.datetime(2025, 2, 10, 8, 47, 24, 581680), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,295 DEBUG: Row (283, 'fix update title', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 58, 769700), datetime.datetime(2025, 2, 10, 8, 46, 47, 282087), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,295 DEBUG: Row (271, 'make sure dynamically added rows has the exact same styling and includes every element', 0, 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 21, 7, 108431), datetime.datetime(2025, 2, 10, 8, 38, 47, 340105), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,296 DEBUG: Row (273, 'disable parent task selector in epics', 0, 'and add text, Epic can´t have parent tasks', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 0, 45, 20, 740910), datetime.datetime(2025, 2, 10, 8, 39, 17, 639890), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,296 DEBUG: Row (269, 'fix styling for sweetalert', 0, '', 'User Story', False, False, 'In Progress', None, 6, None, 0, datetime.datetime(2025, 2, 8, 15, 54, 56, 717846), datetime.datetime(2025, 2, 10, 8, 39, 32, 172437), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,296 DEBUG: Row (286, 'add support for labels/tags', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 46, 23, 985620), datetime.datetime(2025, 2, 10, 9, 46, 23, 987564), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,296 DEBUG: Row (299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 12:36:23,296 DEBUG: Row (266, 'highlight the nested tasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 28, 30, 382949), datetime.datetime(2025, 2, 10, 8, 47, 4, 382929), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,296 DEBUG: Row (279, 'github integration', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 38, 238202), datetime.datetime(2025, 2, 10, 8, 39, 24, 168451), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,296 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 10, 9, 12, 47, 626993), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,297 DEBUG: Row (278, 'search feature for tasks list', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 3, 369833), datetime.datetime(2025, 2, 10, 8, 39, 4, 5957), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,297 DEBUG: Row (281, 'add high level plan', 0, 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 27, 1, 218606), datetime.datetime(2025, 2, 10, 8, 38, 54, 754760), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,297 DEBUG: Row (287, 'when moving a parent item to another project make sure the subtasks are moved as well', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 48, 31, 986870), datetime.datetime(2025, 2, 10, 9, 48, 31, 988859), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,297 DEBUG: Row (272, 'implement a markdown text editor like notion', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 28, 18, 300231), datetime.datetime(2025, 2, 10, 8, 28, 39, 669255), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,297 DEBUG: Row (293, 'click on title should copy the task title and id to clipboard', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 16, 33, 508209), datetime.datetime(2025, 2, 10, 10, 16, 33, 510414), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,297 DEBUG: Row (277, 'custom task workflow statuses', 0, 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- ... (780 characters truncated) ...  tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 16, 3, 352588), datetime.datetime(2025, 2, 10, 8, 38, 28, 123328), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,298 DEBUG: Row (274, 'add support for goals, initiatives, okr´s', 0, 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 46, 27, 204912), datetime.datetime(2025, 2, 10, 8, 28, 17, 663922), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,298 DEBUG: Row (280, 'logging (task and project history)', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 37, 44, 435112), datetime.datetime(2025, 2, 10, 8, 28, 28, 947805), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,298 DEBUG: Row (282, 'implement same task list in projects but filtered on project', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 17, 786154), datetime.datetime(2025, 2, 10, 9, 41, 17, 787861), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,298 DEBUG: Row (296, 'issue: contributor is lost after updating task', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 26, 43, 881947), datetime.datetime(2025, 2, 10, 10, 26, 43, 884004), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,298 DEBUG: Row (288, 'when trying to move subtask to another project, make sure a warning is displayed', 0, 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be l ... (312 characters truncated) ... , Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 54, 36, 297869), datetime.datetime(2025, 2, 10, 8, 54, 51, 840686), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,298 DEBUG: Row (284, 'add type "issue/bug"', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 42, 27, 719439), datetime.datetime(2025, 2, 10, 9, 42, 27, 720908), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,298 DEBUG: Row (295, 'issue: drag and drop errors', 0, '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 22, 54, 461413), datetime.datetime(2025, 2, 10, 10, 22, 54, 462542), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,298 DEBUG: Row (297, 'example parent epic', 0, '', 'Epic', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 39, 51, 620509), datetime.datetime(2025, 2, 10, 10, 39, 51, 622712), None, 298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 12:36:23,299 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 10, 10, 11, 12, 274809), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,299 DEBUG: Row (265, 'smooth transition for toggles', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 27, 23, 422612), datetime.datetime(2025, 2, 10, 8, 46, 55, 831743), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,299 DEBUG: Row (270, 'the newest task', 0, '', 'Subtask', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 0, 7, 34, 368035), datetime.datetime(2025, 2, 10, 1, 7, 34, 372478), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 12:36:23,299 DEBUG: Row (291, 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 9, 52, 988609), datetime.datetime(2025, 2, 10, 10, 9, 52, 997455), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:36:23,299 DEBUG: Row (136, 'Page scroll should stay in position when reloading', 2, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 16, 18, 21, 50, 187247), datetime.datetime(2025, 1, 16, 19, 22, 36, 214901), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,299 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,300 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,301 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,301 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,302 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,303 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,303 DEBUG: Row (133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,304 DEBUG: Row (132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,304 DEBUG: Row (134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,304 DEBUG: Row (131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,305 DEBUG: Row (135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,305 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None, 63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,305 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None, 62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,306 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,306 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,306 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,307 DEBUG: Row (64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,307 DEBUG: Row (67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,307 DEBUG: Row (65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,307 DEBUG: Row (63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,307 DEBUG: Row (63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,307 DEBUG: Row (68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,308 DEBUG: Row (69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,308 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,308 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,308 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,308 DEBUG: Row (97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None, 106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,308 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,309 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,309 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 2, 11, 11, 36, 20, 238219), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,309 DEBUG: Row (100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None, 110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,309 DEBUG: Row (107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 2, 11, 11, 36, 20, 238219), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,309 DEBUG: Row (108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,309 DEBUG: Row (112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,310 DEBUG: Row (109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,310 DEBUG: Row (110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,310 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,310 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,310 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,310 DEBUG: Row (101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None, 114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,310 DEBUG: Row (111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,311 DEBUG: Row (113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,311 DEBUG: Row (114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,311 DEBUG: Row (106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,312 DEBUG: Row (106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None, 129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,312 DEBUG: Row (128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,312 DEBUG: Row (129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,312 DEBUG: Row (102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,312 DEBUG: Row (102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None, 115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,313 DEBUG: Row (117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,313 DEBUG: Row (116, 'Frontend Logout Button', 33, 'Add a logout button to the UI and handle session clearing.', 'Subtask', False, False, 'Not Started', None, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 2, 9, 12, 31, 17, 939784), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,313 DEBUG: Row (115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,313 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,313 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,313 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,313 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,314 DEBUG: Row (61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None, 45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,314 DEBUG: Row (45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None, 51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,314 DEBUG: Row (50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 22, 274304), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,314 DEBUG: Row (51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,314 DEBUG: Row (46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None, 54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:36:23,314 DEBUG: Row (54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,314 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None, 56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,314 DEBUG: Row (47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None, 55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,314 DEBUG: Row (56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,315 DEBUG: Row (55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,315 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None, 58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,315 DEBUG: Row (48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None, 57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,315 DEBUG: Row (57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,315 DEBUG: Row (58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,315 DEBUG: Row (49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None, 60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,315 DEBUG: Row (59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 15, 491910), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,316 DEBUG: Row (60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,316 DEBUG: Row (41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, 5, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 11, 8, 25, 7, 992524), None, 52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,316 DEBUG: Row (52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,316 DEBUG: Row (53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 24, 54, 245010), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,317 DEBUG: Row (42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, 5, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 47, 274896), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,317 DEBUG: Row (43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 33, 908549), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,317 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,318 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,318 DEBUG: Row (84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None, 87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,318 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,318 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,319 DEBUG: Row (85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None, 90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,319 DEBUG: Row (90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,319 DEBUG: Row (88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,319 DEBUG: Row (89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,319 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,319 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,319 DEBUG: Row (86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None, 91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,319 DEBUG: Row (93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,319 DEBUG: Row (91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,320 DEBUG: Row (92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,320 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,320 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,320 DEBUG: Row (87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None, 96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,320 DEBUG: Row (96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,320 DEBUG: Row (94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,320 DEBUG: Row (95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,321 DEBUG: Row (127, 'Backend API for Password Reset', 68, 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'Subtask', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 2, 10, 23, 59, 50, 734037), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,321 DEBUG: Row (126, 'Email Configuration for Password Reset', 69, 'Configure email service to send password reset links.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 334340), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,322 DEBUG: Row (104, 'Middleware for Role Enforcement', 70, 'As a system, I want to enforce role-based access to specific routes.', 'User Story', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 23, 40, 346816), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,322 DEBUG: Row (122, 'Testing Role Enforcement', 71, 'Write tests to ensure proper access control based on roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 185693), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,322 DEBUG: Row (121, 'Develop Role Enforcement Middleware', 72, 'Implement middleware to check user roles for access control.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 187439), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,322 DEBUG: Row (105, 'Profile Management', 73, 'As a user, I want to update my profile (username, email, password).', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 339830), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,322 DEBUG: Row (123, 'Backend API for Profile Management', 74, 'Create PATCH /api/profile endpoint to update user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 678781), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,322 DEBUG: Row (125, 'Testing Profile Updates', 75, 'Write tests for profile update functionality.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 680382), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:36:23,325 INFO: SELECT count(*) AS count_1 
FROM (SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.is_archived = false) AS anon_1
2025-02-11 12:36:23,325 INFO: [cached since 2651s ago] {}
2025-02-11 12:36:23,326 DEBUG: Col ('count_1',)
2025-02-11 12:36:23,326 DEBUG: Row (131,)
2025-02-11 12:36:23,327 INFO: SELECT DISTINCT task.task_type AS task_task_type 
FROM task
2025-02-11 12:36:23,327 INFO: [cached since 2651s ago] {}
2025-02-11 12:36:23,328 DEBUG: Col ('task_task_type',)
2025-02-11 12:36:23,328 DEBUG: Row ('Epic',)
2025-02-11 12:36:23,328 DEBUG: Row ('Subtask',)
2025-02-11 12:36:23,328 DEBUG: Row ('User Story',)
2025-02-11 12:36:23,328 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project
2025-02-11 12:36:23,329 INFO: [cached since 2651s ago] {}
2025-02-11 12:36:23,329 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:36:23,329 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 12:36:23,329 DEBUG: Row (2, 'Project Beta', datetime.date(2024, 2, 1), datetime.date(2024, 11, 30), None, 10, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 12:36:23,329 DEBUG: Row (3, 'Project Gamma', datetime.date(2024, 3, 1), datetime.date(2024, 10, 31), None, 20, datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), datetime.datetime(2024, 12, 11, 1, 37, 19, 511738))
2025-02-11 12:36:23,329 DEBUG: Row (4, 'Project Theta', datetime.date(2024, 12, 11), datetime.date(2024, 12, 27), None, 0, datetime.datetime(2024, 12, 12, 19, 26, 42, 642098), datetime.datetime(2024, 12, 12, 19, 26, 42, 642102))
2025-02-11 12:36:23,329 DEBUG: Row (5, 'Project Delta', datetime.date(2025, 1, 4), datetime.date(2025, 3, 8), None, 0, datetime.datetime(2025, 1, 3, 8, 16, 18, 658051), datetime.datetime(2025, 1, 3, 8, 16, 18, 658058))
2025-02-11 12:36:23,329 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259))
2025-02-11 12:36:23,330 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:36:23,331 DEBUG: Tasks passed to template: [{'id': 290, 'name': 'issue: error when changing task type and', 'description': 'issue: error when changing task type and parent task before saving', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:00:03.417734', 'updated_at': '2025-02-10T09:15:09.284969'}, {'id': 298, 'name': 'example user story with parent epic 297', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 297, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:41:01.907455', 'updated_at': '2025-02-10T14:59:04.142570'}, {'id': 275, 'name': 'add sprints, cycles', 'description': 'Make naming customizable', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:48:52.680022', 'updated_at': '2025-02-10T08:38:37.622196'}, {'id': 276, 'name': 'add support for priority', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:49:26.189497', 'updated_at': '2025-02-10T08:28:47.447612'}, {'id': 264, 'name': 'close all / open all childtasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:25:20.101418', 'updated_at': '2025-02-10T08:47:14.915970'}, {'id': 285, 'name': 'add text truncation to project names in task list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:45:47.027805', 'updated_at': '2025-02-10T09:45:47.029729'}, {'id': 257, 'name': 'Update Task API Integration', 'description': "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 240, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-02-05T22:55:49.566819', 'updated_at': '2025-02-05T22:18:17.807154'}, {'id': 294, 'name': 'issue: task table filters not working', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:19:21.022598', 'updated_at': '2025-02-10T10:19:21.024676'}, {'id': 267, 'name': 'improvements to toggles and nested tasks', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:29:12.464594', 'updated_at': '2025-02-10T08:47:24.581680'}, {'id': 283, 'name': 'fix update title', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:58.769700', 'updated_at': '2025-02-10T08:46:47.282087'}, {'id': 271, 'name': 'make sure dynamically added rows has the exact same styling and includes every element', 'description': 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:21:07.108431', 'updated_at': '2025-02-10T08:38:47.340105'}, {'id': 273, 'name': 'disable parent task selector in epics', 'description': 'and add text, Epic can´t have parent tasks', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:45:20.740910', 'updated_at': '2025-02-10T08:39:17.639890'}, {'id': 269, 'name': 'fix styling for sweetalert', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'In Progress', 'created_at': '2025-02-08T15:54:56.717846', 'updated_at': '2025-02-10T08:39:32.172437'}, {'id': 286, 'name': 'add support for labels/tags', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:46:23.985620', 'updated_at': '2025-02-10T09:46:23.987564'}, {'id': 299, 'name': 'example sub task with parent user story 298', 'description': 'Test update 1\nTest update 2\nTest update 3', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 298, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:42:38.905700', 'updated_at': '2025-02-10T23:23:08.671464'}, {'id': 266, 'name': 'highlight the nested tasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:28:30.382949', 'updated_at': '2025-02-10T08:47:04.382929'}, {'id': 279, 'name': 'github integration', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:38.238202', 'updated_at': '2025-02-10T08:39:24.168451'}, {'id': 289, 'name': 'issue: parent task is lost when updating task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:56:25.273984', 'updated_at': '2025-02-10T09:12:47.626993'}, {'id': 278, 'name': 'search feature for tasks list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:03.369833', 'updated_at': '2025-02-10T08:39:04.005957'}, {'id': 281, 'name': 'add high level plan', 'description': 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:27:01.218606', 'updated_at': '2025-02-10T08:38:54.754760'}, {'id': 287, 'name': 'when moving a parent item to another project make sure the subtasks are moved as well', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:48:31.986870', 'updated_at': '2025-02-10T09:48:31.988859'}, {'id': 272, 'name': 'implement a markdown text editor like notion', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:28:18.300231', 'updated_at': '2025-02-10T08:28:39.669255'}, {'id': 293, 'name': 'click on title should copy the task title and id to clipboard', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:16:33.508209', 'updated_at': '2025-02-10T10:16:33.510414'}, {'id': 277, 'name': 'custom task workflow statuses', 'description': 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- Custom status\n-- Custom status\n- In Progress\n-- Custom status\n-- Custom status\n-- Custom status\n- Completed\n-- Custom status\n-- Custom status\n\n2. How can we track a task through different stages and save the sequence of events or stages the task has gone through?\nI´m thinking it could be good for mapping out processes, identifying bottlenecks and provide valuable insights while improving and streamlining workflows.\n- Stages\n- Contacts taken\n- Respons time \n- Time to action after responses\n- Dependencies\n\nNeed to be able to record every action related to this action.\nCommunication integrations\n- Slack\n- Email\n- Text messages\n- Phonecalls\n- Calendar events, meetings\n- Zoom, Google meet, Teams etc..\n\n\n2. Set custom statuses per project (can use tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:16:03.352588', 'updated_at': '2025-02-10T08:38:28.123328'}, {'id': 274, 'name': 'add support for goals, initiatives, okr´s', 'description': 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:46:27.204912', 'updated_at': '2025-02-10T08:28:17.663922'}, {'id': 280, 'name': 'logging (task and project history)', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:37:44.435112', 'updated_at': '2025-02-10T08:28:28.947805'}, {'id': 282, 'name': 'implement same task list in projects but filtered on project', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:17.786154', 'updated_at': '2025-02-10T09:41:17.787861'}, {'id': 296, 'name': 'issue: contributor is lost after updating task', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:26:43.881947', 'updated_at': '2025-02-10T10:26:43.884004'}, {'id': 288, 'name': 'when trying to move subtask to another project, make sure a warning is displayed', 'description': 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be lost"\nOR\n\nIs it possible, and is it desireable to keep parent child relationships across projects?\nSo that a parent can be in one project but the child tasks can be in different projects?\n\nLets say \nParent epic is \n"Internationalisation"\nChild user stories are\n- Timezones\n- Language\n- Currency\n- Day, Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:54:36.297869', 'updated_at': '2025-02-10T08:54:51.840686'}, {'id': 284, 'name': 'add type "issue/bug"', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:42:27.719439', 'updated_at': '2025-02-10T09:42:27.720908'}, {'id': 295, 'name': 'issue: drag and drop errors', 'description': '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:22:54.461413', 'updated_at': '2025-02-10T10:22:54.462542'}, {'id': 297, 'name': 'example parent epic', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:39:51.620509', 'updated_at': '2025-02-10T10:39:51.622712'}, {'id': 292, 'name': 'issue: assigning contributor does not work', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:11:12.273779', 'updated_at': '2025-02-10T10:11:12.274809'}, {'id': 265, 'name': 'smooth transition for toggles', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:27:23.422612', 'updated_at': '2025-02-10T08:46:55.831743'}, {'id': 270, 'name': 'the newest task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:07:34.368035', 'updated_at': '2025-02-10T01:07:34.372478'}, {'id': 291, 'name': 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:09:52.988609', 'updated_at': '2025-02-10T10:09:52.997455'}, {'id': 136, 'name': 'Page scroll should stay in position when reloading', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-16T18:21:50.187247', 'updated_at': '2025-01-16T19:22:36.214901'}, {'id': 130, 'name': 'Implement the Map of Task Relationships solution for drag-and-drop', 'description': 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.093022', 'updated_at': '2025-01-16T19:22:36.216705'}, {'id': 133, 'name': 'Step 4: Enhance Logging in models.py', 'description': 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nupdating the Task model in the following ways:\n\n1.\tLog Changes to parent_id:\n\t•\tLog changes to parent_id during updates, including old and new values.\n\t2.\tValidate Hierarchy with Logging:\n\t•\tLog detailed messages when validating hierarchy changes, especially for circular dependency checks.\n\nHere’s how the models.py can be updated:\n```\nfrom datetime import datetime, timezone\nfrom sqlalchemy import func, cast, CheckConstraint\nfrom sqlalchemy.orm import validates\nfrom app.extensions.db import db\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\nclass Task(db.Model):\n    __tablename__ = "task"\n    \n    # Other columns...\n\n    parent_id = db.Column(\n        db.Integer, db.ForeignKey("task.id"), index=True, nullable=True\n    )\n\n    # Relationships\n    parent = db.relationship(\n        "Task", remote_side=[id], back_populates="children", lazy="select"\n    )\n    children = db.relationship(\n        "Task", back_populates="parent", lazy="select"\n    )\n\n    \n\n\n    @staticmethod\n    def _validate_no_circular_references(new_parent_id):\n        """\n        Validates that there are no circular references in the task hierarchy.\n\n        Args:\n            new_parent_id (int): The new parent ID to validate.\n\n        Raises:\n            ValueError: If a circular reference is detected.\n        """\n        visited = set()\n        current_parent_id = new_parent_id\n\n        logger.info(f"Validating circular references for parent ID: {new_parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error(\n                    f"Circular reference detected: Parent ID {current_parent_id} already visited."\n                )\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            # Fetch the next parent_id in the hierarchy\n            parent = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not parent:\n                break  # Exit if no parent is found\n            current_parent_id = parent.parent_id\n\n        logger.info("No circular reference detected.")\n\n    @validates(\'parent_id\', \'task_type\')\n    def validate_task_changes(self, key, value):\n        """\n        Validates changes to \'parent_id\' and \'task_type\'.\n        Ensures hierarchy validity and checks for circular references.\n        """\n        logger.debug(f"Validating {key} change for Task {self.id}: {value}")\n\n        if key == \'parent_id\':\n            # Log changes to parent_id\n            if self.id and value != self.parent_id:\n                logger.info(f"Task {self.id}: Updating \'parent_id\' from {self.parent_id} to {value}")\n\n            # Prevent a task from being its own parent\n            if value and value == self.id:\n                logger.error("A task cannot be its own parent.")\n                raise ValueError("A task cannot be its own parent.")\n\n            # Check for circular references\n            if value:\n                Task.check_circular_reference(self.id, value)\n\n        elif key == \'task_type\':\n            # Log changes to task_type\n            if self.id and value != self.task_type:\n                logger.info(f"Task {self.id}: Updating \'task_type\' from {self.task_type} to {value}")\n\n        # Check hierarchy rules without triggering further validation\n        if key in [\'parent_id\', \'task_type\']:\n            self._validate_hierarchy_change(key, value)\n\n        logger.info(f"Validation passed for {key}: {value}")\n        return value\n\n    def _validate_hierarchy_change(self, key, value):\n        """\n        Validates hierarchy rules for the task based on `task_type` and `parent_id`.\n        """\n        if key == \'parent_id\' and value:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=value).first()\n            if not parent_task:\n                raise ValueError("Parent task does not exist.")\n\n            logger.debug(f"Validating hierarchy: Task {self.id}, Parent Type: {parent_task.task_type}")\n            if self.task_type == "User Story" and parent_task.task_type != "Epic":\n                raise ValueError("User Stories must have an Epic as a parent.")\n            if self.task_type == "Subtask" and parent_task.task_type != "User Story":\n                raise ValueError("Subtasks must have a User Story as a parent.")\n\n        elif key == \'task_type\' and self.parent_id:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=self.parent_id).first()\n            if parent_task:\n                logger.debug(f"Validating hierarchy: Task Type: {value}, Parent Type: {parent_task.task_type}")\n                if value == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError("User Stories must have an Epic as a parent.")\n                if value == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError("Subtasks must have a User Story as a parent.")\n\n        logger.info(f"Hierarchy validation passed for Task {self.id if self.id else \'New Task\'}.")\n\n    @staticmethod\n    def check_circular_reference(task_id, parent_id):\n        """\n        Iteratively checks for circular references in the task hierarchy.\n        Prevents stack overflow on deep hierarchies.\n        """\n        visited = set()\n        current_parent_id = parent_id\n\n        logger.info(f"Checking circular reference for Task {task_id} with Parent ID: {parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error("Circular reference detected!")\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            if current_parent_id == task_id:\n                logger.error("A task cannot be its own ancestor.")\n                raise ValueError("A task cannot be its own ancestor.")\n\n            # Fetch the next parent_id in the hierarchy\n            task = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not task:\n                break\n            current_parent_id = task.parent_id\n\n        logger.info("Circular reference check passed.")\n```\nKey Enhancements:\n\t1.\tlog_and_validate_parent_id_change:\n\t•\tLogs the old and new parent_id whenever it changes.\n\t•\tEnsures no circular references are introduced.\n\t2.\t_validate_no_circular_references:\n\t•\tValidates the parent_id field to prevent circular dependencies.\n\t•\tLogs progress and raises detailed errors if violations occur.\n\t3.\tlog_and_validate_task_type_change:\n\t•\tLogs changes to task_type with the old and new values.\n\t•\tRevalidates hierarchy rules when task_type changes.\n\t4.\tDetailed Logging for Circular Reference Validation:\n\t•\t_validate_no_circular_references and check_circular_reference methods log every step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:44:08.340041', 'updated_at': '2025-01-16T19:22:36.219710'}, {'id': 132, 'name': 'Step 1: Update tasks_table_interactions.js', 'description': '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the map for efficient parent-child relationship lookups instead of DOM traversal.\n\n```\nexport const TaskManager = {\n    init: function (csrfToken) {\n        this.csrfToken = csrfToken;\n        this.initTaskParentMap(); // Initialize the map\n        this.initDragAndDrop(); // Initialize drag-and-drop functionality\n    },\n\n    // Initialize a global map for task relationships\n    taskParentMap: new Map(),\n\n    // Build the taskParentMap from the DOM\n    initTaskParentMap: function () {\n        console.log("Initializing Task Parent Map...");\n        const rows = document.querySelectorAll("tr[data-task-id]");\n\n        rows.forEach((row) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = parseInt(row.dataset.parentId, 10) || null;\n            this.taskParentMap.set(taskId, parentId);\n        });\n\n        console.log("Task Parent Map initialized:", Array.from(this.taskParentMap.entries()));\n    },\n\n    // Update the map dynamically after drag-and-drop\n    updateTaskParentMap: function (taskId, parentId) {\n        console.log(`Updating Task Parent Map: Task ${taskId} -> Parent ${parentId}`);\n        this.taskParentMap.set(taskId, parentId);\n    },\n\n    initDragAndDrop: function () {\n        if (window.isDragAndDropInitialized) {\n            console.log("Drag-and-drop is already initialized.");\n            return;\n        }\n\n        console.log("Initializing drag-and-drop within TaskManager...");\n\n        const tableBody = document.querySelector("tbody");\n        if (!tableBody) {\n            console.warn("Task table body not found for drag-and-drop initialization");\n            return;\n        }\n\n        // Initialize Sortable.js for drag-and-drop functionality\n        Sortable.create(tableBody, {\n            handle: ".task-row", // Only draggable via `.task-row` elements\n            animation: 150, // Smooth animation\n            filter: ".task-open-link", // Prevent dragging on task links\n            preventOnFilter: true, // Prevent drag if filtered element is clicked\n            onEnd: async (event) => {\n                try {\n                    console.log("Drag-and-drop operation started...");\n                    const rows = Array.from(event.from.querySelectorAll(".task-row"));\n                    const reorderedTasks = [];\n\n                    rows.forEach((row, index) => {\n                        const taskId = parseInt(row.dataset.taskId, 10);\n                        let parentId = null;\n\n                        // Get the parent ID from the map or fallback to the dataset\n                        if (row.classList.contains("subtask-row")) {\n                            const parentRow = row.previousElementSibling;\n                            parentId = parentRow\n                                ? parseInt(parentRow.dataset.taskId, 10)\n                                : this.taskParentMap.get(taskId) || null;\n                        }\n\n                        // Update the taskParentMap dynamically\n                        this.updateTaskParentMap(taskId, parentId);\n\n                        reorderedTasks.push({\n                            id: taskId,\n                            sort_order: index + 1,\n                            parent_id: parentId,\n                        });\n                    });\n\n                    console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n                    console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n                    // Send the payload to the backend\n                    const response = await fetch("/tasks/reorder_subtasks", {\n                        method: "POST",\n                        headers: {\n                            "Content-Type": "application/json",\n                            "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n                        },\n                        body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n                    });\n\n                    if (!response.ok) {\n                        const errorData = await response.json();\n                        console.error("Error reordering tasks:", errorData);\n                        alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n                        return;\n                    }\n\n                    const data = await response.json();\n                    console.log("Task reordering successful:", data);\n\n                } catch (error) {\n                    console.error("Error during drag-and-drop operation:", error);\n                    alert("An unexpected error occurred while reordering tasks.");\n                }\n            },\n        });\n\n        window.isDragAndDropInitialized = true;\n        console.log("Drag-and-drop initialized successfully.");\n    },\n};\n```\n\nKey Updates:\n\t1.\tPrecomputed Map (taskParentMap):\n\t•\tThe initTaskParentMap function initializes the map by iterating over DOM elements and mapping each task’s ID to its parent ID.\n\t•\tThe updateTaskParentMap dynamically updates the map when tasks are reordered.\n\t2.\tEfficient Parent Lookup:\n\t•\tThe parentId is derived from the precomputed map rather than DOM traversal.\n\t3.\tBackend Payload:\n\t•\tA structured payload (reorderedTasks) is sent to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:44:08.338301', 'updated_at': '2025-02-06T21:59:17.417466'}, {'id': 134, 'name': 'Step 2: Update the Backend in routes.py', 'description': 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\nPlan for step 2:\n\t1.\tVerify the payload structure:\n\t•\tEnsure that the payload includes all necessary fields (id, sort_order, parent_id) for each task.\n\t•\tValidate that the parent-child relationships in the precomputed map (taskParentMap) are reflected correctly in the payload.\n\t2.\tSubmit the payload to the backend:\n\t•\tEnhance the fetch request in the onEnd function of initDragAndDrop to log detailed submission data.\n\t•\tConfirm the payload integrity in the browser console before submission.\n\t3.\tUpdate backend logging:\n\t•\tAdd logging to /reorder_subtasks in routes.py to confirm receipt of the correct payload and process parent-child updates.\n\t•\tLog before and after database updates for better debugging.\n\n-----\nUpdated tasks_table_interactions.js\n\nReplace this section:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    let parentId = null;\n```\nWith:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    const parentId = this.taskParentMap.get(taskId) || null;\n```\nThe this.taskParentMap provides a precomputed and dynamic mapping of taskId to parentId. By using this map, we avoid relying on DOM traversal logic (row.closest or row.previousElementSibling) during drag-and-drop operations, which can sometimes be unreliable or cumbersome.\n\nFull Revised onEnd section:\n```\nonEnd: async (event) => {\n    try {\n        console.log("Drag-and-drop operation started...");\n        const rows = Array.from(event.from.querySelectorAll(".task-row"));\n        const reorderedTasks = [];\n\n        rows.forEach((row, index) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = this.taskParentMap.get(taskId) || null;\n\n            // Update the taskParentMap dynamically\n            this.updateTaskParentMap(taskId, parentId);\n\n            reorderedTasks.push({\n                id: taskId,\n                sort_order: index + 1,\n                parent_id: parentId,\n            });\n        });\n\n        console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n        console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n        // Send the payload to the backend\n        const response = await fetch("/tasks/reorder_subtasks", {\n            method: "POST",\n            headers: {\n                "Content-Type": "application/json",\n                "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n            },\n            body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            console.error("Error reordering tasks:", errorData);\n            alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n            return;\n        }\n\n        const data = await response.json();\n        console.log("Task reordering successful:", data);\n\n    } catch (error) {\n        console.error("Error during drag-and-drop operation:", error);\n        alert("An unexpected error occurred while reordering tasks.");\n    }\n}\n```\n---------------------------------\nEnsure updates include:\n\t•\tBetter Logging: Adding logs for key events such as database changes and validation results.\n\t•\tInput Validation: Ensure all required fields (id, sort_order, parent_id) exist in the payload.\n\t•\tPost-Commit Validation: Confirm database updates after the commit.\n\t•\tImproved Error Handling: Include specific error messages and consistent rollback mechanisms.\n\nBelow is the revised reorder_subtasks route with descriptive comments for each section:\n```\n@bp.route("/reorder_subtasks", methods=["POST"])\ndef reorder_subtasks():\n    """\n    Reorder subtasks globally or reassign them to a different parent.\n\n    Steps:\n    - Parse and validate input from the frontend.\n    - Update parent-child relationships and sort order in the database.\n    - Commit changes and return a success response.\n    - Handle errors gracefully and provide detailed logs for debugging.\n    """\n    logger.info("Entering reorder_subtasks route...")\n    logger.info(f"Received payload for reordering tasks: {request.json}")\n\n    try:\n        # Step 1: Parse input\n        parent_id = request.json.get("parent_id", None)  # Optional parent ID for the tasks being reordered\n        ordered_tasks = request.json.get("ordered_tasks", [])\n\n        logger.debug(f"Parsed parent_id: {parent_id}")\n        logger.debug(f"Parsed ordered_tasks: {ordered_tasks}")\n\n        # Step 2: Validate input\n        if not isinstance(ordered_tasks, list) or not all(\n            isinstance(task, dict) and "id" in task and "sort_order" in task and "parent_id" in task\n            for task in ordered_tasks\n        ):\n            logger.error(f"Invalid input received for ordered_tasks: {ordered_tasks}")\n            return jsonify({\n                "error": "Invalid input format for \'ordered_tasks\'. Each task must include \'id\', \'sort_order\', and \'parent_id\'."\n            }), 400\n\n        # Step 3: Validate parent task (if applicable)\n        if parent_id is not None:\n            parent_task = Task.query.get(parent_id)\n            if not parent_task:\n                logger.error(f"Parent task with ID {parent_id} not found.")\n                return jsonify({"error": f"Parent ID {parent_id} is invalid or does not exist."}), 400\n\n        logger.info("Input validation passed. Proceeding with task updates...")\n\n        # Step 4: Process updates for each subtask\n        updated_subtasks = []  # Keep track of updated subtasks for post-commit validation\n\n        for task_data in ordered_tasks:\n            subtask_id = task_data["id"]\n            sort_order = task_data["sort_order"]\n            new_parent_id = task_data["parent_id"]\n\n            # Fetch the subtask from the database\n            subtask = Task.query.get(subtask_id)\n            if not subtask:\n                logger.warning(f"Subtask ID {subtask_id} not found. Skipping...")\n                continue\n\n            # Log and update parent_id if it changes\n            if new_parent_id is not None and new_parent_id != subtask.parent_id:\n                logger.info(f"Reassigning subtask {subtask.id} to new parent {new_parent_id}")\n                subtask.parent_id = new_parent_id\n\n            # Update sort order\n            subtask.sort_order = sort_order\n            logger.debug(f"Updated subtask {subtask.id}: parent_id={subtask.parent_id}, sort_order={subtask.sort_order}")\n\n            # Add to the list of updated subtasks for validation\n            updated_subtasks.append(subtask)\n\n        # Step 5: Commit changes to the database\n        try:\n            db.session.commit()\n            logger.info(f"Subtasks reordered successfully: {[task[\'id\'] for task in ordered_tasks]}")\n        except Exception as e:\n            logger.error(f"Error committing changes to the database: {str(e)}")\n            db.session.rollback()\n            return jsonify({"error": "Failed to save changes to the database. Please try again."}), 500\n\n        # Step 6: Post-commit validation\n        for subtask in updated_subtasks:\n            logger.debug(f"Post-commit parent_id for task {subtask.id}: {subtask.parent_id}")\n            logger.debug(f"Post-commit sort_order for task {subtask.id}: {subtask.sort_order}")\n\n        # Step 7: Return success response\n        return jsonify({\n            "success": True,\n            "message": "Subtasks reordered successfully.",\n            "updated_subtasks": [subtask.id for subtask in updated_subtasks]\n        }), 200\n\n    except Exception as e:\n        # Step 8: Handle unexpected errors\n        logger.error(f"Error while reordering subtasks: {str(e)}", exc_info=True)\n        db.session.rollback()\n        return jsonify({"error": "An unexpected error occurred while reordering subtasks."}), 500\n```\nKey Changes and Descriptive Comments\n\t1.\tInput Parsing:\n\t•\tExtracts parent_id and ordered_tasks from the request payload.\n\t•\tLogs the parsed values for debugging.\n\t2.\tInput Validation:\n\t•\tEnsures ordered_tasks is a list of dictionaries with the required keys.\n\t•\tValidates parent_id if provided, ensuring the parent task exists in the database.\n\t3.\tUpdate Processing:\n\t•\tIterates through ordered_tasks, updating each task’s parent_id and sort_order.\n\t•\tLogs changes for each task.\n\t4.\tDatabase Commit:\n\t•\tCommits all updates in a single transaction.\n\t•\tLogs success or rolls back changes in case of an error.\n\t5.\tPost-Commit Validation:\n\t•\tVerifies that the parent_id and sort_order changes were successfully saved to the database.\n\t6.\tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:46:29.348853', 'updated_at': '2025-02-06T21:59:21.617065'}, {'id': 131, 'name': 'Step 5: Update utils.py', 'description': 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nChanges to Make:\n\t1.\tEnhance Task Filtering:\n\t•\tEnsure the filters handle parent-child relationships explicitly.\n\t•\tAdd options to include or exclude subtasks in queries.\n\t2.\tUtility Function for Debugging Parent-Child Relationships:\n\t•\tProvide a function to generate a map or list of parent-child relationships for debugging purposes.\n\t3.\tValidation Functions:\n\t•\tAdd a utility function to validate parent-child relationships and ensure no circular dependencies.\n\nUpdated utils.py Code:\n```\nimport logging\nfrom sqlalchemy import func\nfrom sqlalchemy.orm import joinedload\nfrom app.extensions.db import db\nfrom app.tasks.models import Task\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\n\nclass TaskService:\n    @staticmethod\n    def filter_tasks(filters=None, include_subtasks=True, page=None, per_page=None):\n        """\n        Dynamically filters tasks with an option to include or exclude subtasks.\n\n        Args:\n            filters (dict): Filtering criteria.\n            include_subtasks (bool): Whether to include subtasks in the query.\n            page (int, optional): Page number for pagination.\n            per_page (int, optional): Items per page for pagination.\n\n        Returns:\n            Query or Pagination: A SQLAlchemy query object or paginated results.\n        """\n        query = Task.query.options(\n            db.joinedload(Task.project).joinedload(Project.contributors),\n            db.joinedload(Task.contributor),\n            db.joinedload(Task.children),\n        ).order_by(Task.sort_order)\n\n        if filters:\n            logger.debug(f"Applying filters: {filters}")\n\n            # Apply standard filters\n            if "is_archived" in filters:\n                query = query.filter(Task.is_archived == filters["is_archived"])\n            if "project_id" in filters:\n                query = query.filter(Task.project_id == filters["project_id"])\n            if "task_type" in filters:\n                if isinstance(filters["task_type"], list):\n                    query = query.filter(Task.task_type.in_(filters["task_type"]))\n                else:\n                    query = query.filter(Task.task_type == filters["task_type"])\n            if "completion_status" in filters:\n                completion_map = {"completed": True, "in_progress": False}\n                if filters["completion_status"] in completion_map:\n                    query = query.filter(Task.completed == completion_map[filters["completion_status"]])\n\n            # Optionally exclude subtasks\n            if not include_subtasks:\n                query = query.filter(Task.task_type != "Subtask")\n\n        logger.debug(f"Generated query: {query}")\n\n        # Pagination\n        if page and per_page:\n            return query.paginate(page=page, per_page=per_page, error_out=False)\n        return query\n\n    @staticmethod\n    def debug_parent_child_relationships(project_id=None):\n        """\n        Generates a debug map of parent-child relationships for all tasks.\n\n        Args:\n            project_id (int, optional): Restrict to tasks from a specific project.\n\n        Returns:\n            dict: A dictionary mapping parent IDs to their child task IDs.\n        """\n        query = Task.query\n        if project_id:\n            query = query.filter(Task.project_id == project_id)\n\n        tasks = query.options(\n            db.load_only(Task.id, Task.parent_id)\n        ).all()\n\n        relationship_map = {}\n        for task in tasks:\n            if task.parent_id not in relationship_map:\n                relationship_map[task.parent_id] = []\n            relationship_map[task.parent_id].append(task.id)\n\n        logger.debug(f"Parent-Child Relationship Map: {relationship_map}")\n        return relationship_map\n\n    @staticmethod\n    def validate_parent_child_relationships():\n        """\n        Validates all parent-child relationships in the database to ensure they conform to hierarchy rules.\n\n        Raises:\n            ValueError: If invalid relationships are detected.\n        """\n        tasks = Task.query.options(db.joinedload(Task.parent)).all()\n\n        for task in tasks:\n            if task.parent_id:\n                parent_task = task.parent\n                if not parent_task:\n                    raise ValueError(f"Task {task.id} has an invalid parent ID {task.parent_id}.")\n\n                # Validate hierarchy rules\n                if task.task_type == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError(f"User Story {task.id} must have an Epic as its parent.")\n                if task.task_type == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError(f"Subtask {task.id} must have a User Story as its parent.")\n\n        logger.info("All parent-child relationships are valid.")\n\n    @staticmethod\n    def get_all_task_ids_with_parents():\n        """\n        Returns a flat list of tasks with their parent IDs for debugging.\n\n        Returns:\n            list: A list of tuples (task_id, parent_id).\n        """\n        tasks = Task.query.with_entities(Task.id, Task.parent_id).all()\n        logger.debug(f"Task IDs with Parent IDs: {tasks}")\n        return tasks\n```\n\n\nExplanation of Changes:\n\t1.\tfilter_tasks Enhancements:\n\t•\tAdded include_subtasks parameter to optionally exclude subtasks from the query.\n\t2.\tdebug_parent_child_relationships:\n\t•\tCreates a parent-child relationship map for debugging purposes.\n\t3.\tvalidate_parent_child_relationships:\n\t•\tIterates through all tasks to validate parent-child hierarchy and ensures no invalid relationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.091824', 'updated_at': '2025-01-16T19:22:36.236691'}, {'id': 135, 'name': 'Step 3: Update list.html', 'description': 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already includes everything needed. No required changes.\n\nHere´s the relevant section of list.html:\n\n```\n<tr id="task-{{ task.id }}"\n                class="task-row {% if task.task_type == \'Subtask\' %}subtask-row{% elif task.task_type == \'User Story\' %}user-story-row{% elif task.task_type == \'Epic\' %}epic-row{% endif %}"\n                style="background-color: \n                {% if task.task_type == \'Subtask\' %}\n                    rgba(200, 230, 255, 0.5); /* Light blue for Subtask */\n                {% elif task.task_type == \'User Story\' %}\n                    rgba(255, 255, 200, 0.5); /* Light yellow for User Story */\n                {% elif task.task_type == \'Epic\' %}\n                    rgba(255, 200, 200, 0.5); /* Light red for Epic */\n                {% else %}\n                    rgba(240, 240, 240, 1); /* Default light gray */\n                {% endif %};"\n                data-task-id="{{ task.id }}"\n                data-parent-id="{{ task.parent_id or \'\' }}"\n                data-level="{{ depth }}">\n                <td><input type="checkbox" name="batch_update" value="{{ task.id }}"></td>\n                <td>\n                    {% if tasks|selectattr("parent_id", "equalto", task.id)|list %}\n                    <button class="btn btn-sm toggle-details" data-task-id="{{ task.id }}" aria-label="Toggle details for task {{ task.name }}">\n                        <i class="bi bi-chevron-right"></i>\n                    </button>\n                    {% endif %}\n                </td>\n                <td class="fw-medium fs-6 \n                {% if task.task_type == \'Epic\' %}\n                    epic-cell\n                {% elif task.task_type == \'User Story\' %}\n                    user-story-cell\n                {% elif task.task_type == \'Subtask\' %}\n                    subtask-cell\n                {% endif %}" \n                style="padding-left: {{ depth|default(0) * 20 }}px; position: relative;">\n                <span class="bi fs-6\n                {% if task.task_type == \'Epic\' %}\n                    bi-circle-fill\n                {% elif task.task_type == \'User Story\' %}\n                    bi-circle-half\n                {% elif task.task_type == \'Subtask\' %}\n                    bi-circle\n                {% endif %}">\n                </span>\n                {{ task.name }}\n                <small class="text-muted fw-light">\n                    (Parent-ID: {{ task.parent_id or \'None\' }})\n                </small>\n                <!-- Open Link -->\n                <a href="#" class="task-open-link" data-task-id="{{ task.id }}">\n                    <i class="bi bi-arrows-angle-expand" style="font-size: 0.8rem; color: white;"></i>\n                    Open\n                </a>\n            </td>\n                <td class="fw-light fs-6">\n                    <small class>\n                    LAC-{{ task.id }}\n                    </small>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light text-bg-secondary">\n                        {{ task.project if task.project else "Unknown Project" }}\n                    </span>\n                </td>\n                <td class="fs-6" data-contributor-column>{{ task.assigned_to if task.assigned_to else "Unassigned" }}</td>\n                <td class="fs-6">{{ task.story_points }}</td>\n                <td class="fs-6">\n                    <span class="badge rounded-pill fw-light text-bg-light">\n                        {{ task.task_type }}\n                    </span>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light {% if task.completed %}text-bg-success{% else %}text-bg-warning{% endif %}">\n                        {{ "Completed" if task.completed else "In Progress" }}\n                    </span>\n                </td>\n                <td>\n                    <!-- Delete Icon -->\n                    <button class="btn btn-dark btn-sm delete-task-btn" style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .2rem; --bs-btn-font-size: .75rem;" data-task-id="{{ task.id }}" aria-label="Deletes task {{ task.id }}">\n                        <i class="bi bi-trash"></i>\n                    </button>\n                </td>\n            </tr>\n            {% for child in tasks if child.parent_id == task.id %}\n                {{ render_task(child, tasks, depth + 1) }}\n            {% endfor %}\n            {% endmacro %}\n            \n            <!-- Render top-level tasks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:46:29.349784', 'updated_at': '2025-01-16T19:22:36.238473'}, {'id': 82, 'name': 'Implement Third-Party Authentication', 'description': 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitHub Login involves integrating OAuth 2.0, which both services support. The complexity depends on your app’s existing setup, frameworks, and experience with third-party authentication. Below is a breakdown:\n\nKey Steps for Implementing Google or GitHub Login\n\t1.\tSet Up OAuth Credentials:\n\t•\tRegister your application in the Google Cloud Console or GitHub Developer Settings.\n\t•\tObtain the client ID and client secret.\n\t2.\tInstall Required Libraries:\n\t•\tUse a library for OAuth (e.g., flask-oauthlib, python-social-auth, or authlib).\n\t•\tPopular frameworks like Flask and Django already have robust integrations for OAuth providers.\n\t3.\tBackend Configuration:\n\t•\tImplement an endpoint to handle the OAuth flow (/auth/login/google or /auth/login/github).\n\t•\tConfigure your app to send users to Google or GitHub’s authentication page.\n\t•\tHandle the OAuth callback to exchange the authorization code for an access token.\n\t•\tVerify the token and fetch user information (e.g., email, name).\n\t4.\tLink OAuth to User Registration:\n\t•\tOn successful login, create or retrieve a user in your database.\n\t•\tStore the user’s details like email, OAuth provider ID, and access token.\n\t5.\tFrontend Integration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T12:15:54.291625', 'updated_at': '2025-01-16T19:22:36.239866'}, {'id': 62, 'name': 'Add OAuth integration for Google Login', 'description': 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.241200'}, {'id': 64, 'name': 'Setup project credentials for Google API', 'description': 'Generate client ID and secret from Google API Console for your application.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.242497'}, {'id': 67, 'name': 'Test Google OAuth flow', 'description': 'Verify the OAuth flow using test accounts and check the token exchange.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.243780'}, {'id': 65, 'name': 'Implement backend endpoints for Google OAuth', 'description': 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.244932'}, {'id': 63, 'name': 'Add OAuth integration for GitHub Login', 'description': 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.246358'}, {'id': 68, 'name': 'Register application in GitHub Developer Console', 'description': 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.247746'}, {'id': 69, 'name': 'Handle callback from GitHub', 'description': 'Implement the callback endpoint to process the authorization code from GitHub.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.248912'}, {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}, {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}, {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-02-11T11:36:20.238219'}, {'id': 108, 'name': '1.1.2 Backend API for Registration', 'description': '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:33.067643'}, {'id': 112, 'name': '1.2.2 Frontend Login Page', 'description': 'Develop a frontend form for user login with email and password inputs.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.683644'}, {'id': 109, 'name': '1.1.3 Create Frontend Registration Page', 'description': 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.684988'}, {'id': 110, 'name': '1.1.4 Unit Tests for Registration', 'description': 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.686902'}, {'id': 101, 'name': '1.2 User Login', 'description': 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:25:53.687936'}, {'id': 111, 'name': '1.2.1 Backend API for Login', 'description': 'Create POST /api/login endpoint to handle user login.\njjsjj', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.689096'}, {'id': 113, 'name': '1.2.3 Session Management', 'description': 'Implement secure session handling using cookies or JWT.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:20.968680'}, {'id': 114, 'name': '1.2.4 Unit Tests for Login', 'description': 'Write tests for successful and failed login attempts.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:22:36.265866'}, {'id': 106, 'name': 'Password Reset', 'description': 'As a user, I want to reset my password securely using email.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.267247'}, {'id': 128, 'name': 'Frontend Password Reset Page', 'description': 'Develop a page for users to enter a new password using a valid token.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.269158'}, {'id': 129, 'name': 'Testing Password Reset', 'description': 'Write tests for email delivery, token validation, and password updates.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.270849'}, {'id': 102, 'name': 'Logout', 'description': 'As a user, I want to log out so that I can end my session securely.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.272605'}, {'id': 117, 'name': 'Tests for Logout', 'description': 'Verify session invalidation and redirection to the login page.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.274575'}, {'id': 116, 'name': 'Frontend Logout Button', 'description': 'Add a logout button to the UI and handle session clearing.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-02-09T12:31:17.939784'}, {'id': 115, 'name': 'Backend API for Logout', 'description': 'Create POST /api/logout endpoint to invalidate user sessions.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.277547'}, {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}, {'id': 45, 'name': 'Display Default Value in Dropdown', 'description': 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.280493'}, {'id': 50, 'name': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'In Progress', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:22.274304'}, {'id': 51, 'name': 'Set Default Value', 'description': 'Set the default value in the dropdown based on the retrieved data.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 45, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 1, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.283309'}, {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882'}, {'id': 54, 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 46, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:29.251047'}, {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:26:23.067490'}, {'id': 56, 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:16.233517'}, {'id': 55, 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:08.099271'}, {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:59.651639'}, {'id': 57, 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:51.310240'}, {'id': 58, 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:43.569501'}, {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:36.133259'}, {'id': 59, 'name': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:15.491910'}, {'id': 60, 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 49, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:28.367797'}, {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-11T08:25:07.992524'}, {'id': 52, 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 41, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:01.469601'}, {'id': 53, 'name': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:24:54.245010'}, {'id': 42, 'name': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:47.274896'}, {'id': 43, 'name': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:33.908549'}, {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-02-11T08:24:26.494016'}, {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-02-11T08:24:21.069473'}, {'id': 90, 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:13.204884'}, {'id': 88, 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:05.873554'}, {'id': 89, 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:23:58.436495'}, {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-02-11T08:23:51.269557'}, {'id': 93, 'name': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:42.771565'}, {'id': 91, 'name': 'Update database schema for task ownership', 'description': 'Add a column or relationship to assign a single owner per task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:33.670381'}, {'id': 92, 'name': 'Develop backend API for assigning task owner', 'description': 'Create endpoints to assign or update the owner of a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T09:19:44.027744'}, {'id': 87, 'name': 'Create and customize contributor roles', 'description': 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:43.600461', 'updated_at': '2025-02-11T08:23:23.402442'}, {'id': 96, 'name': 'Allow admin users to create and customize contributor roles via frontend', 'description': 'Provide UI functionality for admins to manage contributor roles dynamically.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:23:13.139282'}, {'id': 94, 'name': 'Add database support for contributor roles', 'description': 'Introduce a roles table and link contributors to specific roles for tasks.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:56.181530'}, {'id': 95, 'name': 'Develop backend API for managing contributor roles', 'description': 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:02.276492'}, {'id': 127, 'name': 'Backend API for Password Reset', 'description': 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-02-10T23:59:50.734037'}, {'id': 126, 'name': 'Email Configuration for Password Reset', 'description': 'Configure email service to send password reset links.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.334340'}, {'id': 104, 'name': 'Middleware for Role Enforcement', 'description': 'As a system, I want to enforce role-based access to specific routes.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:23:40.346816'}, {'id': 122, 'name': 'Testing Role Enforcement', 'description': 'Write tests to ensure proper access control based on roles.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.185693'}, {'id': 121, 'name': 'Develop Role Enforcement Middleware', 'description': 'Implement middleware to check user roles for access control.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.187439'}, {'id': 105, 'name': 'Profile Management', 'description': 'As a user, I want to update my profile (username, email, password).', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.339830'}, {'id': 123, 'name': 'Backend API for Profile Management', 'description': 'Create PATCH /api/profile endpoint to update user details.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.678781'}, {'id': 125, 'name': 'Testing Profile Updates', 'description': 'Write tests for profile update functionality.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.680382'}]
2025-02-11 12:36:23,335 DEBUG: Task types: ['all', 'Epic', 'Subtask', 'User Story']
2025-02-11 12:36:23,335 DEBUG: Projects: [<Project Project Alpha (ID: 1)>, <Project Project Beta (ID: 2)>, <Project Project Gamma (ID: 3)>, <Project Project Theta (ID: 4)>, <Project Project Delta (ID: 5)>, <Project PMS - Feature Requests (ID: 7)>, <Project PMS - Backlog (ID: 6)>]
2025-02-11 12:36:23,336 DEBUG: Tasks response: [{'id': 290, 'name': 'issue: error when changing task type and', 'description': 'issue: error when changing task type and parent task before saving', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:00:03.417734', 'updated_at': '2025-02-10T09:15:09.284969'}, {'id': 298, 'name': 'example user story with parent epic 297', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 297, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:41:01.907455', 'updated_at': '2025-02-10T14:59:04.142570'}, {'id': 275, 'name': 'add sprints, cycles', 'description': 'Make naming customizable', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:48:52.680022', 'updated_at': '2025-02-10T08:38:37.622196'}, {'id': 276, 'name': 'add support for priority', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:49:26.189497', 'updated_at': '2025-02-10T08:28:47.447612'}, {'id': 264, 'name': 'close all / open all childtasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:25:20.101418', 'updated_at': '2025-02-10T08:47:14.915970'}, {'id': 285, 'name': 'add text truncation to project names in task list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:45:47.027805', 'updated_at': '2025-02-10T09:45:47.029729'}, {'id': 257, 'name': 'Update Task API Integration', 'description': "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 240, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-02-05T22:55:49.566819', 'updated_at': '2025-02-05T22:18:17.807154'}, {'id': 294, 'name': 'issue: task table filters not working', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:19:21.022598', 'updated_at': '2025-02-10T10:19:21.024676'}, {'id': 267, 'name': 'improvements to toggles and nested tasks', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:29:12.464594', 'updated_at': '2025-02-10T08:47:24.581680'}, {'id': 283, 'name': 'fix update title', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:58.769700', 'updated_at': '2025-02-10T08:46:47.282087'}, {'id': 271, 'name': 'make sure dynamically added rows has the exact same styling and includes every element', 'description': 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:21:07.108431', 'updated_at': '2025-02-10T08:38:47.340105'}, {'id': 273, 'name': 'disable parent task selector in epics', 'description': 'and add text, Epic can´t have parent tasks', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:45:20.740910', 'updated_at': '2025-02-10T08:39:17.639890'}, {'id': 269, 'name': 'fix styling for sweetalert', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'In Progress', 'created_at': '2025-02-08T15:54:56.717846', 'updated_at': '2025-02-10T08:39:32.172437'}, {'id': 286, 'name': 'add support for labels/tags', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:46:23.985620', 'updated_at': '2025-02-10T09:46:23.987564'}, {'id': 299, 'name': 'example sub task with parent user story 298', 'description': 'Test update 1\nTest update 2\nTest update 3', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 298, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:42:38.905700', 'updated_at': '2025-02-10T23:23:08.671464'}, {'id': 266, 'name': 'highlight the nested tasks', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:28:30.382949', 'updated_at': '2025-02-10T08:47:04.382929'}, {'id': 279, 'name': 'github integration', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:38.238202', 'updated_at': '2025-02-10T08:39:24.168451'}, {'id': 289, 'name': 'issue: parent task is lost when updating task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:56:25.273984', 'updated_at': '2025-02-10T09:12:47.626993'}, {'id': 278, 'name': 'search feature for tasks list', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:36:03.369833', 'updated_at': '2025-02-10T08:39:04.005957'}, {'id': 281, 'name': 'add high level plan', 'description': 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:27:01.218606', 'updated_at': '2025-02-10T08:38:54.754760'}, {'id': 287, 'name': 'when moving a parent item to another project make sure the subtasks are moved as well', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:48:31.986870', 'updated_at': '2025-02-10T09:48:31.988859'}, {'id': 272, 'name': 'implement a markdown text editor like notion', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:28:18.300231', 'updated_at': '2025-02-10T08:28:39.669255'}, {'id': 293, 'name': 'click on title should copy the task title and id to clipboard', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:16:33.508209', 'updated_at': '2025-02-10T10:16:33.510414'}, {'id': 277, 'name': 'custom task workflow statuses', 'description': 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- Custom status\n-- Custom status\n- In Progress\n-- Custom status\n-- Custom status\n-- Custom status\n- Completed\n-- Custom status\n-- Custom status\n\n2. How can we track a task through different stages and save the sequence of events or stages the task has gone through?\nI´m thinking it could be good for mapping out processes, identifying bottlenecks and provide valuable insights while improving and streamlining workflows.\n- Stages\n- Contacts taken\n- Respons time \n- Time to action after responses\n- Dependencies\n\nNeed to be able to record every action related to this action.\nCommunication integrations\n- Slack\n- Email\n- Text messages\n- Phonecalls\n- Calendar events, meetings\n- Zoom, Google meet, Teams etc..\n\n\n2. Set custom statuses per project (can use tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:16:03.352588', 'updated_at': '2025-02-10T08:38:28.123328'}, {'id': 274, 'name': 'add support for goals, initiatives, okr´s', 'description': 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:46:27.204912', 'updated_at': '2025-02-10T08:28:17.663922'}, {'id': 280, 'name': 'logging (task and project history)', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T07:37:44.435112', 'updated_at': '2025-02-10T08:28:28.947805'}, {'id': 282, 'name': 'implement same task list in projects but filtered on project', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:41:17.786154', 'updated_at': '2025-02-10T09:41:17.787861'}, {'id': 296, 'name': 'issue: contributor is lost after updating task', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:26:43.881947', 'updated_at': '2025-02-10T10:26:43.884004'}, {'id': 288, 'name': 'when trying to move subtask to another project, make sure a warning is displayed', 'description': 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be lost"\nOR\n\nIs it possible, and is it desireable to keep parent child relationships across projects?\nSo that a parent can be in one project but the child tasks can be in different projects?\n\nLets say \nParent epic is \n"Internationalisation"\nChild user stories are\n- Timezones\n- Language\n- Currency\n- Day, Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:54:36.297869', 'updated_at': '2025-02-10T08:54:51.840686'}, {'id': 284, 'name': 'add type "issue/bug"', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T08:42:27.719439', 'updated_at': '2025-02-10T09:42:27.720908'}, {'id': 295, 'name': 'issue: drag and drop errors', 'description': '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:22:54.461413', 'updated_at': '2025-02-10T10:22:54.462542'}, {'id': 297, 'name': 'example parent epic', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:39:51.620509', 'updated_at': '2025-02-10T10:39:51.622712'}, {'id': 292, 'name': 'issue: assigning contributor does not work', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:11:12.273779', 'updated_at': '2025-02-10T10:11:12.274809'}, {'id': 265, 'name': 'smooth transition for toggles', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-08T02:27:23.422612', 'updated_at': '2025-02-10T08:46:55.831743'}, {'id': 270, 'name': 'the newest task', 'description': '', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 1, 'project': 'Project Alpha', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T00:07:34.368035', 'updated_at': '2025-02-10T01:07:34.372478'}, {'id': 291, 'name': 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 7, 'project': 'PMS - Feature Requests', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-02-10T09:09:52.988609', 'updated_at': '2025-02-10T10:09:52.997455'}, {'id': 136, 'name': 'Page scroll should stay in position when reloading', 'description': '', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-16T18:21:50.187247', 'updated_at': '2025-01-16T19:22:36.214901'}, {'id': 130, 'name': 'Implement the Map of Task Relationships solution for drag-and-drop', 'description': 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.093022', 'updated_at': '2025-01-16T19:22:36.216705'}, {'id': 133, 'name': 'Step 4: Enhance Logging in models.py', 'description': 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nupdating the Task model in the following ways:\n\n1.\tLog Changes to parent_id:\n\t•\tLog changes to parent_id during updates, including old and new values.\n\t2.\tValidate Hierarchy with Logging:\n\t•\tLog detailed messages when validating hierarchy changes, especially for circular dependency checks.\n\nHere’s how the models.py can be updated:\n```\nfrom datetime import datetime, timezone\nfrom sqlalchemy import func, cast, CheckConstraint\nfrom sqlalchemy.orm import validates\nfrom app.extensions.db import db\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\nclass Task(db.Model):\n    __tablename__ = "task"\n    \n    # Other columns...\n\n    parent_id = db.Column(\n        db.Integer, db.ForeignKey("task.id"), index=True, nullable=True\n    )\n\n    # Relationships\n    parent = db.relationship(\n        "Task", remote_side=[id], back_populates="children", lazy="select"\n    )\n    children = db.relationship(\n        "Task", back_populates="parent", lazy="select"\n    )\n\n    \n\n\n    @staticmethod\n    def _validate_no_circular_references(new_parent_id):\n        """\n        Validates that there are no circular references in the task hierarchy.\n\n        Args:\n            new_parent_id (int): The new parent ID to validate.\n\n        Raises:\n            ValueError: If a circular reference is detected.\n        """\n        visited = set()\n        current_parent_id = new_parent_id\n\n        logger.info(f"Validating circular references for parent ID: {new_parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error(\n                    f"Circular reference detected: Parent ID {current_parent_id} already visited."\n                )\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            # Fetch the next parent_id in the hierarchy\n            parent = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not parent:\n                break  # Exit if no parent is found\n            current_parent_id = parent.parent_id\n\n        logger.info("No circular reference detected.")\n\n    @validates(\'parent_id\', \'task_type\')\n    def validate_task_changes(self, key, value):\n        """\n        Validates changes to \'parent_id\' and \'task_type\'.\n        Ensures hierarchy validity and checks for circular references.\n        """\n        logger.debug(f"Validating {key} change for Task {self.id}: {value}")\n\n        if key == \'parent_id\':\n            # Log changes to parent_id\n            if self.id and value != self.parent_id:\n                logger.info(f"Task {self.id}: Updating \'parent_id\' from {self.parent_id} to {value}")\n\n            # Prevent a task from being its own parent\n            if value and value == self.id:\n                logger.error("A task cannot be its own parent.")\n                raise ValueError("A task cannot be its own parent.")\n\n            # Check for circular references\n            if value:\n                Task.check_circular_reference(self.id, value)\n\n        elif key == \'task_type\':\n            # Log changes to task_type\n            if self.id and value != self.task_type:\n                logger.info(f"Task {self.id}: Updating \'task_type\' from {self.task_type} to {value}")\n\n        # Check hierarchy rules without triggering further validation\n        if key in [\'parent_id\', \'task_type\']:\n            self._validate_hierarchy_change(key, value)\n\n        logger.info(f"Validation passed for {key}: {value}")\n        return value\n\n    def _validate_hierarchy_change(self, key, value):\n        """\n        Validates hierarchy rules for the task based on `task_type` and `parent_id`.\n        """\n        if key == \'parent_id\' and value:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=value).first()\n            if not parent_task:\n                raise ValueError("Parent task does not exist.")\n\n            logger.debug(f"Validating hierarchy: Task {self.id}, Parent Type: {parent_task.task_type}")\n            if self.task_type == "User Story" and parent_task.task_type != "Epic":\n                raise ValueError("User Stories must have an Epic as a parent.")\n            if self.task_type == "Subtask" and parent_task.task_type != "User Story":\n                raise ValueError("Subtasks must have a User Story as a parent.")\n\n        elif key == \'task_type\' and self.parent_id:\n            parent_task = Task.query.with_entities(Task.task_type).filter_by(id=self.parent_id).first()\n            if parent_task:\n                logger.debug(f"Validating hierarchy: Task Type: {value}, Parent Type: {parent_task.task_type}")\n                if value == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError("User Stories must have an Epic as a parent.")\n                if value == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError("Subtasks must have a User Story as a parent.")\n\n        logger.info(f"Hierarchy validation passed for Task {self.id if self.id else \'New Task\'}.")\n\n    @staticmethod\n    def check_circular_reference(task_id, parent_id):\n        """\n        Iteratively checks for circular references in the task hierarchy.\n        Prevents stack overflow on deep hierarchies.\n        """\n        visited = set()\n        current_parent_id = parent_id\n\n        logger.info(f"Checking circular reference for Task {task_id} with Parent ID: {parent_id}")\n\n        while current_parent_id:\n            if current_parent_id in visited:\n                logger.error("Circular reference detected!")\n                raise ValueError("Circular reference detected in task hierarchy.")\n            visited.add(current_parent_id)\n\n            if current_parent_id == task_id:\n                logger.error("A task cannot be its own ancestor.")\n                raise ValueError("A task cannot be its own ancestor.")\n\n            # Fetch the next parent_id in the hierarchy\n            task = Task.query.with_entities(Task.parent_id).filter_by(id=current_parent_id).first()\n            if not task:\n                break\n            current_parent_id = task.parent_id\n\n        logger.info("Circular reference check passed.")\n```\nKey Enhancements:\n\t1.\tlog_and_validate_parent_id_change:\n\t•\tLogs the old and new parent_id whenever it changes.\n\t•\tEnsures no circular references are introduced.\n\t2.\t_validate_no_circular_references:\n\t•\tValidates the parent_id field to prevent circular dependencies.\n\t•\tLogs progress and raises detailed errors if violations occur.\n\t3.\tlog_and_validate_task_type_change:\n\t•\tLogs changes to task_type with the old and new values.\n\t•\tRevalidates hierarchy rules when task_type changes.\n\t4.\tDetailed Logging for Circular Reference Validation:\n\t•\t_validate_no_circular_references and check_circular_reference methods log every step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:44:08.340041', 'updated_at': '2025-01-16T19:22:36.219710'}, {'id': 132, 'name': 'Step 1: Update tasks_table_interactions.js', 'description': '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the map for efficient parent-child relationship lookups instead of DOM traversal.\n\n```\nexport const TaskManager = {\n    init: function (csrfToken) {\n        this.csrfToken = csrfToken;\n        this.initTaskParentMap(); // Initialize the map\n        this.initDragAndDrop(); // Initialize drag-and-drop functionality\n    },\n\n    // Initialize a global map for task relationships\n    taskParentMap: new Map(),\n\n    // Build the taskParentMap from the DOM\n    initTaskParentMap: function () {\n        console.log("Initializing Task Parent Map...");\n        const rows = document.querySelectorAll("tr[data-task-id]");\n\n        rows.forEach((row) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = parseInt(row.dataset.parentId, 10) || null;\n            this.taskParentMap.set(taskId, parentId);\n        });\n\n        console.log("Task Parent Map initialized:", Array.from(this.taskParentMap.entries()));\n    },\n\n    // Update the map dynamically after drag-and-drop\n    updateTaskParentMap: function (taskId, parentId) {\n        console.log(`Updating Task Parent Map: Task ${taskId} -> Parent ${parentId}`);\n        this.taskParentMap.set(taskId, parentId);\n    },\n\n    initDragAndDrop: function () {\n        if (window.isDragAndDropInitialized) {\n            console.log("Drag-and-drop is already initialized.");\n            return;\n        }\n\n        console.log("Initializing drag-and-drop within TaskManager...");\n\n        const tableBody = document.querySelector("tbody");\n        if (!tableBody) {\n            console.warn("Task table body not found for drag-and-drop initialization");\n            return;\n        }\n\n        // Initialize Sortable.js for drag-and-drop functionality\n        Sortable.create(tableBody, {\n            handle: ".task-row", // Only draggable via `.task-row` elements\n            animation: 150, // Smooth animation\n            filter: ".task-open-link", // Prevent dragging on task links\n            preventOnFilter: true, // Prevent drag if filtered element is clicked\n            onEnd: async (event) => {\n                try {\n                    console.log("Drag-and-drop operation started...");\n                    const rows = Array.from(event.from.querySelectorAll(".task-row"));\n                    const reorderedTasks = [];\n\n                    rows.forEach((row, index) => {\n                        const taskId = parseInt(row.dataset.taskId, 10);\n                        let parentId = null;\n\n                        // Get the parent ID from the map or fallback to the dataset\n                        if (row.classList.contains("subtask-row")) {\n                            const parentRow = row.previousElementSibling;\n                            parentId = parentRow\n                                ? parseInt(parentRow.dataset.taskId, 10)\n                                : this.taskParentMap.get(taskId) || null;\n                        }\n\n                        // Update the taskParentMap dynamically\n                        this.updateTaskParentMap(taskId, parentId);\n\n                        reorderedTasks.push({\n                            id: taskId,\n                            sort_order: index + 1,\n                            parent_id: parentId,\n                        });\n                    });\n\n                    console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n                    console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n                    // Send the payload to the backend\n                    const response = await fetch("/tasks/reorder_subtasks", {\n                        method: "POST",\n                        headers: {\n                            "Content-Type": "application/json",\n                            "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n                        },\n                        body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n                    });\n\n                    if (!response.ok) {\n                        const errorData = await response.json();\n                        console.error("Error reordering tasks:", errorData);\n                        alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n                        return;\n                    }\n\n                    const data = await response.json();\n                    console.log("Task reordering successful:", data);\n\n                } catch (error) {\n                    console.error("Error during drag-and-drop operation:", error);\n                    alert("An unexpected error occurred while reordering tasks.");\n                }\n            },\n        });\n\n        window.isDragAndDropInitialized = true;\n        console.log("Drag-and-drop initialized successfully.");\n    },\n};\n```\n\nKey Updates:\n\t1.\tPrecomputed Map (taskParentMap):\n\t•\tThe initTaskParentMap function initializes the map by iterating over DOM elements and mapping each task’s ID to its parent ID.\n\t•\tThe updateTaskParentMap dynamically updates the map when tasks are reordered.\n\t2.\tEfficient Parent Lookup:\n\t•\tThe parentId is derived from the precomputed map rather than DOM traversal.\n\t3.\tBackend Payload:\n\t•\tA structured payload (reorderedTasks) is sent to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:44:08.338301', 'updated_at': '2025-02-06T21:59:17.417466'}, {'id': 134, 'name': 'Step 2: Update the Backend in routes.py', 'description': 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\nPlan for step 2:\n\t1.\tVerify the payload structure:\n\t•\tEnsure that the payload includes all necessary fields (id, sort_order, parent_id) for each task.\n\t•\tValidate that the parent-child relationships in the precomputed map (taskParentMap) are reflected correctly in the payload.\n\t2.\tSubmit the payload to the backend:\n\t•\tEnhance the fetch request in the onEnd function of initDragAndDrop to log detailed submission data.\n\t•\tConfirm the payload integrity in the browser console before submission.\n\t3.\tUpdate backend logging:\n\t•\tAdd logging to /reorder_subtasks in routes.py to confirm receipt of the correct payload and process parent-child updates.\n\t•\tLog before and after database updates for better debugging.\n\n-----\nUpdated tasks_table_interactions.js\n\nReplace this section:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    let parentId = null;\n```\nWith:\n```\nrows.forEach((row, index) => {\n    const taskId = parseInt(row.dataset.taskId, 10);\n    const parentId = this.taskParentMap.get(taskId) || null;\n```\nThe this.taskParentMap provides a precomputed and dynamic mapping of taskId to parentId. By using this map, we avoid relying on DOM traversal logic (row.closest or row.previousElementSibling) during drag-and-drop operations, which can sometimes be unreliable or cumbersome.\n\nFull Revised onEnd section:\n```\nonEnd: async (event) => {\n    try {\n        console.log("Drag-and-drop operation started...");\n        const rows = Array.from(event.from.querySelectorAll(".task-row"));\n        const reorderedTasks = [];\n\n        rows.forEach((row, index) => {\n            const taskId = parseInt(row.dataset.taskId, 10);\n            const parentId = this.taskParentMap.get(taskId) || null;\n\n            // Update the taskParentMap dynamically\n            this.updateTaskParentMap(taskId, parentId);\n\n            reorderedTasks.push({\n                id: taskId,\n                sort_order: index + 1,\n                parent_id: parentId,\n            });\n        });\n\n        console.log("Updated Task Parent Map:", Array.from(this.taskParentMap.entries()));\n        console.log("Final Payload (Before Submission):", JSON.stringify(reorderedTasks));\n\n        // Send the payload to the backend\n        const response = await fetch("/tasks/reorder_subtasks", {\n            method: "POST",\n            headers: {\n                "Content-Type": "application/json",\n                "X-CSRFToken": this.csrfToken, // Ensure CSRF token is included\n            },\n            body: JSON.stringify({ ordered_tasks: reorderedTasks }),\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            console.error("Error reordering tasks:", errorData);\n            alert(`Failed to reorder tasks: ${errorData.message || "Unknown error"}`);\n            return;\n        }\n\n        const data = await response.json();\n        console.log("Task reordering successful:", data);\n\n    } catch (error) {\n        console.error("Error during drag-and-drop operation:", error);\n        alert("An unexpected error occurred while reordering tasks.");\n    }\n}\n```\n---------------------------------\nEnsure updates include:\n\t•\tBetter Logging: Adding logs for key events such as database changes and validation results.\n\t•\tInput Validation: Ensure all required fields (id, sort_order, parent_id) exist in the payload.\n\t•\tPost-Commit Validation: Confirm database updates after the commit.\n\t•\tImproved Error Handling: Include specific error messages and consistent rollback mechanisms.\n\nBelow is the revised reorder_subtasks route with descriptive comments for each section:\n```\n@bp.route("/reorder_subtasks", methods=["POST"])\ndef reorder_subtasks():\n    """\n    Reorder subtasks globally or reassign them to a different parent.\n\n    Steps:\n    - Parse and validate input from the frontend.\n    - Update parent-child relationships and sort order in the database.\n    - Commit changes and return a success response.\n    - Handle errors gracefully and provide detailed logs for debugging.\n    """\n    logger.info("Entering reorder_subtasks route...")\n    logger.info(f"Received payload for reordering tasks: {request.json}")\n\n    try:\n        # Step 1: Parse input\n        parent_id = request.json.get("parent_id", None)  # Optional parent ID for the tasks being reordered\n        ordered_tasks = request.json.get("ordered_tasks", [])\n\n        logger.debug(f"Parsed parent_id: {parent_id}")\n        logger.debug(f"Parsed ordered_tasks: {ordered_tasks}")\n\n        # Step 2: Validate input\n        if not isinstance(ordered_tasks, list) or not all(\n            isinstance(task, dict) and "id" in task and "sort_order" in task and "parent_id" in task\n            for task in ordered_tasks\n        ):\n            logger.error(f"Invalid input received for ordered_tasks: {ordered_tasks}")\n            return jsonify({\n                "error": "Invalid input format for \'ordered_tasks\'. Each task must include \'id\', \'sort_order\', and \'parent_id\'."\n            }), 400\n\n        # Step 3: Validate parent task (if applicable)\n        if parent_id is not None:\n            parent_task = Task.query.get(parent_id)\n            if not parent_task:\n                logger.error(f"Parent task with ID {parent_id} not found.")\n                return jsonify({"error": f"Parent ID {parent_id} is invalid or does not exist."}), 400\n\n        logger.info("Input validation passed. Proceeding with task updates...")\n\n        # Step 4: Process updates for each subtask\n        updated_subtasks = []  # Keep track of updated subtasks for post-commit validation\n\n        for task_data in ordered_tasks:\n            subtask_id = task_data["id"]\n            sort_order = task_data["sort_order"]\n            new_parent_id = task_data["parent_id"]\n\n            # Fetch the subtask from the database\n            subtask = Task.query.get(subtask_id)\n            if not subtask:\n                logger.warning(f"Subtask ID {subtask_id} not found. Skipping...")\n                continue\n\n            # Log and update parent_id if it changes\n            if new_parent_id is not None and new_parent_id != subtask.parent_id:\n                logger.info(f"Reassigning subtask {subtask.id} to new parent {new_parent_id}")\n                subtask.parent_id = new_parent_id\n\n            # Update sort order\n            subtask.sort_order = sort_order\n            logger.debug(f"Updated subtask {subtask.id}: parent_id={subtask.parent_id}, sort_order={subtask.sort_order}")\n\n            # Add to the list of updated subtasks for validation\n            updated_subtasks.append(subtask)\n\n        # Step 5: Commit changes to the database\n        try:\n            db.session.commit()\n            logger.info(f"Subtasks reordered successfully: {[task[\'id\'] for task in ordered_tasks]}")\n        except Exception as e:\n            logger.error(f"Error committing changes to the database: {str(e)}")\n            db.session.rollback()\n            return jsonify({"error": "Failed to save changes to the database. Please try again."}), 500\n\n        # Step 6: Post-commit validation\n        for subtask in updated_subtasks:\n            logger.debug(f"Post-commit parent_id for task {subtask.id}: {subtask.parent_id}")\n            logger.debug(f"Post-commit sort_order for task {subtask.id}: {subtask.sort_order}")\n\n        # Step 7: Return success response\n        return jsonify({\n            "success": True,\n            "message": "Subtasks reordered successfully.",\n            "updated_subtasks": [subtask.id for subtask in updated_subtasks]\n        }), 200\n\n    except Exception as e:\n        # Step 8: Handle unexpected errors\n        logger.error(f"Error while reordering subtasks: {str(e)}", exc_info=True)\n        db.session.rollback()\n        return jsonify({"error": "An unexpected error occurred while reordering subtasks."}), 500\n```\nKey Changes and Descriptive Comments\n\t1.\tInput Parsing:\n\t•\tExtracts parent_id and ordered_tasks from the request payload.\n\t•\tLogs the parsed values for debugging.\n\t2.\tInput Validation:\n\t•\tEnsures ordered_tasks is a list of dictionaries with the required keys.\n\t•\tValidates parent_id if provided, ensuring the parent task exists in the database.\n\t3.\tUpdate Processing:\n\t•\tIterates through ordered_tasks, updating each task’s parent_id and sort_order.\n\t•\tLogs changes for each task.\n\t4.\tDatabase Commit:\n\t•\tCommits all updates in a single transaction.\n\t•\tLogs success or rolls back changes in case of an error.\n\t5.\tPost-Commit Validation:\n\t•\tVerifies that the parent_id and sort_order changes were successfully saved to the database.\n\t6.\tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Completed', 'created_at': '2025-01-15T09:46:29.348853', 'updated_at': '2025-02-06T21:59:21.617065'}, {'id': 131, 'name': 'Step 5: Update utils.py', 'description': 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nChanges to Make:\n\t1.\tEnhance Task Filtering:\n\t•\tEnsure the filters handle parent-child relationships explicitly.\n\t•\tAdd options to include or exclude subtasks in queries.\n\t2.\tUtility Function for Debugging Parent-Child Relationships:\n\t•\tProvide a function to generate a map or list of parent-child relationships for debugging purposes.\n\t3.\tValidation Functions:\n\t•\tAdd a utility function to validate parent-child relationships and ensure no circular dependencies.\n\nUpdated utils.py Code:\n```\nimport logging\nfrom sqlalchemy import func\nfrom sqlalchemy.orm import joinedload\nfrom app.extensions.db import db\nfrom app.tasks.models import Task\n\nlogger = logging.getLogger(__name__)  # Logger for this module\n\n\nclass TaskService:\n    @staticmethod\n    def filter_tasks(filters=None, include_subtasks=True, page=None, per_page=None):\n        """\n        Dynamically filters tasks with an option to include or exclude subtasks.\n\n        Args:\n            filters (dict): Filtering criteria.\n            include_subtasks (bool): Whether to include subtasks in the query.\n            page (int, optional): Page number for pagination.\n            per_page (int, optional): Items per page for pagination.\n\n        Returns:\n            Query or Pagination: A SQLAlchemy query object or paginated results.\n        """\n        query = Task.query.options(\n            db.joinedload(Task.project).joinedload(Project.contributors),\n            db.joinedload(Task.contributor),\n            db.joinedload(Task.children),\n        ).order_by(Task.sort_order)\n\n        if filters:\n            logger.debug(f"Applying filters: {filters}")\n\n            # Apply standard filters\n            if "is_archived" in filters:\n                query = query.filter(Task.is_archived == filters["is_archived"])\n            if "project_id" in filters:\n                query = query.filter(Task.project_id == filters["project_id"])\n            if "task_type" in filters:\n                if isinstance(filters["task_type"], list):\n                    query = query.filter(Task.task_type.in_(filters["task_type"]))\n                else:\n                    query = query.filter(Task.task_type == filters["task_type"])\n            if "completion_status" in filters:\n                completion_map = {"completed": True, "in_progress": False}\n                if filters["completion_status"] in completion_map:\n                    query = query.filter(Task.completed == completion_map[filters["completion_status"]])\n\n            # Optionally exclude subtasks\n            if not include_subtasks:\n                query = query.filter(Task.task_type != "Subtask")\n\n        logger.debug(f"Generated query: {query}")\n\n        # Pagination\n        if page and per_page:\n            return query.paginate(page=page, per_page=per_page, error_out=False)\n        return query\n\n    @staticmethod\n    def debug_parent_child_relationships(project_id=None):\n        """\n        Generates a debug map of parent-child relationships for all tasks.\n\n        Args:\n            project_id (int, optional): Restrict to tasks from a specific project.\n\n        Returns:\n            dict: A dictionary mapping parent IDs to their child task IDs.\n        """\n        query = Task.query\n        if project_id:\n            query = query.filter(Task.project_id == project_id)\n\n        tasks = query.options(\n            db.load_only(Task.id, Task.parent_id)\n        ).all()\n\n        relationship_map = {}\n        for task in tasks:\n            if task.parent_id not in relationship_map:\n                relationship_map[task.parent_id] = []\n            relationship_map[task.parent_id].append(task.id)\n\n        logger.debug(f"Parent-Child Relationship Map: {relationship_map}")\n        return relationship_map\n\n    @staticmethod\n    def validate_parent_child_relationships():\n        """\n        Validates all parent-child relationships in the database to ensure they conform to hierarchy rules.\n\n        Raises:\n            ValueError: If invalid relationships are detected.\n        """\n        tasks = Task.query.options(db.joinedload(Task.parent)).all()\n\n        for task in tasks:\n            if task.parent_id:\n                parent_task = task.parent\n                if not parent_task:\n                    raise ValueError(f"Task {task.id} has an invalid parent ID {task.parent_id}.")\n\n                # Validate hierarchy rules\n                if task.task_type == "User Story" and parent_task.task_type != "Epic":\n                    raise ValueError(f"User Story {task.id} must have an Epic as its parent.")\n                if task.task_type == "Subtask" and parent_task.task_type != "User Story":\n                    raise ValueError(f"Subtask {task.id} must have a User Story as its parent.")\n\n        logger.info("All parent-child relationships are valid.")\n\n    @staticmethod\n    def get_all_task_ids_with_parents():\n        """\n        Returns a flat list of tasks with their parent IDs for debugging.\n\n        Returns:\n            list: A list of tuples (task_id, parent_id).\n        """\n        tasks = Task.query.with_entities(Task.id, Task.parent_id).all()\n        logger.debug(f"Task IDs with Parent IDs: {tasks}")\n        return tasks\n```\n\n\nExplanation of Changes:\n\t1.\tfilter_tasks Enhancements:\n\t•\tAdded include_subtasks parameter to optionally exclude subtasks from the query.\n\t2.\tdebug_parent_child_relationships:\n\t•\tCreates a parent-child relationship map for debugging purposes.\n\t3.\tvalidate_parent_child_relationships:\n\t•\tIterates through all tasks to validate parent-child hierarchy and ensures no invalid relationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:41:28.091824', 'updated_at': '2025-01-16T19:22:36.236691'}, {'id': 135, 'name': 'Step 3: Update list.html', 'description': 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already includes everything needed. No required changes.\n\nHere´s the relevant section of list.html:\n\n```\n<tr id="task-{{ task.id }}"\n                class="task-row {% if task.task_type == \'Subtask\' %}subtask-row{% elif task.task_type == \'User Story\' %}user-story-row{% elif task.task_type == \'Epic\' %}epic-row{% endif %}"\n                style="background-color: \n                {% if task.task_type == \'Subtask\' %}\n                    rgba(200, 230, 255, 0.5); /* Light blue for Subtask */\n                {% elif task.task_type == \'User Story\' %}\n                    rgba(255, 255, 200, 0.5); /* Light yellow for User Story */\n                {% elif task.task_type == \'Epic\' %}\n                    rgba(255, 200, 200, 0.5); /* Light red for Epic */\n                {% else %}\n                    rgba(240, 240, 240, 1); /* Default light gray */\n                {% endif %};"\n                data-task-id="{{ task.id }}"\n                data-parent-id="{{ task.parent_id or \'\' }}"\n                data-level="{{ depth }}">\n                <td><input type="checkbox" name="batch_update" value="{{ task.id }}"></td>\n                <td>\n                    {% if tasks|selectattr("parent_id", "equalto", task.id)|list %}\n                    <button class="btn btn-sm toggle-details" data-task-id="{{ task.id }}" aria-label="Toggle details for task {{ task.name }}">\n                        <i class="bi bi-chevron-right"></i>\n                    </button>\n                    {% endif %}\n                </td>\n                <td class="fw-medium fs-6 \n                {% if task.task_type == \'Epic\' %}\n                    epic-cell\n                {% elif task.task_type == \'User Story\' %}\n                    user-story-cell\n                {% elif task.task_type == \'Subtask\' %}\n                    subtask-cell\n                {% endif %}" \n                style="padding-left: {{ depth|default(0) * 20 }}px; position: relative;">\n                <span class="bi fs-6\n                {% if task.task_type == \'Epic\' %}\n                    bi-circle-fill\n                {% elif task.task_type == \'User Story\' %}\n                    bi-circle-half\n                {% elif task.task_type == \'Subtask\' %}\n                    bi-circle\n                {% endif %}">\n                </span>\n                {{ task.name }}\n                <small class="text-muted fw-light">\n                    (Parent-ID: {{ task.parent_id or \'None\' }})\n                </small>\n                <!-- Open Link -->\n                <a href="#" class="task-open-link" data-task-id="{{ task.id }}">\n                    <i class="bi bi-arrows-angle-expand" style="font-size: 0.8rem; color: white;"></i>\n                    Open\n                </a>\n            </td>\n                <td class="fw-light fs-6">\n                    <small class>\n                    LAC-{{ task.id }}\n                    </small>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light text-bg-secondary">\n                        {{ task.project if task.project else "Unknown Project" }}\n                    </span>\n                </td>\n                <td class="fs-6" data-contributor-column>{{ task.assigned_to if task.assigned_to else "Unassigned" }}</td>\n                <td class="fs-6">{{ task.story_points }}</td>\n                <td class="fs-6">\n                    <span class="badge rounded-pill fw-light text-bg-light">\n                        {{ task.task_type }}\n                    </span>\n                </td>\n                <td>\n                    <span class="badge rounded-pill fw-light {% if task.completed %}text-bg-success{% else %}text-bg-warning{% endif %}">\n                        {{ "Completed" if task.completed else "In Progress" }}\n                    </span>\n                </td>\n                <td>\n                    <!-- Delete Icon -->\n                    <button class="btn btn-dark btn-sm delete-task-btn" style="--bs-btn-padding-y: .25rem; --bs-btn-padding-x: .2rem; --bs-btn-font-size: .75rem;" data-task-id="{{ task.id }}" aria-label="Deletes task {{ task.id }}">\n                        <i class="bi bi-trash"></i>\n                    </button>\n                </td>\n            </tr>\n            {% for child in tasks if child.parent_id == task.id %}\n                {{ render_task(child, tasks, depth + 1) }}\n            {% endfor %}\n            {% endmacro %}\n            \n            <!-- Render top-level tasks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 130, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-15T09:46:29.349784', 'updated_at': '2025-01-16T19:22:36.238473'}, {'id': 82, 'name': 'Implement Third-Party Authentication', 'description': 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitHub Login involves integrating OAuth 2.0, which both services support. The complexity depends on your app’s existing setup, frameworks, and experience with third-party authentication. Below is a breakdown:\n\nKey Steps for Implementing Google or GitHub Login\n\t1.\tSet Up OAuth Credentials:\n\t•\tRegister your application in the Google Cloud Console or GitHub Developer Settings.\n\t•\tObtain the client ID and client secret.\n\t2.\tInstall Required Libraries:\n\t•\tUse a library for OAuth (e.g., flask-oauthlib, python-social-auth, or authlib).\n\t•\tPopular frameworks like Flask and Django already have robust integrations for OAuth providers.\n\t3.\tBackend Configuration:\n\t•\tImplement an endpoint to handle the OAuth flow (/auth/login/google or /auth/login/github).\n\t•\tConfigure your app to send users to Google or GitHub’s authentication page.\n\t•\tHandle the OAuth callback to exchange the authorization code for an access token.\n\t•\tVerify the token and fetch user information (e.g., email, name).\n\t4.\tLink OAuth to User Registration:\n\t•\tOn successful login, create or retrieve a user in your database.\n\t•\tStore the user’s details like email, OAuth provider ID, and access token.\n\t5.\tFrontend Integration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T12:15:54.291625', 'updated_at': '2025-01-16T19:22:36.239866'}, {'id': 62, 'name': 'Add OAuth integration for Google Login', 'description': 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.241200'}, {'id': 64, 'name': 'Setup project credentials for Google API', 'description': 'Generate client ID and secret from Google API Console for your application.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.242497'}, {'id': 67, 'name': 'Test Google OAuth flow', 'description': 'Verify the OAuth flow using test accounts and check the token exchange.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.243780'}, {'id': 65, 'name': 'Implement backend endpoints for Google OAuth', 'description': 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 62, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T11:58:39.269319', 'updated_at': '2025-01-16T19:22:36.244932'}, {'id': 63, 'name': 'Add OAuth integration for GitHub Login', 'description': 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 82, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T11:39:12.249531', 'updated_at': '2025-01-16T19:22:36.246358'}, {'id': 68, 'name': 'Register application in GitHub Developer Console', 'description': 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.247746'}, {'id': 69, 'name': 'Handle callback from GitHub', 'description': 'Implement the callback endpoint to process the authorization code from GitHub.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 63, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T12:03:52.062783', 'updated_at': '2025-01-16T19:22:36.248912'}, {'id': 97, 'name': '1. Build Basic User Authentication System', 'description': 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 18, 'status': 'Not Started', 'created_at': '2025-01-07T19:53:50.085064', 'updated_at': '2025-01-16T19:22:36.250169'}, {'id': 100, 'name': '1.1 User Registration', 'description': 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:**\n\n•\tUser can input valid username, email, and password.\n•\tUsername and email must be unique.\n•\tErrors are displayed for invalid inputs or duplicate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:59:09.044667', 'updated_at': '2025-01-16T19:22:36.251812'}, {'id': 107, 'name': '1.1.1 Database Changes for User Registration', 'description': '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PRIMARY KEY,\n       username VARCHAR(50) UNIQUE NOT NULL,\n       email VARCHAR(100) UNIQUE NOT NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-02-11T11:36:20.238219'}, {'id': 108, 'name': '1.1.2 Backend API for Registration', 'description': '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:33.067643'}, {'id': 112, 'name': '1.2.2 Frontend Login Page', 'description': 'Develop a frontend form for user login with email and password inputs.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.683644'}, {'id': 109, 'name': '1.1.3 Create Frontend Registration Page', 'description': 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.684988'}, {'id': 110, 'name': '1.1.4 Unit Tests for Registration', 'description': 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 100, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:16.086402', 'updated_at': '2025-01-16T19:25:53.686902'}, {'id': 101, 'name': '1.2 User Login', 'description': 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:25:53.687936'}, {'id': 111, 'name': '1.2.1 Backend API for Login', 'description': 'Create POST /api/login endpoint to handle user login.\njjsjj', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:53.689096'}, {'id': 113, 'name': '1.2.3 Session Management', 'description': 'Implement secure session handling using cookies or JWT.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:25:20.968680'}, {'id': 114, 'name': '1.2.4 Unit Tests for Login', 'description': 'Write tests for successful and failed login attempts.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 101, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:32.986548', 'updated_at': '2025-01-16T19:22:36.265866'}, {'id': 106, 'name': 'Password Reset', 'description': 'As a user, I want to reset my password securely using email.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.267247'}, {'id': 128, 'name': 'Frontend Password Reset Page', 'description': 'Develop a page for users to enter a new password using a valid token.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.269158'}, {'id': 129, 'name': 'Testing Password Reset', 'description': 'Write tests for email delivery, token validation, and password updates.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 106, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.270849'}, {'id': 102, 'name': 'Logout', 'description': 'As a user, I want to log out so that I can end my session securely.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 97, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.272605'}, {'id': 117, 'name': 'Tests for Logout', 'description': 'Verify session invalidation and redirection to the login page.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.274575'}, {'id': 116, 'name': 'Frontend Logout Button', 'description': 'Add a logout button to the UI and handle session clearing.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-02-09T12:31:17.939784'}, {'id': 115, 'name': 'Backend API for Logout', 'description': 'Create POST /api/logout endpoint to invalidate user sessions.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 102, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:40:45.815252', 'updated_at': '2025-01-16T19:22:36.277547'}, {'id': 61, 'name': 'Parent task assignment', 'description': '', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 0, 'status': 'Not Started', 'created_at': '2025-01-04T22:31:45.205815', 'updated_at': '2025-01-16T19:22:36.279012'}, {'id': 45, 'name': 'Display Default Value in Dropdown', 'description': 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.280493'}, {'id': 50, 'name': 'Retrieve Current Parent Task', 'description': 'Retrieve the current parent task’s ID and name from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'In Progress', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:22.274304'}, {'id': 51, 'name': 'Set Default Value', 'description': 'Set the default value in the dropdown based on the retrieved data.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 45, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 1, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-01-16T19:22:36.283309'}, {'id': 46, 'name': 'Search for Parent Tasks', 'description': 'Allow users to search for tasks dynamically in the dropdown by typing.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': None, 'assigned_to': 'Unassigned', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-01-16T19:22:36.284882'}, {'id': 54, 'name': 'Test Partial Matching', 'description': 'Ensure the search results update in real-time as the user types.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 46, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:29.251047'}, {'id': 47, 'name': 'Handle Large Datasets Efficiently', 'description': 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 13, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:26:23.067490'}, {'id': 56, 'name': 'Paginate API Responses', 'description': 'Implement server-side filtering and pagination for large datasets.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:16.233517'}, {'id': 55, 'name': 'Enable Lazy Loading', 'description': 'Enable lazy loading or virtualization in Virtual Select.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 47, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:26:08.099271'}, {'id': 48, 'name': 'Select and Deselect Parent Tasks', 'description': 'Allow users to select a parent task or deselect by choosing "None."', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:59.651639'}, {'id': 57, 'name': 'Ensure None Option Availability', 'description': 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:51.310240'}, {'id': 58, 'name': 'Handle Selection Events', 'description': 'Implement event listeners to update the form’s state when the selection changes.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 48, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:43.569501'}, {'id': 49, 'name': 'Integrate Dropdown with Task Form', 'description': 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 61, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T01:47:25.942574', 'updated_at': '2025-02-11T08:25:36.133259'}, {'id': 59, 'name': 'Bind Dropdown to Form Field', 'description': 'Bind the dropdown to the form’s parent task field.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 2, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:15.491910'}, {'id': 60, 'name': 'Test Form Submission', 'description': 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 49, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:28.367797'}, {'id': 41, 'name': 'Implement Searchable Dropdown', 'description': 'As a user, I want a searchable dropdown for parent task assignment.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Completed', 'created_at': '2025-01-03T09:14:28.285904', 'updated_at': '2025-02-11T08:25:07.992524'}, {'id': 52, 'name': 'Add Search Box to Dropdown', 'description': 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 41, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:25:01.469601'}, {'id': 53, 'name': 'Implement AJAX Search', 'description': 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-04T02:02:21.237339', 'updated_at': '2025-02-11T08:24:54.245010'}, {'id': 42, 'name': 'Choose Dropdown Library', 'description': 'Research and decide on the dropdown library to use.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:47.274896'}, {'id': 43, 'name': 'Integrate Dropdown Library', 'description': 'Integrate the chosen dropdown library into the project.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Completed', 'created_at': '2025-01-03T09:16:02.607548', 'updated_at': '2025-02-11T08:24:33.908549'}, {'id': 84, 'name': 'Enhance Task Contributor Management', 'description': 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI/UX, etc. The feature will allow assigning multiple contributors to tasks while maintaining clear ownership and responsibility assignments.\n\n\t•\tImplement and test each subtask sequentially, starting with the database schema updates and backend APIs.\n\t•\tCollaborate with UI developers to ensure seamless integration of new functionalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'task_type': 'Epic', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:30:21.149869', 'updated_at': '2025-02-11T08:24:26.494016'}, {'id': 85, 'name': 'Assign multiple contributors to a task', 'description': 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:32:39.466022', 'updated_at': '2025-02-11T08:24:21.069473'}, {'id': 90, 'name': 'Update frontend to display and manage multiple contributors', 'description': 'Allow users to view, add, or remove multiple contributors via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:13.204884'}, {'id': 88, 'name': 'Update database schema for multiple contributors', 'description': 'Modify the task table to support many-to-many relationships for contributors.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:24:05.873554'}, {'id': 89, 'name': 'Develop backend API for adding contributors to a task', 'description': 'Create endpoints to add, update, and remove contributors for a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 85, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:02.014761', 'updated_at': '2025-02-11T08:23:58.436495'}, {'id': 86, 'name': 'Allow designation of task owner', 'description': 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:29.330562', 'updated_at': '2025-02-11T08:23:51.269557'}, {'id': 93, 'name': 'Update frontend to manage task ownership', 'description': 'Allow users to assign or update the task owner via the UI.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:42.771565'}, {'id': 91, 'name': 'Update database schema for task ownership', 'description': 'Add a column or relationship to assign a single owner per task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T08:23:33.670381'}, {'id': 92, 'name': 'Develop backend API for assigning task owner', 'description': 'Create endpoints to assign or update the owner of a task.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 86, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:17.531925', 'updated_at': '2025-02-11T09:19:44.027744'}, {'id': 87, 'name': 'Create and customize contributor roles', 'description': 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': 84, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:33:43.600461', 'updated_at': '2025-02-11T08:23:23.402442'}, {'id': 96, 'name': 'Allow admin users to create and customize contributor roles via frontend', 'description': 'Provide UI functionality for admins to manage contributor roles dynamically.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:23:13.139282'}, {'id': 94, 'name': 'Add database support for contributor roles', 'description': 'Introduce a roles table and link contributors to specific roles for tasks.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:56.181530'}, {'id': 95, 'name': 'Develop backend API for managing contributor roles', 'description': 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': 87, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T19:39:28.197613', 'updated_at': '2025-02-11T08:22:02.276492'}, {'id': 127, 'name': 'Backend API for Password Reset', 'description': 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 8, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-02-10T23:59:50.734037'}, {'id': 126, 'name': 'Email Configuration for Password Reset', 'description': 'Configure email service to send password reset links.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:36.413402', 'updated_at': '2025-01-16T19:22:36.334340'}, {'id': 104, 'name': 'Middleware for Role Enforcement', 'description': 'As a system, I want to enforce role-based access to specific routes.', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:23:40.346816'}, {'id': 122, 'name': 'Testing Role Enforcement', 'description': 'Write tests to ensure proper access control based on roles.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.185693'}, {'id': 121, 'name': 'Develop Role Enforcement Middleware', 'description': 'Implement middleware to check user roles for access control.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:07.415346', 'updated_at': '2025-01-16T19:23:58.187439'}, {'id': 105, 'name': 'Profile Management', 'description': 'As a user, I want to update my profile (username, email, password).', 'task_type': 'User Story', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:37:47.717804', 'updated_at': '2025-01-16T19:22:36.339830'}, {'id': 123, 'name': 'Backend API for Profile Management', 'description': 'Create PATCH /api/profile endpoint to update user details.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 5, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.678781'}, {'id': 125, 'name': 'Testing Profile Updates', 'description': 'Write tests for profile update functionality.', 'task_type': 'Subtask', 'is_archived': False, 'completed': False, 'parent_id': None, 'project_id': 6, 'project': 'PMS - Backlog', 'contributor_id': 5, 'assigned_to': 'Fredrik Cederborg', 'story_points': 3, 'status': 'Not Started', 'created_at': '2025-01-07T20:41:20.321287', 'updated_at': '2025-01-16T19:24:19.680382'}]
2025-02-11 12:36:23,384 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 12:36:23,385 INFO: [cached since 2651s ago] {'param_1': 2}
2025-02-11 12:36:23,386 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:36:23,386 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 12:36:23,386 INFO: [cached since 2651s ago] {'param_1': 3}
2025-02-11 12:36:23,386 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:36:23,387 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 12:36:23,387 INFO: [cached since 2651s ago] {'param_1': 4}
2025-02-11 12:36:23,387 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:36:23,387 DEBUG: Row (4, 'Fredrik')
2025-02-11 12:36:23,387 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 12:36:23,387 INFO: [cached since 2651s ago] {'param_1': 5}
2025-02-11 12:36:23,388 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:36:23,389 INFO: ROLLBACK
2025-02-11 12:36:23,389 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:23] "GET /tasks/ HTTP/1.1" 200 -
2025-02-11 12:36:23,427 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:23] "[36mGET /static/custom.css HTTP/1.1[0m" 304 -
2025-02-11 12:36:23,444 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:23] "[36mGET /static/js/filters.js HTTP/1.1[0m" 304 -
2025-02-11 12:36:23,447 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:23] "[36mGET /static/js/modals.js HTTP/1.1[0m" 304 -
2025-02-11 12:36:23,450 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:23] "[36mGET /static/js/tasks_table_interactions.js HTTP/1.1[0m" 304 -
2025-02-11 12:36:23,459 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:23] "[36mGET /static/images/background.svg HTTP/1.1[0m" 304 -
2025-02-11 12:36:23,552 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:23] "[36mGET /static/favicon.ico HTTP/1.1[0m" 304 -
2025-02-11 12:36:58,460 INFO: BEGIN (implicit)
2025-02-11 12:36:58,460 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date 
FROM project LEFT OUTER JOIN task AS task_1 ON project.id = task_1.project_id
2025-02-11 12:36:58,460 INFO: [cached since 292.7s ago] {}
2025-02-11 12:36:58,463 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'task_1_id', 'task_1_name', 'task_1_sort_order', 'task_1_description', 'task_1_task_type', 'task_1_is_archived', 'task_1_completed', 'task_1_status', 'task_1_parent_id', 'task_1_project_id', 'task_1_contributor_id', 'task_1_story_points', 'task_1_created_at', 'task_1_updated_at', 'task_1_completed_date')
2025-02-11 12:36:58,465 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 15, 491910), None)
2025-02-11 12:36:58,465 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None)
2025-02-11 12:36:58,466 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None)
2025-02-11 12:36:58,466 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None)
2025-02-11 12:36:58,467 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None)
2025-02-11 12:36:58,467 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None)
2025-02-11 12:36:58,467 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 269, 'fix styling for sweetalert', 0, '', 'User Story', False, False, 'In Progress', None, 6, None, 0, datetime.datetime(2025, 2, 8, 15, 54, 56, 717846), datetime.datetime(2025, 2, 10, 8, 39, 32, 172437), None)
2025-02-11 12:36:58,467 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 265, 'smooth transition for toggles', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 27, 23, 422612), datetime.datetime(2025, 2, 10, 8, 46, 55, 831743), None)
2025-02-11 12:36:58,468 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 266, 'highlight the nested tasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 28, 30, 382949), datetime.datetime(2025, 2, 10, 8, 47, 4, 382929), None)
2025-02-11 12:36:58,468 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 264, 'close all / open all childtasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 25, 20, 101418), datetime.datetime(2025, 2, 10, 8, 47, 14, 915970), None)
2025-02-11 12:36:58,469 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 267, 'improvements to toggles and nested tasks', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 29, 12, 464594), datetime.datetime(2025, 2, 10, 8, 47, 24, 581680), None)
2025-02-11 12:36:58,469 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 12:36:58,469 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), 270, 'the newest task', 0, '', 'Subtask', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 0, 7, 34, 368035), datetime.datetime(2025, 2, 10, 1, 7, 34, 372478), None)
2025-02-11 12:36:58,469 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None)
2025-02-11 12:36:58,469 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None)
2025-02-11 12:36:58,469 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None)
2025-02-11 12:36:58,470 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None)
2025-02-11 12:36:58,470 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None)
2025-02-11 12:36:58,470 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 280, 'logging (task and project history)', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 37, 44, 435112), datetime.datetime(2025, 2, 10, 8, 28, 28, 947805), None)
2025-02-11 12:36:58,470 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 275, 'add sprints, cycles', 0, 'Make naming customizable', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 48, 52, 680022), datetime.datetime(2025, 2, 10, 8, 38, 37, 622196), None)
2025-02-11 12:36:58,471 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None)
2025-02-11 12:36:58,471 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None)
2025-02-11 12:36:58,471 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None)
2025-02-11 12:36:58,472 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None)
2025-02-11 12:36:58,472 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None)
2025-02-11 12:36:58,472 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None)
2025-02-11 12:36:58,472 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None)
2025-02-11 12:36:58,472 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None)
2025-02-11 12:36:58,472 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None)
2025-02-11 12:36:58,472 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 2, 11, 11, 36, 20, 238219), None)
2025-02-11 12:36:58,472 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 274, 'add support for goals, initiatives, okr´s', 0, 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 46, 27, 204912), datetime.datetime(2025, 2, 10, 8, 28, 17, 663922), None)
2025-02-11 12:36:58,472 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 272, 'implement a markdown text editor like notion', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 28, 18, 300231), datetime.datetime(2025, 2, 10, 8, 28, 39, 669255), None)
2025-02-11 12:36:58,473 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 276, 'add support for priority', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 49, 26, 189497), datetime.datetime(2025, 2, 10, 8, 28, 47, 447612), None)
2025-02-11 12:36:58,473 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 271, 'make sure dynamically added rows has the exact same styling and includes every element', 0, 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 21, 7, 108431), datetime.datetime(2025, 2, 10, 8, 38, 47, 340105), None)
2025-02-11 12:36:58,473 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 281, 'add high level plan', 0, 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 27, 1, 218606), datetime.datetime(2025, 2, 10, 8, 38, 54, 754760), None)
2025-02-11 12:36:58,473 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None)
2025-02-11 12:36:58,473 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 278, 'search feature for tasks list', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 3, 369833), datetime.datetime(2025, 2, 10, 8, 39, 4, 5957), None)
2025-02-11 12:36:58,473 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 273, 'disable parent task selector in epics', 0, 'and add text, Epic can´t have parent tasks', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 0, 45, 20, 740910), datetime.datetime(2025, 2, 10, 8, 39, 17, 639890), None)
2025-02-11 12:36:58,473 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 279, 'github integration', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 38, 238202), datetime.datetime(2025, 2, 10, 8, 39, 24, 168451), None)
2025-02-11 12:36:58,473 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None)
2025-02-11 12:36:58,473 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None)
2025-02-11 12:36:58,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None)
2025-02-11 12:36:58,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None)
2025-02-11 12:36:58,474 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 277, 'custom task workflow statuses', 0, 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- ... (780 characters truncated) ...  tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 16, 3, 352588), datetime.datetime(2025, 2, 10, 8, 38, 28, 123328), None)
2025-02-11 12:36:58,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None)
2025-02-11 12:36:58,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None)
2025-02-11 12:36:58,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None)
2025-02-11 12:36:58,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 282, 'implement same task list in projects but filtered on project', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 17, 786154), datetime.datetime(2025, 2, 10, 9, 41, 17, 787861), None)
2025-02-11 12:36:58,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None)
2025-02-11 12:36:58,474 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 284, 'add type "issue/bug"', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 42, 27, 719439), datetime.datetime(2025, 2, 10, 9, 42, 27, 720908), None)
2025-02-11 12:36:58,475 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 283, 'fix update title', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 58, 769700), datetime.datetime(2025, 2, 10, 8, 46, 47, 282087), None)
2025-02-11 12:36:58,475 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 250, 'Preserve User Preferences', None, 'Persist the user’s chosen view state between sessions.', 'Subtask', False, False, 'Not Started', 242, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), datetime.datetime(2025, 2, 5, 16, 33, 21, 995140), None)
2025-02-11 12:36:58,475 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None)
2025-02-11 12:36:58,475 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 22, 274304), None)
2025-02-11 12:36:58,475 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None)
2025-02-11 12:36:58,476 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 10, 9, 12, 47, 626993), None)
2025-02-11 12:36:58,476 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 285, 'add text truncation to project names in task list', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 45, 47, 27805), datetime.datetime(2025, 2, 10, 9, 45, 47, 29729), None)
2025-02-11 12:36:58,476 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 286, 'add support for labels/tags', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 46, 23, 985620), datetime.datetime(2025, 2, 10, 9, 46, 23, 987564), None)
2025-02-11 12:36:58,476 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None)
2025-02-11 12:36:58,476 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 287, 'when moving a parent item to another project make sure the subtasks are moved as well', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 48, 31, 986870), datetime.datetime(2025, 2, 10, 9, 48, 31, 988859), None)
2025-02-11 12:36:58,477 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None)
2025-02-11 12:36:58,477 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 288, 'when trying to move subtask to another project, make sure a warning is displayed', 0, 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be l ... (312 characters truncated) ... , Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 54, 36, 297869), datetime.datetime(2025, 2, 10, 8, 54, 51, 840686), None)
2025-02-11 12:36:58,477 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 295, 'issue: drag and drop errors', 0, '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 22, 54, 461413), datetime.datetime(2025, 2, 10, 10, 22, 54, 462542), None)
2025-02-11 12:36:58,477 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 244, 'Scroll to Updated Task', None, 'Automatically scroll to the updated task in the list if it’s out of view.', 'Subtask', False, False, 'Completed', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 56, 52, 818501), datetime.datetime(2025, 2, 5, 16, 33, 38, 895813), None)
2025-02-11 12:36:58,477 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None)
2025-02-11 12:36:58,477 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None)
2025-02-11 12:36:58,477 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None)
2025-02-11 12:36:58,478 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 296, 'issue: contributor is lost after updating task', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 26, 43, 881947), datetime.datetime(2025, 2, 10, 10, 26, 43, 884004), None)
2025-02-11 12:36:58,478 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None)
2025-02-11 12:36:58,478 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None)
2025-02-11 12:36:58,478 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 241, 'Provide User Feedback', None, 'As a user, I want to receive immediate feedback after updating a task’s status so that I know the update was successful.', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 55, 19, 826398), datetime.datetime(2025, 2, 5, 12, 55, 19, 826398), None)
2025-02-11 12:36:58,478 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 242, 'User Control Over Views', None, 'As a user, I want to toggle between hierarchical and flat views so that I can switch sorting preferences based on my workflow.', 'User Story', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 2, 5, 12, 55, 50, 108011), datetime.datetime(2025, 2, 5, 12, 55, 50, 108011), None)
2025-02-11 12:36:58,478 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 246, 'Toast Notification', None, 'Display a toast notification confirming the task status update.', 'Subtask', False, False, 'Not Started', 241, 6, 5, 2, datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), None)
2025-02-11 12:36:58,478 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 247, 'Add Temporary Badge', None, 'Add a temporary badge or visual indicator to the updated task.', 'Subtask', False, False, 'Not Started', 241, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), None)
2025-02-11 12:36:58,478 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 248, 'Implement Toggle Button', None, 'Add a toggle button to switch between hierarchical and flat views.', 'Subtask', False, False, 'Not Started', 242, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), None)
2025-02-11 12:36:58,478 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 249, 'Define View States', None, 'Clearly label and define the view states for hierarchical and flat sorting.', 'Subtask', False, False, 'Not Started', 242, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), None)
2025-02-11 12:36:58,478 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), 297, 'example parent epic', 0, '', 'Epic', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 39, 51, 620509), datetime.datetime(2025, 2, 10, 10, 39, 51, 622712), None)
2025-02-11 12:36:58,479 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 291, 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 9, 52, 988609), datetime.datetime(2025, 2, 10, 10, 9, 52, 997455), None)
2025-02-11 12:36:58,479 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 292, 'issue: assigning contributor does not work', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 10, 10, 11, 12, 274809), None)
2025-02-11 12:36:58,479 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None)
2025-02-11 12:36:58,479 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 243, 'Highlight Updated Task', None, 'Highlight the updated task in the UI to provide immediate visual feedback.', 'Subtask', False, False, 'Completed', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 56, 52, 818501), datetime.datetime(2025, 2, 5, 16, 33, 46, 11135), None)
2025-02-11 12:36:58,479 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 245, 'Apply Dynamic Sorting and Filtering', None, 'Ensure the task list dynamically updates its sorting and filtering after a status change.', 'Subtask', False, False, 'In Progress', 240, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 56, 52, 818501), datetime.datetime(2025, 2, 5, 16, 35, 16, 991226), None)
2025-02-11 12:36:58,479 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 240, 'Update Task Workflow', None, 'As a user, I want to update the status of a task so that it reflects the changes in the UI dynamically without reloading the page.', 'User Story', False, False, 'In Progress', None, 6, 5, 8, datetime.datetime(2025, 2, 5, 12, 54, 55, 61344), datetime.datetime(2025, 2, 5, 19, 2, 8, 832430), None)
2025-02-11 12:36:58,479 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None)
2025-02-11 12:36:58,479 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 293, 'click on title should copy the task title and id to clipboard', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 16, 33, 508209), datetime.datetime(2025, 2, 10, 10, 16, 33, 510414), None)
2025-02-11 12:36:58,480 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 294, 'issue: task table filters not working', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 19, 21, 22598), datetime.datetime(2025, 2, 10, 10, 19, 21, 24676), None)
2025-02-11 12:36:58,480 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), 298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None)
2025-02-11 12:36:58,480 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), 299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None)
2025-02-11 12:36:58,481 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None)
2025-02-11 12:36:58,481 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None)
2025-02-11 12:36:58,481 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None)
2025-02-11 12:36:58,481 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 116, 'Frontend Logout Button', 33, 'Add a logout button to the UI and handle session clearing.', 'Subtask', False, False, 'Not Started', None, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 2, 9, 12, 31, 17, 939784), None)
2025-02-11 12:36:58,481 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None)
2025-02-11 12:36:58,482 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None)
2025-02-11 12:36:58,482 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 127, 'Backend API for Password Reset', 68, 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'Subtask', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 2, 10, 23, 59, 50, 734037), None)
2025-02-11 12:36:58,482 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 126, 'Email Configuration for Password Reset', 69, 'Configure email service to send password reset links.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 334340), None)
2025-02-11 12:36:58,482 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None)
2025-02-11 12:36:58,482 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 104, 'Middleware for Role Enforcement', 70, 'As a system, I want to enforce role-based access to specific routes.', 'User Story', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 23, 40, 346816), None)
2025-02-11 12:36:58,482 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None)
2025-02-11 12:36:58,482 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 122, 'Testing Role Enforcement', 71, 'Write tests to ensure proper access control based on roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 185693), None)
2025-02-11 12:36:58,482 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 257, 'Update Task API Integration', 0, "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'Subtask', False, False, 'Not Started', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 22, 55, 49, 566819), datetime.datetime(2025, 2, 5, 22, 18, 17, 807154), None)
2025-02-11 12:36:58,482 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 121, 'Develop Role Enforcement Middleware', 72, 'Implement middleware to check user roles for access control.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 187439), None)
2025-02-11 12:36:58,483 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 123, 'Backend API for Profile Management', 74, 'Create PATCH /api/profile endpoint to update user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 678781), None)
2025-02-11 12:36:58,483 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 125, 'Testing Profile Updates', 75, 'Write tests for profile update functionality.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 680382), None)
2025-02-11 12:36:58,483 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None)
2025-02-11 12:36:58,483 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None)
2025-02-11 12:36:58,483 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 24, 54, 245010), None)
2025-02-11 12:36:58,483 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 136, 'Page scroll should stay in position when reloading', 2, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 16, 18, 21, 50, 187247), datetime.datetime(2025, 1, 16, 19, 22, 36, 214901), None)
2025-02-11 12:36:58,484 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None)
2025-02-11 12:36:58,484 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None)
2025-02-11 12:36:58,484 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None)
2025-02-11 12:36:58,484 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 105, 'Profile Management', 73, 'As a user, I want to update my profile (username, email, password).', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 339830), None)
2025-02-11 12:36:58,485 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None)
2025-02-11 12:36:58,485 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 124, 'Frontend Profile Page', 76, 'Develop a profile page for editing user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 22, 36, 344057), None)
2025-02-11 12:36:58,485 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None)
2025-02-11 12:36:58,485 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None)
2025-02-11 12:36:58,486 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None)
2025-02-11 12:36:58,486 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None)
2025-02-11 12:36:58,486 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 33, 908549), None)
2025-02-11 12:36:58,487 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, 5, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 47, 274896), None)
2025-02-11 12:36:58,487 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None)
2025-02-11 12:36:58,487 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, 5, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 11, 8, 25, 7, 992524), None)
2025-02-11 12:36:58,487 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 103, 'Role Assignment', 77, 'As an administrator, I want to assign roles to users so that I can control access to certain features.', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 345302), None)
2025-02-11 12:36:58,487 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 120, 'Testing Role Assignment', 78, 'Write tests to validate role changes and restrictions.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 58, 383687), datetime.datetime(2025, 1, 16, 19, 22, 36, 347418), None)
2025-02-11 12:36:58,487 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 119, 'Backend API for Role Assignment', 79, 'Create POST /api/assign-role endpoint to manage user roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 40, 58, 383687), datetime.datetime(2025, 1, 16, 19, 22, 36, 348594), None)
2025-02-11 12:36:58,487 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 66, 'Setup OAuth scopes for Google API', 81, 'Determine the required OAuth scopes for your application and add them to the configuration.\nedit', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 350872), None)
2025-02-11 12:36:58,488 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 98, 'Introduce Role-Based Access Control', 82, 'PRD: Define roles and permissions to restrict access. Roles include admin, developer, and viewer. Implement middleware for access control checks.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 54, 9, 204981), datetime.datetime(2025, 1, 16, 19, 22, 36, 352296), None)
2025-02-11 12:36:58,488 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 44, 'Test Performance with 500 Tasks', 85, 'Ensure dropdown performance remains smooth with 500 tasks.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 1, 16, 19, 22, 36, 356013), None)
2025-02-11 12:36:58,488 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 83, 'Notifications', 83, 'Implement sending notifications to selected people triggered by events.\nCustomizing messages:\nPossibility to adjust how detailed the information sh ... (659 characters truncated) ... e message system.\n\nRead more: https://www.notion.so/lacunamedia/Create-and-send-messages-triggered-by-events-174979257fc08022b18bc76d3b28a4b3?pvs=4', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 7, 16, 10, 54, 30609), datetime.datetime(2025, 2, 5, 19, 51, 35, 872202), None)
2025-02-11 12:36:58,488 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 118, 'Database Changes for Role Assignment', 80, 'Add a role column to the users table.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 58, 383687), datetime.datetime(2025, 2, 5, 19, 51, 51, 407486), None)
2025-02-11 12:36:58,488 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 99, 'Enhance User Account Management', 84, 'PRD: Provide additional account management features for users and admins. Includes profile management, password reset functionality, and audit logging.', 'Epic', False, False, 'Not Started', None, 6, 5, 13, datetime.datetime(2025, 1, 7, 19, 54, 20, 692949), datetime.datetime(2025, 2, 5, 19, 57, 16, 985727), None)
2025-02-11 12:36:58,489 DEBUG: Row (2, 'Project Beta', datetime.date(2024, 2, 1), datetime.date(2024, 11, 30), None, 10, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)
2025-02-11 12:36:58,489 DEBUG: Row (5, 'Project Delta', datetime.date(2025, 1, 4), datetime.date(2025, 3, 8), None, 0, datetime.datetime(2025, 1, 3, 8, 16, 18, 658051), datetime.datetime(2025, 1, 3, 8, 16, 18, 658058), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)
2025-02-11 12:36:58,489 DEBUG: Row (4, 'Project Theta', datetime.date(2024, 12, 11), datetime.date(2024, 12, 27), None, 0, datetime.datetime(2024, 12, 12, 19, 26, 42, 642098), datetime.datetime(2024, 12, 12, 19, 26, 42, 642102), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)
2025-02-11 12:36:58,489 DEBUG: Row (3, 'Project Gamma', datetime.date(2024, 3, 1), datetime.date(2024, 10, 31), None, 20, datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)
2025-02-11 12:36:58,491 INFO: ROLLBACK
2025-02-11 12:36:58,500 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:58] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-02-11 12:36:58,542 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:58] "[36mGET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1[0m" 304 -
2025-02-11 12:36:58,543 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:58] "[36mGET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1[0m" 304 -
2025-02-11 12:36:58,550 INFO: 127.0.0.1 - - [11/Feb/2025 12:36:58] "GET /?__debugger__=yes&cmd=resource&f=console.png&s=oKOn5lJdUU6v6jA5ZyK7 HTTP/1.1" 200 -
2025-02-11 12:37:01,443 INFO: Flash messages: []
2025-02-11 12:37:01,445 INFO: BEGIN (implicit)
2025-02-11 12:37:01,446 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date 
FROM project LEFT OUTER JOIN task AS task_1 ON project.id = task_1.project_id
2025-02-11 12:37:01,446 INFO: [cached since 295.7s ago] {}
2025-02-11 12:37:01,448 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at', 'task_1_id', 'task_1_name', 'task_1_sort_order', 'task_1_description', 'task_1_task_type', 'task_1_is_archived', 'task_1_completed', 'task_1_status', 'task_1_parent_id', 'task_1_project_id', 'task_1_contributor_id', 'task_1_story_points', 'task_1_created_at', 'task_1_updated_at', 'task_1_completed_date')
2025-02-11 12:37:01,450 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 59, 'Bind Dropdown to Form Field', 48, 'Bind the dropdown to the form’s parent task field.', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 15, 491910), None)
2025-02-11 12:37:01,451 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None)
2025-02-11 12:37:01,451 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None)
2025-02-11 12:37:01,452 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None)
2025-02-11 12:37:01,452 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None)
2025-02-11 12:37:01,452 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 100, '1.1 User Registration', 18, 'As a user, I want to register with a username, email, and password so that I can create an account and access the system.\n\n**Acceptance Criteria:** ... (148 characters truncated) ... licate accounts.\n•\tPasswords must meet complexity requirements and be securely stored.\n•\tSuccessful registration redirects users to a login page.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 19, 59, 9, 44667), datetime.datetime(2025, 1, 16, 19, 22, 36, 251812), None)
2025-02-11 12:37:01,452 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 269, 'fix styling for sweetalert', 0, '', 'User Story', False, False, 'In Progress', None, 6, None, 0, datetime.datetime(2025, 2, 8, 15, 54, 56, 717846), datetime.datetime(2025, 2, 10, 8, 39, 32, 172437), None)
2025-02-11 12:37:01,453 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 265, 'smooth transition for toggles', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 27, 23, 422612), datetime.datetime(2025, 2, 10, 8, 46, 55, 831743), None)
2025-02-11 12:37:01,453 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 266, 'highlight the nested tasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 28, 30, 382949), datetime.datetime(2025, 2, 10, 8, 47, 4, 382929), None)
2025-02-11 12:37:01,453 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 264, 'close all / open all childtasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 25, 20, 101418), datetime.datetime(2025, 2, 10, 8, 47, 14, 915970), None)
2025-02-11 12:37:01,453 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 267, 'improvements to toggles and nested tasks', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 29, 12, 464594), datetime.datetime(2025, 2, 10, 8, 47, 24, 581680), None)
2025-02-11 12:37:01,453 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 61, 'Parent task assignment', 35, '', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 4, 22, 31, 45, 205815), datetime.datetime(2025, 1, 16, 19, 22, 36, 279012), None)
2025-02-11 12:37:01,453 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), 270, 'the newest task', 0, '', 'Subtask', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 0, 7, 34, 368035), datetime.datetime(2025, 2, 10, 1, 7, 34, 372478), None)
2025-02-11 12:37:01,454 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 112, '1.2.2 Frontend Login Page', 21, 'Develop a frontend form for user login with email and password inputs.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 683644), None)
2025-02-11 12:37:01,454 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 60, 'Test Form Submission', 49, 'Test form submission to ensure the selected parent task is passed correctly.\nddd', 'Subtask', False, False, 'Not Started', 49, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 28, 367797), None)
2025-02-11 12:37:01,454 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 110, '1.1.4 Unit Tests for Registration', 23, 'Write unit tests for:\n\n•\tValid registration.\n•\tDuplicate username/email scenarios.\n•\tInvalid input handling.\nff', 'Subtask', False, False, 'Not Started', 100, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 686902), None)
2025-02-11 12:37:01,454 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 101, '1.2 User Login', 24, 'As a user, I want to log in with my email and password so that I can access my account.\n\n**Acceptance Criteria:**\n\n•\tUsers can log in with a valid email and password.\n•\tErrors are displayed for invalid credentials.\n•\tSuccessful login stores a session or JWT token.', 'User Story', False, False, 'Not Started', 97, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 25, 53, 687936), None)
2025-02-11 12:37:01,454 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 111, '1.2.1 Backend API for Login', 25, 'Create POST /api/login endpoint to handle user login.\njjsjj', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 53, 689096), None)
2025-02-11 12:37:01,454 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 280, 'logging (task and project history)', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 37, 44, 435112), datetime.datetime(2025, 2, 10, 8, 28, 28, 947805), None)
2025-02-11 12:37:01,454 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 275, 'add sprints, cycles', 0, 'Make naming customizable', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 48, 52, 680022), datetime.datetime(2025, 2, 10, 8, 38, 37, 622196), None)
2025-02-11 12:37:01,454 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None)
2025-02-11 12:37:01,455 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 49, 'Integrate Dropdown with Task Form', 47, 'Ensure the dropdown integrates seamlessly with the task form for data submission.', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 36, 133259), None)
2025-02-11 12:37:01,455 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None)
2025-02-11 12:37:01,455 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None)
2025-02-11 12:37:01,455 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 113, '1.2.3 Session Management', 26, 'Implement secure session handling using cookies or JWT.', 'Subtask', False, False, 'Not Started', 101, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 25, 20, 968680), None)
2025-02-11 12:37:01,455 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 58, 'Handle Selection Events', 46, 'Implement event listeners to update the form’s state when the selection changes.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 43, 569501), None)
2025-02-11 12:37:01,455 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 57, 'Ensure None Option Availability', 45, 'Add “None” as a selectable option and ensure it stays at the top of the list.', 'Subtask', False, False, 'Not Started', 48, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 51, 310240), None)
2025-02-11 12:37:01,455 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 48, 'Select and Deselect Parent Tasks', 44, 'Allow users to select a parent task or deselect by choosing "None."', 'User Story', False, False, 'Not Started', 61, 6, 5, 5, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 25, 59, 651639), None)
2025-02-11 12:37:01,456 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 56, 'Paginate API Responses', 42, 'Implement server-side filtering and pagination for large datasets.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 16, 233517), None)
2025-02-11 12:37:01,456 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 107, '1.1.1 Database Changes for User Registration', 19, '1. Add a users table with fields for username, email, password_hash, created_at, and updated_at.\n   CREATE TABLE public.users (\n       id SERIAL PR ... (95 characters truncated) ... NULL,\n       password_hash VARCHAR(255) NOT NULL,\n       created_at TIMESTAMP DEFAULT NOW(),\n       updated_at TIMESTAMP DEFAULT NOW()\n);\n\n\n\n', 'Subtask', False, False, 'Not Started', 100, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 2, 11, 11, 36, 20, 238219), None)
2025-02-11 12:37:01,456 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 274, 'add support for goals, initiatives, okr´s', 0, 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 46, 27, 204912), datetime.datetime(2025, 2, 10, 8, 28, 17, 663922), None)
2025-02-11 12:37:01,457 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 272, 'implement a markdown text editor like notion', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 28, 18, 300231), datetime.datetime(2025, 2, 10, 8, 28, 39, 669255), None)
2025-02-11 12:37:01,457 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 276, 'add support for priority', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 49, 26, 189497), datetime.datetime(2025, 2, 10, 8, 28, 47, 447612), None)
2025-02-11 12:37:01,457 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 271, 'make sure dynamically added rows has the exact same styling and includes every element', 0, 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 21, 7, 108431), datetime.datetime(2025, 2, 10, 8, 38, 47, 340105), None)
2025-02-11 12:37:01,457 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 281, 'add high level plan', 0, 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 27, 1, 218606), datetime.datetime(2025, 2, 10, 8, 38, 54, 754760), None)
2025-02-11 12:37:01,457 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 114, '1.2.4 Unit Tests for Login', 27, 'Write tests for successful and failed login attempts.', 'Subtask', False, False, 'Not Started', 101, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 32, 986548), datetime.datetime(2025, 1, 16, 19, 22, 36, 265866), None)
2025-02-11 12:37:01,457 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 278, 'search feature for tasks list', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 3, 369833), datetime.datetime(2025, 2, 10, 8, 39, 4, 5957), None)
2025-02-11 12:37:01,458 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 273, 'disable parent task selector in epics', 0, 'and add text, Epic can´t have parent tasks', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 0, 45, 20, 740910), datetime.datetime(2025, 2, 10, 8, 39, 17, 639890), None)
2025-02-11 12:37:01,458 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 279, 'github integration', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 38, 238202), datetime.datetime(2025, 2, 10, 8, 39, 24, 168451), None)
2025-02-11 12:37:01,458 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 106, 'Password Reset', 28, 'As a user, I want to reset my password securely using email.', 'User Story', False, False, 'Not Started', 97, 6, None, 8, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 267247), None)
2025-02-11 12:37:01,458 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None)
2025-02-11 12:37:01,458 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None)
2025-02-11 12:37:01,459 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None)
2025-02-11 12:37:01,459 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 277, 'custom task workflow statuses', 0, 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- ... (780 characters truncated) ...  tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 16, 3, 352588), datetime.datetime(2025, 2, 10, 8, 38, 28, 123328), None)
2025-02-11 12:37:01,459 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 68, 'Register application in GitHub Developer Console', 15, 'Create a new application in GitHub Developer Console and get the client ID and secret.', 'Subtask', False, False, 'Not Started', 63, 6, None, 3, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 247746), None)
2025-02-11 12:37:01,459 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 69, 'Handle callback from GitHub', 16, 'Implement the callback endpoint to process the authorization code from GitHub.', 'Subtask', False, False, 'Not Started', 63, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 248912), None)
2025-02-11 12:37:01,459 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 108, '1.1.2 Backend API for Registration', 20, '•\tCreate an endpoint POST /api/register:\n•\tValidate input fields.\n•\tHash the password using bcrypt or argon2.\n•\tInsert the user into the users table.\n•\tReturn success/failure responses.\ndddhfff\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 33, 67643), None)
2025-02-11 12:37:01,459 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 282, 'implement same task list in projects but filtered on project', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 17, 786154), datetime.datetime(2025, 2, 10, 9, 41, 17, 787861), None)
2025-02-11 12:37:01,459 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 97, '1. Build Basic User Authentication System', 17, 'PRD: Provide functionality for user registration, login, and logout. Securely handle user credentials using hashed passwords. Enable session-based or token-based authentication for logged-in users. Deliver an intuitive and secure UI/UX for authentication flows.', 'Epic', False, False, 'Not Started', None, 6, 5, 18, datetime.datetime(2025, 1, 7, 19, 53, 50, 85064), datetime.datetime(2025, 1, 16, 19, 22, 36, 250169), None)
2025-02-11 12:37:01,459 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 284, 'add type "issue/bug"', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 42, 27, 719439), datetime.datetime(2025, 2, 10, 9, 42, 27, 720908), None)
2025-02-11 12:37:01,460 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 283, 'fix update title', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 58, 769700), datetime.datetime(2025, 2, 10, 8, 46, 47, 282087), None)
2025-02-11 12:37:01,460 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 250, 'Preserve User Preferences', None, 'Persist the user’s chosen view state between sessions.', 'Subtask', False, False, 'Not Started', 242, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), datetime.datetime(2025, 2, 5, 16, 33, 21, 995140), None)
2025-02-11 12:37:01,460 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 109, '1.1.3 Create Frontend Registration Page', 22, 'Develop a frontend form to collect user registration details.\n•\tAdd a form for username, email, and password inputs.\n•\tUse client-side validation (e.g., email format).\n•\tSend a POST request to /api/register.\n\n', 'Subtask', False, False, 'Not Started', 100, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 40, 16, 86402), datetime.datetime(2025, 1, 16, 19, 25, 53, 684988), None)
2025-02-11 12:37:01,460 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 50, 'Retrieve Current Parent Task', 37, 'Retrieve the current parent task’s ID and name from the backend.', 'Subtask', False, False, 'In Progress', None, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 22, 274304), None)
2025-02-11 12:37:01,460 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 45, 'Display Default Value in Dropdown', 36, 'Ensure the dropdown reflects the current parent task as selected or displays "None" if no parent task is assigned.', 'User Story', False, False, 'Not Started', 61, 6, None, 3, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 280493), None)
2025-02-11 12:37:01,460 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 10, 9, 12, 47, 626993), None)
2025-02-11 12:37:01,460 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 285, 'add text truncation to project names in task list', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 45, 47, 27805), datetime.datetime(2025, 2, 10, 9, 45, 47, 29729), None)
2025-02-11 12:37:01,460 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 286, 'add support for labels/tags', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 46, 23, 985620), datetime.datetime(2025, 2, 10, 9, 46, 23, 987564), None)
2025-02-11 12:37:01,461 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 51, 'Set Default Value', 38, 'Set the default value in the dropdown based on the retrieved data.', 'Subtask', False, False, 'Not Started', 45, 6, None, 1, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 1, 16, 19, 22, 36, 283309), None)
2025-02-11 12:37:01,461 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 287, 'when moving a parent item to another project make sure the subtasks are moved as well', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 48, 31, 986870), datetime.datetime(2025, 2, 10, 9, 48, 31, 988859), None)
2025-02-11 12:37:01,461 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 46, 'Search for Parent Tasks', 39, 'Allow users to search for tasks dynamically in the dropdown by typing.', 'User Story', False, False, 'Not Started', 61, 6, None, 8, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 1, 16, 19, 22, 36, 284882), None)
2025-02-11 12:37:01,461 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 288, 'when trying to move subtask to another project, make sure a warning is displayed', 0, 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be l ... (312 characters truncated) ... , Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 54, 36, 297869), datetime.datetime(2025, 2, 10, 8, 54, 51, 840686), None)
2025-02-11 12:37:01,462 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 295, 'issue: drag and drop errors', 0, '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 22, 54, 461413), datetime.datetime(2025, 2, 10, 10, 22, 54, 462542), None)
2025-02-11 12:37:01,462 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 244, 'Scroll to Updated Task', None, 'Automatically scroll to the updated task in the list if it’s out of view.', 'Subtask', False, False, 'Completed', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 56, 52, 818501), datetime.datetime(2025, 2, 5, 16, 33, 38, 895813), None)
2025-02-11 12:37:01,462 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 128, 'Frontend Password Reset Page', 29, 'Develop a page for users to enter a new password using a valid token.', 'Subtask', False, False, 'Not Started', 106, 6, None, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 269158), None)
2025-02-11 12:37:01,463 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 129, 'Testing Password Reset', 30, 'Write tests for email delivery, token validation, and password updates.', 'Subtask', False, False, 'Not Started', 106, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 270849), None)
2025-02-11 12:37:01,463 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 55, 'Enable Lazy Loading', 43, 'Enable lazy loading or virtualization in Virtual Select.', 'Subtask', False, False, 'Not Started', 47, 6, 5, 8, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 8, 99271), None)
2025-02-11 12:37:01,463 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 296, 'issue: contributor is lost after updating task', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 26, 43, 881947), datetime.datetime(2025, 2, 10, 10, 26, 43, 884004), None)
2025-02-11 12:37:01,463 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 54, 'Test Partial Matching', 40, 'Ensure the search results update in real-time as the user types.', 'Subtask', False, False, 'Not Started', 46, 6, 5, 2, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 26, 29, 251047), None)
2025-02-11 12:37:01,463 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 47, 'Handle Large Datasets Efficiently', 41, 'Ensure the dropdown can handle large datasets (e.g., thousands of tasks) without noticeable lag.', 'User Story', False, False, 'Not Started', 61, 6, 5, 13, datetime.datetime(2025, 1, 4, 1, 47, 25, 942574), datetime.datetime(2025, 2, 11, 8, 26, 23, 67490), None)
2025-02-11 12:37:01,463 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 241, 'Provide User Feedback', None, 'As a user, I want to receive immediate feedback after updating a task’s status so that I know the update was successful.', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 55, 19, 826398), datetime.datetime(2025, 2, 5, 12, 55, 19, 826398), None)
2025-02-11 12:37:01,464 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 242, 'User Control Over Views', None, 'As a user, I want to toggle between hierarchical and flat views so that I can switch sorting preferences based on my workflow.', 'User Story', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 2, 5, 12, 55, 50, 108011), datetime.datetime(2025, 2, 5, 12, 55, 50, 108011), None)
2025-02-11 12:37:01,464 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 246, 'Toast Notification', None, 'Display a toast notification confirming the task status update.', 'Subtask', False, False, 'Not Started', 241, 6, 5, 2, datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), None)
2025-02-11 12:37:01,464 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 247, 'Add Temporary Badge', None, 'Add a temporary badge or visual indicator to the updated task.', 'Subtask', False, False, 'Not Started', 241, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), datetime.datetime(2025, 2, 5, 12, 57, 37, 151479), None)
2025-02-11 12:37:01,464 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 248, 'Implement Toggle Button', None, 'Add a toggle button to switch between hierarchical and flat views.', 'Subtask', False, False, 'Not Started', 242, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), None)
2025-02-11 12:37:01,464 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 249, 'Define View States', None, 'Clearly label and define the view states for hierarchical and flat sorting.', 'Subtask', False, False, 'Not Started', 242, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), datetime.datetime(2025, 2, 5, 12, 58, 14, 518518), None)
2025-02-11 12:37:01,464 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), 297, 'example parent epic', 0, '', 'Epic', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 39, 51, 620509), datetime.datetime(2025, 2, 10, 10, 39, 51, 622712), None)
2025-02-11 12:37:01,464 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 291, 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 9, 52, 988609), datetime.datetime(2025, 2, 10, 10, 9, 52, 997455), None)
2025-02-11 12:37:01,464 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 292, 'issue: assigning contributor does not work', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 10, 10, 11, 12, 274809), None)
2025-02-11 12:37:01,465 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None)
2025-02-11 12:37:01,465 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 243, 'Highlight Updated Task', None, 'Highlight the updated task in the UI to provide immediate visual feedback.', 'Subtask', False, False, 'Completed', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 12, 56, 52, 818501), datetime.datetime(2025, 2, 5, 16, 33, 46, 11135), None)
2025-02-11 12:37:01,465 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 245, 'Apply Dynamic Sorting and Filtering', None, 'Ensure the task list dynamically updates its sorting and filtering after a status change.', 'Subtask', False, False, 'In Progress', 240, 6, 5, 5, datetime.datetime(2025, 2, 5, 12, 56, 52, 818501), datetime.datetime(2025, 2, 5, 16, 35, 16, 991226), None)
2025-02-11 12:37:01,465 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 240, 'Update Task Workflow', None, 'As a user, I want to update the status of a task so that it reflects the changes in the UI dynamically without reloading the page.', 'User Story', False, False, 'In Progress', None, 6, 5, 8, datetime.datetime(2025, 2, 5, 12, 54, 55, 61344), datetime.datetime(2025, 2, 5, 19, 2, 8, 832430), None)
2025-02-11 12:37:01,465 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None)
2025-02-11 12:37:01,465 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), 293, 'click on title should copy the task title and id to clipboard', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 16, 33, 508209), datetime.datetime(2025, 2, 10, 10, 16, 33, 510414), None)
2025-02-11 12:37:01,466 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 294, 'issue: task table filters not working', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 19, 21, 22598), datetime.datetime(2025, 2, 10, 10, 19, 21, 24676), None)
2025-02-11 12:37:01,466 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), 298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None)
2025-02-11 12:37:01,466 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), 299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None)
2025-02-11 12:37:01,466 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None)
2025-02-11 12:37:01,466 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 102, 'Logout', 31, 'As a user, I want to log out so that I can end my session securely.', 'User Story', False, False, 'Not Started', 97, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 272605), None)
2025-02-11 12:37:01,467 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 117, 'Tests for Logout', 32, 'Verify session invalidation and redirection to the login page.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 274575), None)
2025-02-11 12:37:01,467 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 116, 'Frontend Logout Button', 33, 'Add a logout button to the UI and handle session clearing.', 'Subtask', False, False, 'Not Started', None, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 2, 9, 12, 31, 17, 939784), None)
2025-02-11 12:37:01,467 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 95, 'Develop backend API for managing contributor roles', 67, 'Create endpoints to add, update, and delete contributor roles for tasks.  ', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 2, 276492), None)
2025-02-11 12:37:01,468 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 115, 'Backend API for Logout', 34, 'Create POST /api/logout endpoint to invalidate user sessions.', 'Subtask', False, False, 'Not Started', 102, 6, None, 3, datetime.datetime(2025, 1, 7, 20, 40, 45, 815252), datetime.datetime(2025, 1, 16, 19, 22, 36, 277547), None)
2025-02-11 12:37:01,468 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 127, 'Backend API for Password Reset', 68, 'Create endpoints to handle password reset requests and token validation.\ndfdf\n\nasdasd', 'Subtask', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 2, 10, 23, 59, 50, 734037), None)
2025-02-11 12:37:01,468 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 126, 'Email Configuration for Password Reset', 69, 'Configure email service to send password reset links.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 36, 413402), datetime.datetime(2025, 1, 16, 19, 22, 36, 334340), None)
2025-02-11 12:37:01,469 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 94, 'Add database support for contributor roles', 66, 'Introduce a roles table and link contributors to specific roles for tasks.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 22, 56, 181530), None)
2025-02-11 12:37:01,469 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 104, 'Middleware for Role Enforcement', 70, 'As a system, I want to enforce role-based access to specific routes.', 'User Story', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 23, 40, 346816), None)
2025-02-11 12:37:01,469 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 96, 'Allow admin users to create and customize contributor roles via frontend', 65, 'Provide UI functionality for admins to manage contributor roles dynamically.', 'Subtask', False, False, 'Not Started', 87, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 39, 28, 197613), datetime.datetime(2025, 2, 11, 8, 23, 13, 139282), None)
2025-02-11 12:37:01,469 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 122, 'Testing Role Enforcement', 71, 'Write tests to ensure proper access control based on roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 185693), None)
2025-02-11 12:37:01,469 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 257, 'Update Task API Integration', 0, "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'Subtask', False, False, 'Not Started', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 22, 55, 49, 566819), datetime.datetime(2025, 2, 5, 22, 18, 17, 807154), None)
2025-02-11 12:37:01,470 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 121, 'Develop Role Enforcement Middleware', 72, 'Implement middleware to check user roles for access control.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 7, 415346), datetime.datetime(2025, 1, 16, 19, 23, 58, 187439), None)
2025-02-11 12:37:01,470 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 123, 'Backend API for Profile Management', 74, 'Create PATCH /api/profile endpoint to update user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 678781), None)
2025-02-11 12:37:01,470 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 125, 'Testing Profile Updates', 75, 'Write tests for profile update functionality.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 24, 19, 680382), None)
2025-02-11 12:37:01,470 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 87, 'Create and customize contributor roles', 64, 'As an admin, I want to create and manage contributor roles like QA, Code Reviewer, and UI/UX to reflect team structure.', 'User Story', False, False, 'Not Started', 84, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 33, 43, 600461), datetime.datetime(2025, 2, 11, 8, 23, 23, 402442), None)
2025-02-11 12:37:01,470 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 91, 'Update database schema for task ownership', 62, 'Add a column or relationship to assign a single owner per task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 33, 670381), None)
2025-02-11 12:37:01,470 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 53, 'Implement AJAX Search', 52, 'Implement AJAX-based search to fetch tasks dynamically from the backend.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 24, 54, 245010), None)
2025-02-11 12:37:01,470 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 136, 'Page scroll should stay in position when reloading', 2, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 16, 18, 21, 50, 187247), datetime.datetime(2025, 1, 16, 19, 22, 36, 214901), None)
2025-02-11 12:37:01,470 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 93, 'Update frontend to manage task ownership', 61, 'Allow users to assign or update the task owner via the UI.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 8, 23, 42, 771565), None)
2025-02-11 12:37:01,471 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 86, 'Allow designation of task owner', 60, 'As an admin, I want to designate a single owner for each task to clearly indicate responsibility.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 33, 29, 330562), datetime.datetime(2025, 2, 11, 8, 23, 51, 269557), None)
2025-02-11 12:37:01,471 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 89, 'Develop backend API for adding contributors to a task', 59, 'Create endpoints to add, update, and remove contributors for a task.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 23, 58, 436495), None)
2025-02-11 12:37:01,471 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 105, 'Profile Management', 73, 'As a user, I want to update my profile (username, email, password).', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 339830), None)
2025-02-11 12:37:01,471 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 88, 'Update database schema for multiple contributors', 58, 'Modify the task table to support many-to-many relationships for contributors.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 3, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 5, 873554), None)
2025-02-11 12:37:01,473 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 124, 'Frontend Profile Page', 76, 'Develop a profile page for editing user details.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 41, 20, 321287), datetime.datetime(2025, 1, 16, 19, 22, 36, 344057), None)
2025-02-11 12:37:01,473 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 92, 'Develop backend API for assigning task owner', 63, 'Create endpoints to assign or update the owner of a task.', 'Subtask', False, False, 'Not Started', 86, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 17, 531925), datetime.datetime(2025, 2, 11, 9, 19, 44, 27744), None)
2025-02-11 12:37:01,473 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 90, 'Update frontend to display and manage multiple contributors', 57, 'Allow users to view, add, or remove multiple contributors via the UI.', 'Subtask', False, False, 'Not Started', 85, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 39, 2, 14761), datetime.datetime(2025, 2, 11, 8, 24, 13, 204884), None)
2025-02-11 12:37:01,473 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 85, 'Assign multiple contributors to a task', 56, 'As an admin, I want to assign multiple contributors to a task so that it can reflect all team members responsible.', 'User Story', False, False, 'Not Started', 84, 6, 5, 5, datetime.datetime(2025, 1, 7, 19, 32, 39, 466022), datetime.datetime(2025, 2, 11, 8, 24, 21, 69473), None)
2025-02-11 12:37:01,473 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 84, 'Enhance Task Contributor Management', 55, 'PRD: Enhance task contributor management to include a single owner and multiple roles customizable by admins. Roles can include QA, Code Reviewer, UI ... (335 characters truncated) ... onalities in the frontend.\n\t•\tPerform end-to-end testing to validate that the new features align with user requirements and acceptance criteria.\n', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 30, 21, 149869), datetime.datetime(2025, 2, 11, 8, 24, 26, 494016), None)
2025-02-11 12:37:01,473 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 43, 'Integrate Dropdown Library', 54, 'Integrate the chosen dropdown library into the project.', 'Subtask', False, False, 'Completed', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 33, 908549), None)
2025-02-11 12:37:01,473 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 42, 'Choose Dropdown Library', 53, 'Research and decide on the dropdown library to use.', 'Subtask', False, False, 'Completed', None, 6, 5, 3, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 2, 11, 8, 24, 47, 274896), None)
2025-02-11 12:37:01,473 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 52, 'Add Search Box to Dropdown', 51, 'Configure the search box in Virtual Select to appear at the top of the dropdown.', 'Subtask', False, False, 'Completed', 41, 6, 5, 3, datetime.datetime(2025, 1, 4, 2, 2, 21, 237339), datetime.datetime(2025, 2, 11, 8, 25, 1, 469601), None)
2025-02-11 12:37:01,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 41, 'Implement Searchable Dropdown', 50, 'As a user, I want a searchable dropdown for parent task assignment.', 'User Story', False, False, 'Completed', None, 6, 5, 8, datetime.datetime(2025, 1, 3, 9, 14, 28, 285904), datetime.datetime(2025, 2, 11, 8, 25, 7, 992524), None)
2025-02-11 12:37:01,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 103, 'Role Assignment', 77, 'As an administrator, I want to assign roles to users so that I can control access to certain features.', 'User Story', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 37, 47, 717804), datetime.datetime(2025, 1, 16, 19, 22, 36, 345302), None)
2025-02-11 12:37:01,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 120, 'Testing Role Assignment', 78, 'Write tests to validate role changes and restrictions.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 58, 383687), datetime.datetime(2025, 1, 16, 19, 22, 36, 347418), None)
2025-02-11 12:37:01,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 119, 'Backend API for Role Assignment', 79, 'Create POST /api/assign-role endpoint to manage user roles.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 7, 20, 40, 58, 383687), datetime.datetime(2025, 1, 16, 19, 22, 36, 348594), None)
2025-02-11 12:37:01,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 66, 'Setup OAuth scopes for Google API', 81, 'Determine the required OAuth scopes for your application and add them to the configuration.\nedit', 'Subtask', False, False, 'Not Started', None, 6, 5, 2, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 350872), None)
2025-02-11 12:37:01,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 98, 'Introduce Role-Based Access Control', 82, 'PRD: Define roles and permissions to restrict access. Roles include admin, developer, and viewer. Implement middleware for access control checks.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 19, 54, 9, 204981), datetime.datetime(2025, 1, 16, 19, 22, 36, 352296), None)
2025-02-11 12:37:01,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 44, 'Test Performance with 500 Tasks', 85, 'Ensure dropdown performance remains smooth with 500 tasks.', 'Subtask', False, False, 'Not Started', None, 6, 5, 5, datetime.datetime(2025, 1, 3, 9, 16, 2, 607548), datetime.datetime(2025, 1, 16, 19, 22, 36, 356013), None)
2025-02-11 12:37:01,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 83, 'Notifications', 83, 'Implement sending notifications to selected people triggered by events.\nCustomizing messages:\nPossibility to adjust how detailed the information sh ... (659 characters truncated) ... e message system.\n\nRead more: https://www.notion.so/lacunamedia/Create-and-send-messages-triggered-by-events-174979257fc08022b18bc76d3b28a4b3?pvs=4', 'Epic', False, False, 'Not Started', None, 6, 5, 0, datetime.datetime(2025, 1, 7, 16, 10, 54, 30609), datetime.datetime(2025, 2, 5, 19, 51, 35, 872202), None)
2025-02-11 12:37:01,474 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 118, 'Database Changes for Role Assignment', 80, 'Add a role column to the users table.', 'Subtask', False, False, 'Not Started', None, 6, 5, 3, datetime.datetime(2025, 1, 7, 20, 40, 58, 383687), datetime.datetime(2025, 2, 5, 19, 51, 51, 407486), None)
2025-02-11 12:37:01,475 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 99, 'Enhance User Account Management', 84, 'PRD: Provide additional account management features for users and admins. Includes profile management, password reset functionality, and audit logging.', 'Epic', False, False, 'Not Started', None, 6, 5, 13, datetime.datetime(2025, 1, 7, 19, 54, 20, 692949), datetime.datetime(2025, 2, 5, 19, 57, 16, 985727), None)
2025-02-11 12:37:01,475 DEBUG: Row (2, 'Project Beta', datetime.date(2024, 2, 1), datetime.date(2024, 11, 30), None, 10, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)
2025-02-11 12:37:01,475 DEBUG: Row (5, 'Project Delta', datetime.date(2025, 1, 4), datetime.date(2025, 3, 8), None, 0, datetime.datetime(2025, 1, 3, 8, 16, 18, 658051), datetime.datetime(2025, 1, 3, 8, 16, 18, 658058), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)
2025-02-11 12:37:01,475 DEBUG: Row (4, 'Project Theta', datetime.date(2024, 12, 11), datetime.date(2024, 12, 27), None, 0, datetime.datetime(2024, 12, 12, 19, 26, 42, 642098), datetime.datetime(2024, 12, 12, 19, 26, 42, 642102), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)
2025-02-11 12:37:01,475 DEBUG: Row (3, 'Project Gamma', datetime.date(2024, 3, 1), datetime.date(2024, 10, 31), None, 20, datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None)
2025-02-11 12:37:01,477 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,477 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 6}
2025-02-11 12:37:01,478 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,478 DEBUG: Row (439,)
2025-02-11 12:37:01,479 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:37:01,479 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 6}
2025-02-11 12:37:01,479 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,480 DEBUG: Row (0,)
2025-02-11 12:37:01,480 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,480 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 6}
2025-02-11 12:37:01,481 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,481 DEBUG: Row (439,)
2025-02-11 12:37:01,481 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:37:01,481 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 6}
2025-02-11 12:37:01,482 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,482 DEBUG: Row (0,)
2025-02-11 12:37:01,483 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,483 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 7}
2025-02-11 12:37:01,483 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,483 DEBUG: Row (0,)
2025-02-11 12:37:01,485 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:37:01,485 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 7}
2025-02-11 12:37:01,486 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,486 DEBUG: Row (0,)
2025-02-11 12:37:01,487 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,487 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 7}
2025-02-11 12:37:01,487 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,487 DEBUG: Row (0,)
2025-02-11 12:37:01,488 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:37:01,488 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 7}
2025-02-11 12:37:01,488 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,488 DEBUG: Row (0,)
2025-02-11 12:37:01,489 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,489 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 1}
2025-02-11 12:37:01,489 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,489 DEBUG: Row (0,)
2025-02-11 12:37:01,490 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:37:01,490 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 1}
2025-02-11 12:37:01,490 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,490 DEBUG: Row (0,)
2025-02-11 12:37:01,490 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,491 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 1}
2025-02-11 12:37:01,491 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,491 DEBUG: Row (0,)
2025-02-11 12:37:01,492 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:37:01,492 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 1}
2025-02-11 12:37:01,492 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,492 DEBUG: Row (0,)
2025-02-11 12:37:01,492 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,493 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 2}
2025-02-11 12:37:01,493 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,493 DEBUG: Row (0,)
2025-02-11 12:37:01,493 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:37:01,493 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 2}
2025-02-11 12:37:01,494 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,494 DEBUG: Row (0,)
2025-02-11 12:37:01,494 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,494 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 2}
2025-02-11 12:37:01,495 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,495 DEBUG: Row (0,)
2025-02-11 12:37:01,495 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:37:01,495 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 2}
2025-02-11 12:37:01,496 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,496 DEBUG: Row (0,)
2025-02-11 12:37:01,496 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,496 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 5}
2025-02-11 12:37:01,497 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,497 DEBUG: Row (0,)
2025-02-11 12:37:01,497 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:37:01,497 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 5}
2025-02-11 12:37:01,498 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,498 DEBUG: Row (0,)
2025-02-11 12:37:01,498 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,498 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 5}
2025-02-11 12:37:01,498 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,498 DEBUG: Row (0,)
2025-02-11 12:37:01,499 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:37:01,499 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 5}
2025-02-11 12:37:01,499 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,499 DEBUG: Row (0,)
2025-02-11 12:37:01,500 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,501 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 4}
2025-02-11 12:37:01,502 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,502 DEBUG: Row (0,)
2025-02-11 12:37:01,503 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:37:01,503 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 4}
2025-02-11 12:37:01,503 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,503 DEBUG: Row (0,)
2025-02-11 12:37:01,504 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,504 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 4}
2025-02-11 12:37:01,504 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,504 DEBUG: Row (0,)
2025-02-11 12:37:01,504 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:37:01,505 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 4}
2025-02-11 12:37:01,505 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,505 DEBUG: Row (0,)
2025-02-11 12:37:01,505 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,506 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 3}
2025-02-11 12:37:01,506 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,506 DEBUG: Row (0,)
2025-02-11 12:37:01,506 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:37:01,506 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 3}
2025-02-11 12:37:01,507 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,507 DEBUG: Row (0,)
2025-02-11 12:37:01,507 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,507 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 3}
2025-02-11 12:37:01,507 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,508 DEBUG: Row (0,)
2025-02-11 12:37:01,508 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:37:01,508 INFO: [cached since 295.7s ago] {'coalesce_2': 0, 'project_id_1': 3}
2025-02-11 12:37:01,508 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,508 DEBUG: Row (0,)
2025-02-11 12:37:01,509 INFO: SELECT count(*) AS count_1 
FROM (SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor) AS anon_1
2025-02-11 12:37:01,509 INFO: [cached since 295.7s ago] {}
2025-02-11 12:37:01,509 DEBUG: Col ('count_1',)
2025-02-11 12:37:01,509 DEBUG: Row (5,)
2025-02-11 12:37:01,509 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project JOIN task ON project.id = task.project_id GROUP BY project.id 
HAVING sum(task.story_points * CAST(task.completed AS INTEGER)) < sum(task.story_points)
2025-02-11 12:37:01,510 INFO: [cached since 295.7s ago] {}
2025-02-11 12:37:01,510 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:37:01,510 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:37:01,511 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project JOIN task ON project.id = task.project_id GROUP BY project.id 
HAVING sum(task.story_points * CAST(task.completed AS INTEGER)) >= sum(task.story_points)
2025-02-11 12:37:01,511 INFO: [cached since 295.7s ago] {}
2025-02-11 12:37:01,512 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:37:01,512 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259))
2025-02-11 12:37:01,512 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 12:37:01,512 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project LEFT OUTER JOIN task ON project.id = task.project_id GROUP BY project.id 
HAVING sum(task.story_points * CAST(task.completed AS INTEGER)) IS NULL
2025-02-11 12:37:01,512 INFO: [cached since 295.7s ago] {}
2025-02-11 12:37:01,513 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:37:01,513 DEBUG: Row (3, 'Project Gamma', datetime.date(2024, 3, 1), datetime.date(2024, 10, 31), None, 20, datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), datetime.datetime(2024, 12, 11, 1, 37, 19, 511738))
2025-02-11 12:37:01,513 DEBUG: Row (5, 'Project Delta', datetime.date(2025, 1, 4), datetime.date(2025, 3, 8), None, 0, datetime.datetime(2025, 1, 3, 8, 16, 18, 658051), datetime.datetime(2025, 1, 3, 8, 16, 18, 658058))
2025-02-11 12:37:01,513 DEBUG: Row (4, 'Project Theta', datetime.date(2024, 12, 11), datetime.date(2024, 12, 27), None, 0, datetime.datetime(2024, 12, 12, 19, 26, 42, 642098), datetime.datetime(2024, 12, 12, 19, 26, 42, 642102))
2025-02-11 12:37:01,513 DEBUG: Row (2, 'Project Beta', datetime.date(2024, 2, 1), datetime.date(2024, 11, 30), None, 10, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 12:37:01,514 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project
2025-02-11 12:37:01,514 INFO: [cached since 295.7s ago] {}
2025-02-11 12:37:01,514 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:37:01,514 DEBUG: Row (1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 12:37:01,514 DEBUG: Row (2, 'Project Beta', datetime.date(2024, 2, 1), datetime.date(2024, 11, 30), None, 10, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881))
2025-02-11 12:37:01,514 DEBUG: Row (3, 'Project Gamma', datetime.date(2024, 3, 1), datetime.date(2024, 10, 31), None, 20, datetime.datetime(2024, 12, 11, 1, 37, 19, 511738), datetime.datetime(2024, 12, 11, 1, 37, 19, 511738))
2025-02-11 12:37:01,514 DEBUG: Row (4, 'Project Theta', datetime.date(2024, 12, 11), datetime.date(2024, 12, 27), None, 0, datetime.datetime(2024, 12, 12, 19, 26, 42, 642098), datetime.datetime(2024, 12, 12, 19, 26, 42, 642102))
2025-02-11 12:37:01,514 DEBUG: Row (5, 'Project Delta', datetime.date(2025, 1, 4), datetime.date(2025, 3, 8), None, 0, datetime.datetime(2025, 1, 3, 8, 16, 18, 658051), datetime.datetime(2025, 1, 3, 8, 16, 18, 658058))
2025-02-11 12:37:01,514 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259))
2025-02-11 12:37:01,514 DEBUG: Row (6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298))
2025-02-11 12:37:01,515 INFO: SELECT count(*) AS count_1 
FROM (SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor) AS anon_1
2025-02-11 12:37:01,515 INFO: [cached since 295.7s ago] {}
2025-02-11 12:37:01,515 DEBUG: Col ('count_1',)
2025-02-11 12:37:01,515 DEBUG: Row (5,)
2025-02-11 12:37:01,515 INFO: SELECT count(*) AS count_1 
FROM (SELECT DISTINCT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor JOIN project_contributor ON contributor.id = project_contributor.contributor_id) AS anon_1
2025-02-11 12:37:01,515 INFO: [cached since 295.7s ago] {}
2025-02-11 12:37:01,516 DEBUG: Col ('count_1',)
2025-02-11 12:37:01,516 DEBUG: Row (2,)
2025-02-11 12:37:01,516 INFO: SELECT count(*) AS count_1 
FROM (SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor LEFT OUTER JOIN project_contributor ON contributor.id = project_contributor.contributor_id 
WHERE project_contributor.project_id IS NULL) AS anon_1
2025-02-11 12:37:01,516 INFO: [cached since 295.7s ago] {}
2025-02-11 12:37:01,517 DEBUG: Col ('count_1',)
2025-02-11 12:37:01,517 DEBUG: Row (3,)
2025-02-11 12:37:01,557 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,557 INFO: [cached since 295.8s ago] {'coalesce_2': 0, 'project_id_1': 6}
2025-02-11 12:37:01,558 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,558 DEBUG: Row (439,)
2025-02-11 12:37:01,558 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 6, 'total_story_points': 439, 'timestamp': '2025-02-11T11:37:01.558211+00:00'}
2025-02-11 12:37:01,558 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,558 INFO: [cached since 295.8s ago] {'coalesce_2': 0, 'project_id_1': 7}
2025-02-11 12:37:01,558 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,558 DEBUG: Row (0,)
2025-02-11 12:37:01,558 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 7, 'total_story_points': 0, 'timestamp': '2025-02-11T11:37:01.558882+00:00'}
2025-02-11 12:37:01,559 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,559 INFO: [cached since 295.8s ago] {'coalesce_2': 0, 'project_id_1': 1}
2025-02-11 12:37:01,559 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,559 DEBUG: Row (0,)
2025-02-11 12:37:01,559 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 1, 'total_story_points': 0, 'timestamp': '2025-02-11T11:37:01.559531+00:00'}
2025-02-11 12:37:01,559 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,559 INFO: [cached since 295.8s ago] {'coalesce_2': 0, 'project_id_1': 2}
2025-02-11 12:37:01,560 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,560 DEBUG: Row (0,)
2025-02-11 12:37:01,560 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 2, 'total_story_points': 0, 'timestamp': '2025-02-11T11:37:01.560147+00:00'}
2025-02-11 12:37:01,560 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,560 INFO: [cached since 295.8s ago] {'coalesce_2': 0, 'project_id_1': 5}
2025-02-11 12:37:01,560 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,560 DEBUG: Row (0,)
2025-02-11 12:37:01,560 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 5, 'total_story_points': 0, 'timestamp': '2025-02-11T11:37:01.560759+00:00'}
2025-02-11 12:37:01,560 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,560 INFO: [cached since 295.8s ago] {'coalesce_2': 0, 'project_id_1': 4}
2025-02-11 12:37:01,561 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,561 DEBUG: Row (0,)
2025-02-11 12:37:01,561 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 4, 'total_story_points': 0, 'timestamp': '2025-02-11T11:37:01.561420+00:00'}
2025-02-11 12:37:01,561 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:01,561 INFO: [cached since 295.8s ago] {'coalesce_2': 0, 'project_id_1': 3}
2025-02-11 12:37:01,561 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:01,561 DEBUG: Row (0,)
2025-02-11 12:37:01,562 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 3, 'total_story_points': 0, 'timestamp': '2025-02-11T11:37:01.562024+00:00'}
2025-02-11 12:37:01,562 INFO: ROLLBACK
2025-02-11 12:37:01,562 INFO: 127.0.0.1 - - [11/Feb/2025 12:37:01] "GET /dashboard HTTP/1.1" 200 -
2025-02-11 12:37:01,584 INFO: 127.0.0.1 - - [11/Feb/2025 12:37:01] "[36mGET /static/custom.css HTTP/1.1[0m" 304 -
2025-02-11 12:37:01,585 INFO: 127.0.0.1 - - [11/Feb/2025 12:37:01] "[36mGET /static/custom.js HTTP/1.1[0m" 304 -
2025-02-11 12:37:01,596 INFO: 127.0.0.1 - - [11/Feb/2025 12:37:01] "[36mGET /static/images/background.svg HTTP/1.1[0m" 304 -
2025-02-11 12:37:04,427 INFO: BEGIN (implicit)
2025-02-11 12:37:04,428 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.name = %(name_1)s 
 LIMIT %(param_1)s
2025-02-11 12:37:04,428 INFO: [cached since 266.5s ago] {'name_1': 'PMS - Feature Requests', 'param_1': 1}
2025-02-11 12:37:04,429 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:37:04,429 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259))
2025-02-11 12:37:04,430 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor
2025-02-11 12:37:04,430 INFO: [cached since 266.5s ago] {}
2025-02-11 12:37:04,431 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:37:04,431 DEBUG: Row (1, 'Alice')
2025-02-11 12:37:04,432 DEBUG: Row (2, 'Bob')
2025-02-11 12:37:04,432 DEBUG: Row (3, 'Charlie')
2025-02-11 12:37:04,432 DEBUG: Row (4, 'Fredrik')
2025-02-11 12:37:04,432 DEBUG: Row (5, 'Fredrik Cederborg')
2025-02-11 12:37:04,436 INFO: SELECT project.id AS project_id, project.name AS project_name, project.start_date AS project_start_date, project.end_date AS project_end_date, project.scope AS project_scope, project.completed_story_points AS project_completed_story_points, project.created_at AS project_created_at, project.updated_at AS project_updated_at 
FROM project 
WHERE project.name = %(name_1)s 
 LIMIT %(param_1)s
2025-02-11 12:37:04,436 INFO: [cached since 266.5s ago] {'name_1': 'PMS - Feature Requests', 'param_1': 1}
2025-02-11 12:37:04,436 DEBUG: Col ('project_id', 'project_name', 'project_start_date', 'project_end_date', 'project_scope', 'project_completed_story_points', 'project_created_at', 'project_updated_at')
2025-02-11 12:37:04,437 DEBUG: Row (7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259))
2025-02-11 12:37:04,437 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:04,438 INFO: [cached since 298.7s ago] {'coalesce_2': 0, 'project_id_1': 7}
2025-02-11 12:37:04,438 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:04,438 DEBUG: Row (0,)
2025-02-11 12:37:04,439 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 7, 'total_story_points': 0, 'timestamp': '2025-02-11T11:37:04.439082+00:00'}
2025-02-11 12:37:04,439 INFO: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE %(param_1)s = task.project_id
2025-02-11 12:37:04,439 INFO: [cached since 266.5s ago] {'param_1': 7}
2025-02-11 12:37:04,440 DEBUG: Col ('task_id', 'task_name', 'task_sort_order', 'task_description', 'task_task_type', 'task_is_archived', 'task_completed', 'task_status', 'task_parent_id', 'task_project_id', 'task_contributor_id', 'task_story_points', 'task_created_at', 'task_updated_at', 'task_completed_date')
2025-02-11 12:37:04,440 DEBUG: Row (265, 'smooth transition for toggles', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 27, 23, 422612), datetime.datetime(2025, 2, 10, 8, 46, 55, 831743), None)
2025-02-11 12:37:04,440 DEBUG: Row (266, 'highlight the nested tasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 28, 30, 382949), datetime.datetime(2025, 2, 10, 8, 47, 4, 382929), None)
2025-02-11 12:37:04,440 DEBUG: Row (264, 'close all / open all childtasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 25, 20, 101418), datetime.datetime(2025, 2, 10, 8, 47, 14, 915970), None)
2025-02-11 12:37:04,440 DEBUG: Row (267, 'improvements to toggles and nested tasks', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 29, 12, 464594), datetime.datetime(2025, 2, 10, 8, 47, 24, 581680), None)
2025-02-11 12:37:04,441 DEBUG: Row (280, 'logging (task and project history)', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 37, 44, 435112), datetime.datetime(2025, 2, 10, 8, 28, 28, 947805), None)
2025-02-11 12:37:04,441 DEBUG: Row (275, 'add sprints, cycles', 0, 'Make naming customizable', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 48, 52, 680022), datetime.datetime(2025, 2, 10, 8, 38, 37, 622196), None)
2025-02-11 12:37:04,441 DEBUG: Row (274, 'add support for goals, initiatives, okr´s', 0, 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 46, 27, 204912), datetime.datetime(2025, 2, 10, 8, 28, 17, 663922), None)
2025-02-11 12:37:04,441 DEBUG: Row (272, 'implement a markdown text editor like notion', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 28, 18, 300231), datetime.datetime(2025, 2, 10, 8, 28, 39, 669255), None)
2025-02-11 12:37:04,441 DEBUG: Row (276, 'add support for priority', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 49, 26, 189497), datetime.datetime(2025, 2, 10, 8, 28, 47, 447612), None)
2025-02-11 12:37:04,441 DEBUG: Row (271, 'make sure dynamically added rows has the exact same styling and includes every element', 0, 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 21, 7, 108431), datetime.datetime(2025, 2, 10, 8, 38, 47, 340105), None)
2025-02-11 12:37:04,441 DEBUG: Row (281, 'add high level plan', 0, 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 27, 1, 218606), datetime.datetime(2025, 2, 10, 8, 38, 54, 754760), None)
2025-02-11 12:37:04,441 DEBUG: Row (278, 'search feature for tasks list', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 3, 369833), datetime.datetime(2025, 2, 10, 8, 39, 4, 5957), None)
2025-02-11 12:37:04,441 DEBUG: Row (279, 'github integration', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 38, 238202), datetime.datetime(2025, 2, 10, 8, 39, 24, 168451), None)
2025-02-11 12:37:04,442 DEBUG: Row (277, 'custom task workflow statuses', 0, 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- ... (780 characters truncated) ...  tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 16, 3, 352588), datetime.datetime(2025, 2, 10, 8, 38, 28, 123328), None)
2025-02-11 12:37:04,442 DEBUG: Row (284, 'add type "issue/bug"', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 42, 27, 719439), datetime.datetime(2025, 2, 10, 9, 42, 27, 720908), None)
2025-02-11 12:37:04,442 DEBUG: Row (283, 'fix update title', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 58, 769700), datetime.datetime(2025, 2, 10, 8, 46, 47, 282087), None)
2025-02-11 12:37:04,442 DEBUG: Row (286, 'add support for labels/tags', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 46, 23, 985620), datetime.datetime(2025, 2, 10, 9, 46, 23, 987564), None)
2025-02-11 12:37:04,442 DEBUG: Row (287, 'when moving a parent item to another project make sure the subtasks are moved as well', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 48, 31, 986870), datetime.datetime(2025, 2, 10, 9, 48, 31, 988859), None)
2025-02-11 12:37:04,442 DEBUG: Row (288, 'when trying to move subtask to another project, make sure a warning is displayed', 0, 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be l ... (312 characters truncated) ... , Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 54, 36, 297869), datetime.datetime(2025, 2, 10, 8, 54, 51, 840686), None)
2025-02-11 12:37:04,442 DEBUG: Row (291, 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 9, 52, 988609), datetime.datetime(2025, 2, 10, 10, 9, 52, 997455), None)
2025-02-11 12:37:04,442 DEBUG: Row (293, 'click on title should copy the task title and id to clipboard', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 16, 33, 508209), datetime.datetime(2025, 2, 10, 10, 16, 33, 510414), None)
2025-02-11 12:37:04,556 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:04,557 INFO: [cached since 298.8s ago] {'coalesce_2': 0, 'project_id_1': 7}
2025-02-11 12:37:04,557 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:04,557 DEBUG: Row (0,)
2025-02-11 12:37:04,557 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Total Story Points, Data: {'project_id': 7, 'total_story_points': 0, 'timestamp': '2025-02-11T11:37:04.557750+00:00'}
2025-02-11 12:37:04,557 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s
2025-02-11 12:37:04,557 INFO: [cached since 298.8s ago] {'coalesce_2': 0, 'project_id_1': 7}
2025-02-11 12:37:04,558 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:04,558 DEBUG: Row (0,)
2025-02-11 12:37:04,558 INFO: SELECT coalesce(sum(task.story_points), %(coalesce_2)s) AS coalesce_1 
FROM task 
WHERE task.project_id = %(project_id_1)s AND task.completed = true
2025-02-11 12:37:04,558 INFO: [cached since 298.8s ago] {'coalesce_2': 0, 'project_id_1': 7}
2025-02-11 12:37:04,558 DEBUG: Col ('coalesce_1',)
2025-02-11 12:37:04,558 DEBUG: Row (0,)
2025-02-11 12:37:04,558 INFO: Caller: Project Model, Callee: TaskService, Action: Calculate Completion Percentage, Data: {'project_id': 7, 'completion_percentage': 0}
2025-02-11 12:37:04,559 INFO: SELECT contributor.id AS contributor_id, contributor.name AS contributor_name 
FROM contributor, project_contributor 
WHERE %(param_1)s = project_contributor.project_id AND contributor.id = project_contributor.contributor_id
2025-02-11 12:37:04,559 INFO: [cached since 266.5s ago] {'param_1': 7}
2025-02-11 12:37:04,559 DEBUG: Col ('contributor_id', 'contributor_name')
2025-02-11 12:37:04,560 INFO: ROLLBACK
2025-02-11 12:37:04,560 INFO: 127.0.0.1 - - [11/Feb/2025 12:37:04] "GET /project/PMS%20-%20Feature%20Requests HTTP/1.1" 200 -
2025-02-11 12:37:04,595 INFO: 127.0.0.1 - - [11/Feb/2025 12:37:04] "[36mGET /static/custom.js HTTP/1.1[0m" 304 -
2025-02-11 12:37:04,595 INFO: 127.0.0.1 - - [11/Feb/2025 12:37:04] "[36mGET /static/custom.css HTTP/1.1[0m" 304 -
2025-02-11 12:37:04,605 INFO: 127.0.0.1 - - [11/Feb/2025 12:37:04] "[36mGET /static/images/background.svg HTTP/1.1[0m" 304 -
2025-02-11 12:37:15,246 INFO: Entering list_tasks route...
2025-02-11 12:37:15,246 DEBUG: Filters used: {'is_archived': False}
2025-02-11 12:37:15,247 DEBUG: Applying filters: {'is_archived': False}
2025-02-11 12:37:15,254 DEBUG: Generated query: SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name, project_1.id AS project_1_id, project_1.name AS project_1_name, project_1.start_date AS project_1_start_date, project_1.end_date AS project_1_end_date, project_1.scope AS project_1_scope, project_1.completed_story_points AS project_1_completed_story_points, project_1.created_at AS project_1_created_at, project_1.updated_at AS project_1_updated_at, contributor_2.id AS contributor_2_id, contributor_2.name AS contributor_2_name 
FROM task LEFT OUTER JOIN task AS task_1 ON task.id = task_1.parent_id LEFT OUTER JOIN project AS project_1 ON project_1.id = task.project_id LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project_1.id = project_contributor_1.project_id LEFT OUTER JOIN contributor AS contributor_2 ON contributor_2.id = task.contributor_id 
WHERE task.is_archived = false ORDER BY task.sort_order
2025-02-11 12:37:15,254 INFO: BEGIN (implicit)
2025-02-11 12:37:15,255 INFO: SELECT anon_1.task_id AS anon_1_task_id, anon_1.task_name AS anon_1_task_name, anon_1.task_sort_order AS anon_1_task_sort_order, anon_1.task_description AS anon_1_task_description, anon_1.task_task_type AS anon_1_task_task_type, anon_1.task_is_archived AS anon_1_task_is_archived, anon_1.task_completed AS anon_1_task_completed, anon_1.task_status AS anon_1_task_status, anon_1.task_parent_id AS anon_1_task_parent_id, anon_1.task_project_id AS anon_1_task_project_id, anon_1.task_contributor_id AS anon_1_task_contributor_id, anon_1.task_story_points AS anon_1_task_story_points, anon_1.task_created_at AS anon_1_task_created_at, anon_1.task_updated_at AS anon_1_task_updated_at, anon_1.task_completed_date AS anon_1_task_completed_date, task_1.id AS task_1_id, task_1.name AS task_1_name, task_1.sort_order AS task_1_sort_order, task_1.description AS task_1_description, task_1.task_type AS task_1_task_type, task_1.is_archived AS task_1_is_archived, task_1.completed AS task_1_completed, task_1.status AS task_1_status, task_1.parent_id AS task_1_parent_id, task_1.project_id AS task_1_project_id, task_1.contributor_id AS task_1_contributor_id, task_1.story_points AS task_1_story_points, task_1.created_at AS task_1_created_at, task_1.updated_at AS task_1_updated_at, task_1.completed_date AS task_1_completed_date, contributor_1.id AS contributor_1_id, contributor_1.name AS contributor_1_name, project_1.id AS project_1_id, project_1.name AS project_1_name, project_1.start_date AS project_1_start_date, project_1.end_date AS project_1_end_date, project_1.scope AS project_1_scope, project_1.completed_story_points AS project_1_completed_story_points, project_1.created_at AS project_1_created_at, project_1.updated_at AS project_1_updated_at, contributor_2.id AS contributor_2_id, contributor_2.name AS contributor_2_name 
FROM (SELECT task.id AS task_id, task.name AS task_name, task.sort_order AS task_sort_order, task.description AS task_description, task.task_type AS task_task_type, task.is_archived AS task_is_archived, task.completed AS task_completed, task.status AS task_status, task.parent_id AS task_parent_id, task.project_id AS task_project_id, task.contributor_id AS task_contributor_id, task.story_points AS task_story_points, task.created_at AS task_created_at, task.updated_at AS task_updated_at, task.completed_date AS task_completed_date 
FROM task 
WHERE task.is_archived = false ORDER BY task.sort_order 
 LIMIT %(param_1)s OFFSET %(param_2)s) AS anon_1 LEFT OUTER JOIN task AS task_1 ON anon_1.task_id = task_1.parent_id LEFT OUTER JOIN project AS project_1 ON project_1.id = anon_1.task_project_id LEFT OUTER JOIN (project_contributor AS project_contributor_1 JOIN contributor AS contributor_1 ON contributor_1.id = project_contributor_1.contributor_id) ON project_1.id = project_contributor_1.project_id LEFT OUTER JOIN contributor AS contributor_2 ON contributor_2.id = anon_1.task_contributor_id ORDER BY anon_1.task_sort_order
2025-02-11 12:37:15,255 INFO: [cached since 2703s ago] {'param_1': 110, 'param_2': 0}
2025-02-11 12:37:15,259 DEBUG: Col ('anon_1_task_id', 'anon_1_task_name', 'anon_1_task_sort_order', 'anon_1_task_description', 'anon_1_task_task_type', 'anon_1_task_is_archived', 'anon_1_task_completed', 'anon_1_task_status', 'anon_1_task_parent_id', 'anon_1_task_project_id', 'anon_1_task_contributor_id', 'anon_1_task_story_points', 'anon_1_task_created_at', 'anon_1_task_updated_at', 'anon_1_task_completed_date', 'task_1_id', 'task_1_name', 'task_1_sort_order', 'task_1_description', 'task_1_task_type', 'task_1_is_archived', 'task_1_completed', 'task_1_status', 'task_1_parent_id', 'task_1_project_id', 'task_1_contributor_id', 'task_1_story_points', 'task_1_created_at', 'task_1_updated_at', 'task_1_completed_date', 'contributor_1_id', 'contributor_1_name', 'project_1_id', 'project_1_name', 'project_1_start_date', 'project_1_end_date', 'project_1_scope', 'project_1_completed_story_points', 'project_1_created_at', 'project_1_updated_at', 'contributor_2_id', 'contributor_2_name')
2025-02-11 12:37:15,261 DEBUG: Row (290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,261 DEBUG: Row (298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None, 299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 12:37:15,262 DEBUG: Row (275, 'add sprints, cycles', 0, 'Make naming customizable', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 48, 52, 680022), datetime.datetime(2025, 2, 10, 8, 38, 37, 622196), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,262 DEBUG: Row (276, 'add support for priority', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 49, 26, 189497), datetime.datetime(2025, 2, 10, 8, 28, 47, 447612), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,262 DEBUG: Row (264, 'close all / open all childtasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 25, 20, 101418), datetime.datetime(2025, 2, 10, 8, 47, 14, 915970), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,262 DEBUG: Row (285, 'add text truncation to project names in task list', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 45, 47, 27805), datetime.datetime(2025, 2, 10, 9, 45, 47, 29729), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,262 DEBUG: Row (257, 'Update Task API Integration', 0, "- Integrate the /tasks/<task_id>/status endpoint to update the task's status dynamically. \n- Handle API response and errors.", 'Subtask', False, False, 'Not Started', 240, 6, 5, 3, datetime.datetime(2025, 2, 5, 22, 55, 49, 566819), datetime.datetime(2025, 2, 5, 22, 18, 17, 807154), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,262 DEBUG: Row (294, 'issue: task table filters not working', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 19, 21, 22598), datetime.datetime(2025, 2, 10, 10, 19, 21, 24676), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,262 DEBUG: Row (267, 'improvements to toggles and nested tasks', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 29, 12, 464594), datetime.datetime(2025, 2, 10, 8, 47, 24, 581680), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,263 DEBUG: Row (283, 'fix update title', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 58, 769700), datetime.datetime(2025, 2, 10, 8, 46, 47, 282087), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,263 DEBUG: Row (271, 'make sure dynamically added rows has the exact same styling and includes every element', 0, 'Missing elements:\n- Open link\n- Default project\n- Project name should be inside a pill\n- Task type should be in a pill\n- Estimations should be 0, not N/A\n- Make sure font size is matching\n- status should have the dropdown inside a pill\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 21, 7, 108431), datetime.datetime(2025, 2, 10, 8, 38, 47, 340105), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,263 DEBUG: Row (273, 'disable parent task selector in epics', 0, 'and add text, Epic can´t have parent tasks', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 0, 45, 20, 740910), datetime.datetime(2025, 2, 10, 8, 39, 17, 639890), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,263 DEBUG: Row (269, 'fix styling for sweetalert', 0, '', 'User Story', False, False, 'In Progress', None, 6, None, 0, datetime.datetime(2025, 2, 8, 15, 54, 56, 717846), datetime.datetime(2025, 2, 10, 8, 39, 32, 172437), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,263 DEBUG: Row (286, 'add support for labels/tags', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 46, 23, 985620), datetime.datetime(2025, 2, 10, 9, 46, 23, 987564), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,263 DEBUG: Row (299, 'example sub task with parent user story 298', 0, 'Test update 1\nTest update 2\nTest update 3', 'Subtask', False, False, 'Not Started', 298, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 42, 38, 905700), datetime.datetime(2025, 2, 10, 23, 23, 8, 671464), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 12:37:15,263 DEBUG: Row (266, 'highlight the nested tasks', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 28, 30, 382949), datetime.datetime(2025, 2, 10, 8, 47, 4, 382929), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,263 DEBUG: Row (279, 'github integration', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 38, 238202), datetime.datetime(2025, 2, 10, 8, 39, 24, 168451), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,264 DEBUG: Row (289, 'issue: parent task is lost when updating task', 0, '', 'Subtask', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 56, 25, 273984), datetime.datetime(2025, 2, 10, 9, 12, 47, 626993), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,264 DEBUG: Row (278, 'search feature for tasks list', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 36, 3, 369833), datetime.datetime(2025, 2, 10, 8, 39, 4, 5957), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,264 DEBUG: Row (281, 'add high level plan', 0, 'Add some sort of high level plan that aims to keep PM/PO´s on track and not get lost into the details of an overwhelminly large backlog', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 27, 1, 218606), datetime.datetime(2025, 2, 10, 8, 38, 54, 754760), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,264 DEBUG: Row (287, 'when moving a parent item to another project make sure the subtasks are moved as well', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 48, 31, 986870), datetime.datetime(2025, 2, 10, 9, 48, 31, 988859), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,264 DEBUG: Row (272, 'implement a markdown text editor like notion', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 28, 18, 300231), datetime.datetime(2025, 2, 10, 8, 28, 39, 669255), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,265 DEBUG: Row (293, 'click on title should copy the task title and id to clipboard', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 16, 33, 508209), datetime.datetime(2025, 2, 10, 10, 16, 33, 510414), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,265 DEBUG: Row (277, 'custom task workflow statuses', 0, 'Divided into three basic system statuses\n- Not started\n-- Custom status\n-- Custom status\n-- Custom status\n- Planning (new)\n-- Custom status\n-- ... (780 characters truncated) ...  tags (labels) for this)\nExample:\nJob search\n- Interested\n- Applied\n- Respons\n- Interview 1\n- Interview 2\n- Interview 3\n- Declined\n\n\n\n\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 16, 3, 352588), datetime.datetime(2025, 2, 10, 8, 38, 28, 123328), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,265 DEBUG: Row (274, 'add support for goals, initiatives, okr´s', 0, 'Make the naming of the goals customizable\n\nInitiatives are larger, strategic product efforts that set the direction of your company. They are comprised of all projects that align with the goals of the initiative and allow you to monitor their progress at scale.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 0, 46, 27, 204912), datetime.datetime(2025, 2, 10, 8, 28, 17, 663922), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,265 DEBUG: Row (280, 'logging (task and project history)', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 7, 37, 44, 435112), datetime.datetime(2025, 2, 10, 8, 28, 28, 947805), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,266 DEBUG: Row (282, 'implement same task list in projects but filtered on project', 0, '', 'Epic', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 8, 41, 17, 786154), datetime.datetime(2025, 2, 10, 9, 41, 17, 787861), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,266 DEBUG: Row (296, 'issue: contributor is lost after updating task', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 26, 43, 881947), datetime.datetime(2025, 2, 10, 10, 26, 43, 884004), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,266 DEBUG: Row (288, 'when trying to move subtask to another project, make sure a warning is displayed', 0, 'When trying to move subtask to another project, make sure a warning is displayed "If you move this task the relationship to the parent task will be l ... (312 characters truncated) ... , Date and time formats\n\nAnd the user stories are in different projects.\n\nCheck what best practice are for these cases. Research other systems.\n', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 54, 36, 297869), datetime.datetime(2025, 2, 10, 8, 54, 51, 840686), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,266 DEBUG: Row (284, 'add type "issue/bug"', 0, '', 'Epic', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 8, 42, 27, 719439), datetime.datetime(2025, 2, 10, 9, 42, 27, 720908), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,267 DEBUG: Row (295, 'issue: drag and drop errors', 0, '1. Drag and drop without chaning parent task\n2. Drag and drop to new parent task\n', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 22, 54, 461413), datetime.datetime(2025, 2, 10, 10, 22, 54, 462542), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,268 DEBUG: Row (297, 'example parent epic', 0, '', 'Epic', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 39, 51, 620509), datetime.datetime(2025, 2, 10, 10, 39, 51, 622712), None, 298, 'example user story with parent epic 297', 0, '', 'User Story', False, False, 'Not Started', 297, 1, None, 0, datetime.datetime(2025, 2, 10, 9, 41, 1, 907455), datetime.datetime(2025, 2, 10, 14, 59, 4, 142570), None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 12:37:15,268 DEBUG: Row (292, 'issue: assigning contributor does not work', 0, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 11, 12, 273779), datetime.datetime(2025, 2, 10, 10, 11, 12, 274809), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,269 DEBUG: Row (265, 'smooth transition for toggles', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 8, 2, 27, 23, 422612), datetime.datetime(2025, 2, 10, 8, 46, 55, 831743), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,269 DEBUG: Row (270, 'the newest task', 0, '', 'Subtask', False, False, 'Not Started', None, 1, None, 0, datetime.datetime(2025, 2, 10, 0, 7, 34, 368035), datetime.datetime(2025, 2, 10, 1, 7, 34, 372478), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 1, 'Project Alpha', datetime.date(2024, 1, 1), datetime.date(2024, 12, 31), None, 0, datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), datetime.datetime(2024, 12, 11, 1, 16, 28, 688881), None, None)
2025-02-11 12:37:15,269 DEBUG: Row (291, 'add dropdowns in task list for changing: project, assigned to, estimate and task type (labels/tags)', 0, '', 'User Story', False, False, 'Not Started', None, 7, None, 0, datetime.datetime(2025, 2, 10, 9, 9, 52, 988609), datetime.datetime(2025, 2, 10, 10, 9, 52, 997455), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 7, 'PMS - Feature Requests', datetime.date(2025, 2, 10), datetime.date(2029, 12, 10), None, 0, datetime.datetime(2025, 2, 10, 9, 27, 36, 160249), datetime.datetime(2025, 2, 10, 9, 27, 36, 160259), None, None)
2025-02-11 12:37:15,270 DEBUG: Row (136, 'Page scroll should stay in position when reloading', 2, '', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 16, 18, 21, 50, 187247), datetime.datetime(2025, 1, 16, 19, 22, 36, 214901), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,270 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,270 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,271 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,271 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 290, 'issue: error when changing task type and', 0, 'issue: error when changing task type and parent task before saving', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 2, 10, 9, 0, 3, 417734), datetime.datetime(2025, 2, 10, 9, 15, 9, 284969), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,271 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,272 DEBUG: Row (130, 'Implement the Map of Task Relationships solution for drag-and-drop', 3, 'Fully implement the Map of Task Relationships (Precomputed) solution for the drag-and-drop functionality.', 'User Story', False, False, 'Not Started', None, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 93022), datetime.datetime(2025, 1, 16, 19, 22, 36, 216705), None, 135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,272 DEBUG: Row (133, 'Step 4: Enhance Logging in models.py', 4, 'Update the Task model to:\n\t1.\tLog parent_id changes during updates.\n\t2.\tValidate hierarchy changes with logging for circular dependencies.\n\nu ... (7099 characters truncated) ... ry step in detecting circular dependencies.\n\t5.\tHierarchy Validation Logging:\n\t•\tLogs checks for hierarchy rules in _validate_hierarchy_change.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 340041), datetime.datetime(2025, 1, 16, 19, 22, 36, 219710), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,273 DEBUG: Row (132, 'Step 1: Update tasks_table_interactions.js', 5, '1. Precompute the task relationship map (taskParentMap) during initialization.\n2. Dynamically update the map when drag-and-drop occurs.\n3. Use the  ... (5413 characters truncated) ... t to the backend with id, sort_order, and parent_id.\n\t4.\tCSRF Token:\n\t•\tCSRF protection is ensured by passing the token to the request headers.', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 44, 8, 338301), datetime.datetime(2025, 2, 6, 21, 59, 17, 417466), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,273 DEBUG: Row (134, 'Step 2: Update the Backend in routes.py', 6, 'Step 2 involves ensuring the updated relationships (parent-child hierarchy and sort order) are accurately submitted to the backend in the payload.\n\ ... (8854 characters truncated) ... \tError Handling:\n\t•\tCaptures and logs exceptions during processing or committing.\n\t•\tProvides meaningful error messages to the frontend.\n\n\n', 'Subtask', False, False, 'Completed', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 348853), datetime.datetime(2025, 2, 6, 21, 59, 21, 617065), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,273 DEBUG: Row (131, 'Step 5: Update utils.py', 7, 'Ensure task filtering and querying handle parent-child relationships properly, and provide utility functions for debugging or data validation.\n\nCha ... (5732 characters truncated) ... lationships exist.\n\t4.\tget_all_task_ids_with_parents:\n\t•\tProvides a lightweight utility to fetch all tasks with their parent IDs for debugging.', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 41, 28, 91824), datetime.datetime(2025, 1, 16, 19, 22, 36, 236691), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,273 DEBUG: Row (135, 'Step 3: Update list.html', 8, 'Ensure that the task table properly renders data-task-id and data-parent-id attributes to enable JavaScript functionality.\n\nCurrent html already in ... (4578 characters truncated) ... sks -->\n            {% for task in tasks if not task.parent_id %}\n                {{ render_task(task, tasks) }}\n            {% endfor %}\n```\n\n', 'Subtask', False, False, 'Not Started', 130, 6, None, 0, datetime.datetime(2025, 1, 15, 9, 46, 29, 349784), datetime.datetime(2025, 1, 16, 19, 22, 36, 238473), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,274 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None, 63, 'Add OAuth integration for GitHub Login', 14, 'Implement GitHub Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 246358), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,274 DEBUG: Row (82, 'Implement Third-Party Authentication', 9, 'Introduce Google and GitHub login functionality for user registration and authentication.\n\nImplementing user registration with Google Login or GitH ... (1227 characters truncated) ... egration (if applicable):\n\t•\tAdd “Login with Google” or “Login with GitHub” buttons.\n\t•\tRedirect to your backend’s OAuth endpoint when clicked.', 'Epic', False, False, 'Not Started', None, 6, 5, 8, datetime.datetime(2025, 1, 7, 12, 15, 54, 291625), datetime.datetime(2025, 1, 16, 19, 22, 36, 239866), None, 62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), 5, 'Fredrik Cederborg')
2025-02-11 12:37:15,274 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,274 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,275 DEBUG: Row (62, 'Add OAuth integration for Google Login', 10, 'Implement Google Login for user registration and authentication using OAuth 2.0.', 'User Story', False, False, 'Not Started', 82, 6, None, 8, datetime.datetime(2025, 1, 7, 11, 39, 12, 249531), datetime.datetime(2025, 1, 16, 19, 22, 36, 241200), None, 67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,275 DEBUG: Row (64, 'Setup project credentials for Google API', 11, 'Generate client ID and secret from Google API Console for your application.', 'Subtask', False, False, 'Not Started', 62, 6, None, 3, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 242497), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,275 DEBUG: Row (67, 'Test Google OAuth flow', 12, 'Verify the OAuth flow using test accounts and check the token exchange.', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 12, 3, 52, 62783), datetime.datetime(2025, 1, 16, 19, 22, 36, 243780), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
2025-02-11 12:37:15,275 DEBUG: Row (65, 'Implement backend endpoints for Google OAuth', 13, 'Develop endpoints to handle Google OAuth flow (auth, token exchange).', 'Subtask', False, False, 'Not Started', 62, 6, None, 5, datetime.datetime(2025, 1, 7, 11, 58, 39, 269319), datetime.datetime(2025, 1, 16, 19, 22, 36, 244932), None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, 5, 'Fredrik Cederborg', 6, 'PMS - Backlog', datetime.date(2025, 1, 3), datetime.date(2025, 1, 8), None, 0, datetime.datetime(2025, 1, 3, 23, 58, 22, 327293), datetime.datetime(2025, 1, 3, 23, 58, 22, 327298), None, None)
